// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DcnInterfaceState The state of a network port.
// Example: up
//
// swagger:model dcn_interface_state
type DcnInterfaceState string

func NewDcnInterfaceState(value DcnInterfaceState) *DcnInterfaceState {
	return &value
}

// Pointer returns a pointer to a freshly-allocated DcnInterfaceState.
func (m DcnInterfaceState) Pointer() *DcnInterfaceState {
	return &m
}

const (

	// DcnInterfaceStateUp captures enum value "up"
	DcnInterfaceStateUp DcnInterfaceState = "up"

	// DcnInterfaceStateDown captures enum value "down"
	DcnInterfaceStateDown DcnInterfaceState = "down"
)

// for schema
var dcnInterfaceStateEnum []interface{}

func init() {
	var res []DcnInterfaceState
	if err := json.Unmarshal([]byte(`["up","down"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dcnInterfaceStateEnum = append(dcnInterfaceStateEnum, v)
	}
}

func (m DcnInterfaceState) validateDcnInterfaceStateEnum(path, location string, value DcnInterfaceState) error {
	if err := validate.EnumCase(path, location, value, dcnInterfaceStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this dcn interface state
func (m DcnInterfaceState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDcnInterfaceStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this dcn interface state based on context it is used
func (m DcnInterfaceState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
