// Code generated by go-swagger; DO NOT EDIT.

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewAggregateCollectionGetParams creates a new AggregateCollectionGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAggregateCollectionGetParams() *AggregateCollectionGetParams {
	return &AggregateCollectionGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAggregateCollectionGetParamsWithTimeout creates a new AggregateCollectionGetParams object
// with the ability to set a timeout on a request.
func NewAggregateCollectionGetParamsWithTimeout(timeout time.Duration) *AggregateCollectionGetParams {
	return &AggregateCollectionGetParams{
		timeout: timeout,
	}
}

// NewAggregateCollectionGetParamsWithContext creates a new AggregateCollectionGetParams object
// with the ability to set a context for a request.
func NewAggregateCollectionGetParamsWithContext(ctx context.Context) *AggregateCollectionGetParams {
	return &AggregateCollectionGetParams{
		Context: ctx,
	}
}

// NewAggregateCollectionGetParamsWithHTTPClient creates a new AggregateCollectionGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewAggregateCollectionGetParamsWithHTTPClient(client *http.Client) *AggregateCollectionGetParams {
	return &AggregateCollectionGetParams{
		HTTPClient: client,
	}
}

/*
AggregateCollectionGetParams contains all the parameters to send to the API endpoint

	for the aggregate collection get operation.

	Typically these are written to a http.Request.
*/
type AggregateCollectionGetParams struct {

	/* Tags.

	   Filter by _tags
	*/
	Tags *string

	/* BlockStorageHybridCacheDiskCount.

	   Filter by block_storage.hybrid_cache.disk_count
	*/
	BlockStorageHybridCacheDiskCount *int64

	/* BlockStorageHybridCacheDiskType.

	   Filter by block_storage.hybrid_cache.disk_type
	*/
	BlockStorageHybridCacheDiskType *string

	/* BlockStorageHybridCacheEnabled.

	   Filter by block_storage.hybrid_cache.enabled
	*/
	BlockStorageHybridCacheEnabled *bool

	/* BlockStorageHybridCacheRaidSize.

	   Filter by block_storage.hybrid_cache.raid_size
	*/
	BlockStorageHybridCacheRaidSize *int64

	/* BlockStorageHybridCacheRaidType.

	   Filter by block_storage.hybrid_cache.raid_type
	*/
	BlockStorageHybridCacheRaidType *string

	/* BlockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount.

	   Filter by block_storage.hybrid_cache.simulated_raid_groups.added_data_disk_count
	*/
	BlockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount *int64

	/* BlockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount.

	   Filter by block_storage.hybrid_cache.simulated_raid_groups.added_parity_disk_count
	*/
	BlockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount *int64

	/* BlockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount.

	   Filter by block_storage.hybrid_cache.simulated_raid_groups.existing_data_disk_count
	*/
	BlockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount *int64

	/* BlockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount.

	   Filter by block_storage.hybrid_cache.simulated_raid_groups.existing_parity_disk_count
	*/
	BlockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount *int64

	/* BlockStorageHybridCacheSimulatedRaidGroupsIsPartition.

	   Filter by block_storage.hybrid_cache.simulated_raid_groups.is_partition
	*/
	BlockStorageHybridCacheSimulatedRaidGroupsIsPartition *bool

	/* BlockStorageHybridCacheSimulatedRaidGroupsName.

	   Filter by block_storage.hybrid_cache.simulated_raid_groups.name
	*/
	BlockStorageHybridCacheSimulatedRaidGroupsName *string

	/* BlockStorageHybridCacheSimulatedRaidGroupsUsableSize.

	   Filter by block_storage.hybrid_cache.simulated_raid_groups.usable_size
	*/
	BlockStorageHybridCacheSimulatedRaidGroupsUsableSize *int64

	/* BlockStorageHybridCacheSize.

	   Filter by block_storage.hybrid_cache.size
	*/
	BlockStorageHybridCacheSize *int64

	/* BlockStorageHybridCacheStoragePoolsAllocationUnitsCount.

	   Filter by block_storage.hybrid_cache.storage_pools.allocation_units_count
	*/
	BlockStorageHybridCacheStoragePoolsAllocationUnitsCount *int64

	/* BlockStorageHybridCacheStoragePoolsStoragePoolName.

	   Filter by block_storage.hybrid_cache.storage_pools.storage_pool.name
	*/
	BlockStorageHybridCacheStoragePoolsStoragePoolName *string

	/* BlockStorageHybridCacheStoragePoolsStoragePoolUUID.

	   Filter by block_storage.hybrid_cache.storage_pools.storage_pool.uuid
	*/
	BlockStorageHybridCacheStoragePoolsStoragePoolUUID *string

	/* BlockStorageHybridCacheUsed.

	   Filter by block_storage.hybrid_cache.used
	*/
	BlockStorageHybridCacheUsed *int64

	/* BlockStorageMirrorEnabled.

	   Filter by block_storage.mirror.enabled
	*/
	BlockStorageMirrorEnabled *bool

	/* BlockStorageMirrorState.

	   Filter by block_storage.mirror.state
	*/
	BlockStorageMirrorState *string

	/* BlockStoragePlexesName.

	   Filter by block_storage.plexes.name
	*/
	BlockStoragePlexesName *string

	/* BlockStoragePrimaryChecksumStyle.

	   Filter by block_storage.primary.checksum_style
	*/
	BlockStoragePrimaryChecksumStyle *string

	/* BlockStoragePrimaryDiskClass.

	   Filter by block_storage.primary.disk_class
	*/
	BlockStoragePrimaryDiskClass *string

	/* BlockStoragePrimaryDiskCount.

	   Filter by block_storage.primary.disk_count
	*/
	BlockStoragePrimaryDiskCount *int64

	/* BlockStoragePrimaryDiskType.

	   Filter by block_storage.primary.disk_type
	*/
	BlockStoragePrimaryDiskType *string

	/* BlockStoragePrimaryRaidSize.

	   Filter by block_storage.primary.raid_size
	*/
	BlockStoragePrimaryRaidSize *int64

	/* BlockStoragePrimaryRaidType.

	   Filter by block_storage.primary.raid_type
	*/
	BlockStoragePrimaryRaidType *string

	/* BlockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount.

	   Filter by block_storage.primary.simulated_raid_groups.added_data_disk_count
	*/
	BlockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount *int64

	/* BlockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount.

	   Filter by block_storage.primary.simulated_raid_groups.added_parity_disk_count
	*/
	BlockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount *int64

	/* BlockStoragePrimarySimulatedRaidGroupsDataDiskCount.

	   Filter by block_storage.primary.simulated_raid_groups.data_disk_count
	*/
	BlockStoragePrimarySimulatedRaidGroupsDataDiskCount *int64

	/* BlockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount.

	   Filter by block_storage.primary.simulated_raid_groups.existing_data_disk_count
	*/
	BlockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount *int64

	/* BlockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount.

	   Filter by block_storage.primary.simulated_raid_groups.existing_parity_disk_count
	*/
	BlockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount *int64

	/* BlockStoragePrimarySimulatedRaidGroupsIsPartition.

	   Filter by block_storage.primary.simulated_raid_groups.is_partition
	*/
	BlockStoragePrimarySimulatedRaidGroupsIsPartition *bool

	/* BlockStoragePrimarySimulatedRaidGroupsName.

	   Filter by block_storage.primary.simulated_raid_groups.name
	*/
	BlockStoragePrimarySimulatedRaidGroupsName *string

	/* BlockStoragePrimarySimulatedRaidGroupsParityDiskCount.

	   Filter by block_storage.primary.simulated_raid_groups.parity_disk_count
	*/
	BlockStoragePrimarySimulatedRaidGroupsParityDiskCount *int64

	/* BlockStoragePrimarySimulatedRaidGroupsRaidType.

	   Filter by block_storage.primary.simulated_raid_groups.raid_type
	*/
	BlockStoragePrimarySimulatedRaidGroupsRaidType *string

	/* BlockStoragePrimarySimulatedRaidGroupsUsableSize.

	   Filter by block_storage.primary.simulated_raid_groups.usable_size
	*/
	BlockStoragePrimarySimulatedRaidGroupsUsableSize *int64

	/* BlockStorageStorageType.

	   Filter by block_storage.storage_type
	*/
	BlockStorageStorageType *string

	/* BlockStorageUsesPartitions.

	   Filter by block_storage.uses_partitions
	*/
	BlockStorageUsesPartitions *bool

	/* CloudStorageAttachEligible.

	   Filter by cloud_storage.attach_eligible
	*/
	CloudStorageAttachEligible *bool

	/* CloudStorageStoresCloudStoreName.

	   Filter by cloud_storage.stores.cloud_store.name
	*/
	CloudStorageStoresCloudStoreName *string

	/* CloudStorageStoresCloudStoreUUID.

	   Filter by cloud_storage.stores.cloud_store.uuid
	*/
	CloudStorageStoresCloudStoreUUID *string

	/* CloudStorageStoresUsed.

	   Filter by cloud_storage.stores.used
	*/
	CloudStorageStoresUsed *int64

	/* CreateTime.

	   Filter by create_time
	*/
	CreateTime *string

	/* DataEncryptionDriveProtectionEnabled.

	   Filter by data_encryption.drive_protection_enabled
	*/
	DataEncryptionDriveProtectionEnabled *bool

	/* DataEncryptionSoftwareEncryptionEnabled.

	   Filter by data_encryption.software_encryption_enabled
	*/
	DataEncryptionSoftwareEncryptionEnabled *bool

	/* DrHomeNodeName.

	   Filter by dr_home_node.name
	*/
	DrHomeNodeName *string

	/* DrHomeNodeUUID.

	   Filter by dr_home_node.uuid
	*/
	DrHomeNodeUUID *string

	/* Fields.

	   Specify the fields to return.
	*/
	Fields []string

	/* FlashPoolEligible.

	   If set to 'true' along with show_spares, the spares object is restricted to return spare groups that are compatible with whole disk based flash pool creation. The default setting is 'false'.
	*/
	FlashPoolEligible *bool

	/* HomeNodeName.

	   Filter by home_node.name
	*/
	HomeNodeName *string

	/* HomeNodeUUID.

	   Filter by home_node.uuid
	*/
	HomeNodeUUID *string

	/* InactiveDataReportingEnabled.

	   Filter by inactive_data_reporting.enabled
	*/
	InactiveDataReportingEnabled *bool

	/* InactiveDataReportingStartTime.

	   Filter by inactive_data_reporting.start_time
	*/
	InactiveDataReportingStartTime *string

	/* InodeAttributesFilePrivateCapacity.

	   Filter by inode_attributes.file_private_capacity
	*/
	InodeAttributesFilePrivateCapacity *int64

	/* InodeAttributesFilePublicCapacity.

	   Filter by inode_attributes.file_public_capacity
	*/
	InodeAttributesFilePublicCapacity *int64

	/* InodeAttributesFilesPrivateUsed.

	   Filter by inode_attributes.files_private_used
	*/
	InodeAttributesFilesPrivateUsed *int64

	/* InodeAttributesFilesTotal.

	   Filter by inode_attributes.files_total
	*/
	InodeAttributesFilesTotal *int64

	/* InodeAttributesFilesUsed.

	   Filter by inode_attributes.files_used
	*/
	InodeAttributesFilesUsed *int64

	/* InodeAttributesMaxFilesAvailable.

	   Filter by inode_attributes.max_files_available
	*/
	InodeAttributesMaxFilesAvailable *int64

	/* InodeAttributesMaxFilesPossible.

	   Filter by inode_attributes.max_files_possible
	*/
	InodeAttributesMaxFilesPossible *int64

	/* InodeAttributesMaxFilesUsed.

	   Filter by inode_attributes.max_files_used
	*/
	InodeAttributesMaxFilesUsed *int64

	/* InodeAttributesUsedPercent.

	   Filter by inode_attributes.used_percent
	*/
	InodeAttributesUsedPercent *int64

	/* InodeAttributesVersion.

	   Filter by inode_attributes.version
	*/
	InodeAttributesVersion *int64

	/* IsSpareLow.

	   Filter by is_spare_low
	*/
	IsSpareLow *bool

	/* MaxRecords.

	   Limit the number of records returned.
	*/
	MaxRecords *int64

	/* MetricDuration.

	   Filter by metric.duration
	*/
	MetricDuration *string

	/* MetricIopsOther.

	   Filter by metric.iops.other
	*/
	MetricIopsOther *int64

	/* MetricIopsRead.

	   Filter by metric.iops.read
	*/
	MetricIopsRead *int64

	/* MetricIopsTotal.

	   Filter by metric.iops.total
	*/
	MetricIopsTotal *int64

	/* MetricIopsWrite.

	   Filter by metric.iops.write
	*/
	MetricIopsWrite *int64

	/* MetricLatencyOther.

	   Filter by metric.latency.other
	*/
	MetricLatencyOther *int64

	/* MetricLatencyRead.

	   Filter by metric.latency.read
	*/
	MetricLatencyRead *int64

	/* MetricLatencyTotal.

	   Filter by metric.latency.total
	*/
	MetricLatencyTotal *int64

	/* MetricLatencyWrite.

	   Filter by metric.latency.write
	*/
	MetricLatencyWrite *int64

	/* MetricStatus.

	   Filter by metric.status
	*/
	MetricStatus *string

	/* MetricThroughputOther.

	   Filter by metric.throughput.other
	*/
	MetricThroughputOther *int64

	/* MetricThroughputRead.

	   Filter by metric.throughput.read
	*/
	MetricThroughputRead *int64

	/* MetricThroughputTotal.

	   Filter by metric.throughput.total
	*/
	MetricThroughputTotal *int64

	/* MetricThroughputWrite.

	   Filter by metric.throughput.write
	*/
	MetricThroughputWrite *int64

	/* MetricTimestamp.

	   Filter by metric.timestamp
	*/
	MetricTimestamp *string

	/* Name.

	   Filter by name
	*/
	Name *string

	/* NodeName.

	   Filter by node.name
	*/
	NodeName *string

	/* NodeUUID.

	   Filter by node.uuid
	*/
	NodeUUID *string

	/* OrderBy.

	   Order results by specified fields and optional [asc|desc] direction. Default direction is 'asc' for ascending.
	*/
	OrderBy []string

	/* Recommend.

	   If set to 'true', it queries the system for the recommended optimal layout for creating new aggregates. The default setting is 'false'.
	*/
	Recommend *bool

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecords *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeout *int64

	/* ShowSpares.

	   If set to 'true', the spares object is returned instead of records to show the spare groups in the cluster. The default setting is 'false'.
	*/
	ShowSpares *bool

	/* SidlEnabled.

	   Filter by sidl_enabled
	*/
	SidlEnabled *bool

	/* SnaplockType.

	   Filter by snaplock_type
	*/
	SnaplockType *string

	/* SnapshotFilesTotal.

	   Filter by snapshot.files_total
	*/
	SnapshotFilesTotal *int64

	/* SnapshotFilesUsed.

	   Filter by snapshot.files_used
	*/
	SnapshotFilesUsed *int64

	/* SnapshotMaxFilesAvailable.

	   Filter by snapshot.max_files_available
	*/
	SnapshotMaxFilesAvailable *int64

	/* SnapshotMaxFilesUsed.

	   Filter by snapshot.max_files_used
	*/
	SnapshotMaxFilesUsed *int64

	/* SpaceBlockStorageAggregateMetadata.

	   Filter by space.block_storage.aggregate_metadata
	*/
	SpaceBlockStorageAggregateMetadata *int64

	/* SpaceBlockStorageAggregateMetadataPercent.

	   Filter by space.block_storage.aggregate_metadata_percent
	*/
	SpaceBlockStorageAggregateMetadataPercent *int64

	/* SpaceBlockStorageAvailable.

	   Filter by space.block_storage.available
	*/
	SpaceBlockStorageAvailable *int64

	/* SpaceBlockStorageDataCompactedCount.

	   Filter by space.block_storage.data_compacted_count
	*/
	SpaceBlockStorageDataCompactedCount *int64

	/* SpaceBlockStorageDataCompactionSpaceSaved.

	   Filter by space.block_storage.data_compaction_space_saved
	*/
	SpaceBlockStorageDataCompactionSpaceSaved *int64

	/* SpaceBlockStorageDataCompactionSpaceSavedPercent.

	   Filter by space.block_storage.data_compaction_space_saved_percent
	*/
	SpaceBlockStorageDataCompactionSpaceSavedPercent *int64

	/* SpaceBlockStorageFullThresholdPercent.

	   Filter by space.block_storage.full_threshold_percent
	*/
	SpaceBlockStorageFullThresholdPercent *int64

	/* SpaceBlockStorageInactiveUserData.

	   Filter by space.block_storage.inactive_user_data
	*/
	SpaceBlockStorageInactiveUserData *int64

	/* SpaceBlockStorageInactiveUserDataPercent.

	   Filter by space.block_storage.inactive_user_data_percent
	*/
	SpaceBlockStorageInactiveUserDataPercent *int64

	/* SpaceBlockStoragePhysicalUsed.

	   Filter by space.block_storage.physical_used
	*/
	SpaceBlockStoragePhysicalUsed *int64

	/* SpaceBlockStoragePhysicalUsedPercent.

	   Filter by space.block_storage.physical_used_percent
	*/
	SpaceBlockStoragePhysicalUsedPercent *int64

	/* SpaceBlockStorageSize.

	   Filter by space.block_storage.size
	*/
	SpaceBlockStorageSize *int64

	/* SpaceBlockStorageUsed.

	   Filter by space.block_storage.used
	*/
	SpaceBlockStorageUsed *int64

	/* SpaceBlockStorageUsedIncludingSnapshotReserve.

	   Filter by space.block_storage.used_including_snapshot_reserve
	*/
	SpaceBlockStorageUsedIncludingSnapshotReserve *int64

	/* SpaceBlockStorageUsedIncludingSnapshotReservePercent.

	   Filter by space.block_storage.used_including_snapshot_reserve_percent
	*/
	SpaceBlockStorageUsedIncludingSnapshotReservePercent *int64

	/* SpaceBlockStorageUsedPercent.

	   Filter by space.block_storage.used_percent
	*/
	SpaceBlockStorageUsedPercent *int64

	/* SpaceBlockStorageVolumeDeduplicationSharedCount.

	   Filter by space.block_storage.volume_deduplication_shared_count
	*/
	SpaceBlockStorageVolumeDeduplicationSharedCount *int64

	/* SpaceBlockStorageVolumeDeduplicationSpaceSaved.

	   Filter by space.block_storage.volume_deduplication_space_saved
	*/
	SpaceBlockStorageVolumeDeduplicationSpaceSaved *int64

	/* SpaceBlockStorageVolumeDeduplicationSpaceSavedPercent.

	   Filter by space.block_storage.volume_deduplication_space_saved_percent
	*/
	SpaceBlockStorageVolumeDeduplicationSpaceSavedPercent *int64

	/* SpaceBlockStorageVolumeFootprintsPercent.

	   Filter by space.block_storage.volume_footprints_percent
	*/
	SpaceBlockStorageVolumeFootprintsPercent *int64

	/* SpaceCloudStorageUsed.

	   Filter by space.cloud_storage.used
	*/
	SpaceCloudStorageUsed *int64

	/* SpaceEfficiencyAutoAdaptiveCompressionSavings.

	   Filter by space.efficiency.auto_adaptive_compression_savings
	*/
	SpaceEfficiencyAutoAdaptiveCompressionSavings *bool

	/* SpaceEfficiencyCrossVolumeBackgroundDedupe.

	   Filter by space.efficiency.cross_volume_background_dedupe
	*/
	SpaceEfficiencyCrossVolumeBackgroundDedupe *bool

	/* SpaceEfficiencyCrossVolumeDedupeSavings.

	   Filter by space.efficiency.cross_volume_dedupe_savings
	*/
	SpaceEfficiencyCrossVolumeDedupeSavings *bool

	/* SpaceEfficiencyCrossVolumeInlineDedupe.

	   Filter by space.efficiency.cross_volume_inline_dedupe
	*/
	SpaceEfficiencyCrossVolumeInlineDedupe *bool

	/* SpaceEfficiencyEnableWorkloadInformedTsse.

	   Filter by space.efficiency.enable_workload_informed_tsse
	*/
	SpaceEfficiencyEnableWorkloadInformedTsse *bool

	/* SpaceEfficiencyLogicalUsed.

	   Filter by space.efficiency.logical_used
	*/
	SpaceEfficiencyLogicalUsed *int64

	/* SpaceEfficiencyRatio.

	   Filter by space.efficiency.ratio
	*/
	SpaceEfficiencyRatio *float64

	/* SpaceEfficiencySavings.

	   Filter by space.efficiency.savings
	*/
	SpaceEfficiencySavings *int64

	/* SpaceEfficiencyWiseTsseMinUsedCapacityPct.

	   Filter by space.efficiency.wise_tsse_min_used_capacity_pct
	*/
	SpaceEfficiencyWiseTsseMinUsedCapacityPct *int64

	/* SpaceEfficiencyWithoutSnapshotsLogicalUsed.

	   Filter by space.efficiency_without_snapshots.logical_used
	*/
	SpaceEfficiencyWithoutSnapshotsLogicalUsed *int64

	/* SpaceEfficiencyWithoutSnapshotsRatio.

	   Filter by space.efficiency_without_snapshots.ratio
	*/
	SpaceEfficiencyWithoutSnapshotsRatio *float64

	/* SpaceEfficiencyWithoutSnapshotsSavings.

	   Filter by space.efficiency_without_snapshots.savings
	*/
	SpaceEfficiencyWithoutSnapshotsSavings *int64

	/* SpaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed.

	   Filter by space.efficiency_without_snapshots_flexclones.logical_used
	*/
	SpaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed *int64

	/* SpaceEfficiencyWithoutSnapshotsFlexclonesRatio.

	   Filter by space.efficiency_without_snapshots_flexclones.ratio
	*/
	SpaceEfficiencyWithoutSnapshotsFlexclonesRatio *float64

	/* SpaceEfficiencyWithoutSnapshotsFlexclonesSavings.

	   Filter by space.efficiency_without_snapshots_flexclones.savings
	*/
	SpaceEfficiencyWithoutSnapshotsFlexclonesSavings *int64

	/* SpaceFootprint.

	   Filter by space.footprint
	*/
	SpaceFootprint *int64

	/* SpaceSnapshotAvailable.

	   Filter by space.snapshot.available
	*/
	SpaceSnapshotAvailable *int64

	/* SpaceSnapshotReservePercent.

	   Filter by space.snapshot.reserve_percent
	*/
	SpaceSnapshotReservePercent *int64

	/* SpaceSnapshotTotal.

	   Filter by space.snapshot.total
	*/
	SpaceSnapshotTotal *int64

	/* SpaceSnapshotUsed.

	   Filter by space.snapshot.used
	*/
	SpaceSnapshotUsed *int64

	/* SpaceSnapshotUsedPercent.

	   Filter by space.snapshot.used_percent
	*/
	SpaceSnapshotUsedPercent *int64

	/* SpaceTotalProvisionedSpace.

	   Filter by space.total_provisioned_space
	*/
	SpaceTotalProvisionedSpace *int64

	/* State.

	   Filter by state
	*/
	State *string

	/* StatisticsIopsRawOther.

	   Filter by statistics.iops_raw.other
	*/
	StatisticsIopsRawOther *int64

	/* StatisticsIopsRawRead.

	   Filter by statistics.iops_raw.read
	*/
	StatisticsIopsRawRead *int64

	/* StatisticsIopsRawTotal.

	   Filter by statistics.iops_raw.total
	*/
	StatisticsIopsRawTotal *int64

	/* StatisticsIopsRawWrite.

	   Filter by statistics.iops_raw.write
	*/
	StatisticsIopsRawWrite *int64

	/* StatisticsLatencyRawOther.

	   Filter by statistics.latency_raw.other
	*/
	StatisticsLatencyRawOther *int64

	/* StatisticsLatencyRawRead.

	   Filter by statistics.latency_raw.read
	*/
	StatisticsLatencyRawRead *int64

	/* StatisticsLatencyRawTotal.

	   Filter by statistics.latency_raw.total
	*/
	StatisticsLatencyRawTotal *int64

	/* StatisticsLatencyRawWrite.

	   Filter by statistics.latency_raw.write
	*/
	StatisticsLatencyRawWrite *int64

	/* StatisticsStatus.

	   Filter by statistics.status
	*/
	StatisticsStatus *string

	/* StatisticsThroughputRawOther.

	   Filter by statistics.throughput_raw.other
	*/
	StatisticsThroughputRawOther *int64

	/* StatisticsThroughputRawRead.

	   Filter by statistics.throughput_raw.read
	*/
	StatisticsThroughputRawRead *int64

	/* StatisticsThroughputRawTotal.

	   Filter by statistics.throughput_raw.total
	*/
	StatisticsThroughputRawTotal *int64

	/* StatisticsThroughputRawWrite.

	   Filter by statistics.throughput_raw.write
	*/
	StatisticsThroughputRawWrite *int64

	/* StatisticsTimestamp.

	   Filter by statistics.timestamp
	*/
	StatisticsTimestamp *string

	/* UUID.

	   Filter by uuid
	*/
	UUID *string

	/* VolumeCount.

	   Filter by volume-count
	*/
	VolumeCount *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the aggregate collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AggregateCollectionGetParams) WithDefaults() *AggregateCollectionGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the aggregate collection get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AggregateCollectionGetParams) SetDefaults() {
	var (
		returnRecordsDefault = bool(true)

		returnTimeoutDefault = int64(15)
	)

	val := AggregateCollectionGetParams{
		ReturnRecords: &returnRecordsDefault,
		ReturnTimeout: &returnTimeoutDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithTimeout(timeout time.Duration) *AggregateCollectionGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithContext(ctx context.Context) *AggregateCollectionGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithHTTPClient(client *http.Client) *AggregateCollectionGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTags adds the tags to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithTags(tags *string) *AggregateCollectionGetParams {
	o.SetTags(tags)
	return o
}

// SetTags adds the tags to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetTags(tags *string) {
	o.Tags = tags
}

// WithBlockStorageHybridCacheDiskCount adds the blockStorageHybridCacheDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybridCacheDiskCount(blockStorageHybridCacheDiskCount *int64) *AggregateCollectionGetParams {
	o.SetBlockStorageHybridCacheDiskCount(blockStorageHybridCacheDiskCount)
	return o
}

// SetBlockStorageHybridCacheDiskCount adds the blockStorageHybridCacheDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybridCacheDiskCount(blockStorageHybridCacheDiskCount *int64) {
	o.BlockStorageHybridCacheDiskCount = blockStorageHybridCacheDiskCount
}

// WithBlockStorageHybridCacheDiskType adds the blockStorageHybridCacheDiskType to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybridCacheDiskType(blockStorageHybridCacheDiskType *string) *AggregateCollectionGetParams {
	o.SetBlockStorageHybridCacheDiskType(blockStorageHybridCacheDiskType)
	return o
}

// SetBlockStorageHybridCacheDiskType adds the blockStorageHybridCacheDiskType to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybridCacheDiskType(blockStorageHybridCacheDiskType *string) {
	o.BlockStorageHybridCacheDiskType = blockStorageHybridCacheDiskType
}

// WithBlockStorageHybridCacheEnabled adds the blockStorageHybridCacheEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybridCacheEnabled(blockStorageHybridCacheEnabled *bool) *AggregateCollectionGetParams {
	o.SetBlockStorageHybridCacheEnabled(blockStorageHybridCacheEnabled)
	return o
}

// SetBlockStorageHybridCacheEnabled adds the blockStorageHybridCacheEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybridCacheEnabled(blockStorageHybridCacheEnabled *bool) {
	o.BlockStorageHybridCacheEnabled = blockStorageHybridCacheEnabled
}

// WithBlockStorageHybridCacheRaidSize adds the blockStorageHybridCacheRaidSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybridCacheRaidSize(blockStorageHybridCacheRaidSize *int64) *AggregateCollectionGetParams {
	o.SetBlockStorageHybridCacheRaidSize(blockStorageHybridCacheRaidSize)
	return o
}

// SetBlockStorageHybridCacheRaidSize adds the blockStorageHybridCacheRaidSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybridCacheRaidSize(blockStorageHybridCacheRaidSize *int64) {
	o.BlockStorageHybridCacheRaidSize = blockStorageHybridCacheRaidSize
}

// WithBlockStorageHybridCacheRaidType adds the blockStorageHybridCacheRaidType to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybridCacheRaidType(blockStorageHybridCacheRaidType *string) *AggregateCollectionGetParams {
	o.SetBlockStorageHybridCacheRaidType(blockStorageHybridCacheRaidType)
	return o
}

// SetBlockStorageHybridCacheRaidType adds the blockStorageHybridCacheRaidType to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybridCacheRaidType(blockStorageHybridCacheRaidType *string) {
	o.BlockStorageHybridCacheRaidType = blockStorageHybridCacheRaidType
}

// WithBlockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount adds the blockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount(blockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount *int64) *AggregateCollectionGetParams {
	o.SetBlockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount(blockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount)
	return o
}

// SetBlockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount adds the blockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount(blockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount *int64) {
	o.BlockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount = blockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount
}

// WithBlockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount adds the blockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount(blockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount *int64) *AggregateCollectionGetParams {
	o.SetBlockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount(blockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount)
	return o
}

// SetBlockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount adds the blockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount(blockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount *int64) {
	o.BlockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount = blockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount
}

// WithBlockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount adds the blockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount(blockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount *int64) *AggregateCollectionGetParams {
	o.SetBlockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount(blockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount)
	return o
}

// SetBlockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount adds the blockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount(blockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount *int64) {
	o.BlockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount = blockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount
}

// WithBlockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount adds the blockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount(blockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount *int64) *AggregateCollectionGetParams {
	o.SetBlockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount(blockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount)
	return o
}

// SetBlockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount adds the blockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount(blockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount *int64) {
	o.BlockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount = blockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount
}

// WithBlockStorageHybridCacheSimulatedRaidGroupsIsPartition adds the blockStorageHybridCacheSimulatedRaidGroupsIsPartition to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybridCacheSimulatedRaidGroupsIsPartition(blockStorageHybridCacheSimulatedRaidGroupsIsPartition *bool) *AggregateCollectionGetParams {
	o.SetBlockStorageHybridCacheSimulatedRaidGroupsIsPartition(blockStorageHybridCacheSimulatedRaidGroupsIsPartition)
	return o
}

// SetBlockStorageHybridCacheSimulatedRaidGroupsIsPartition adds the blockStorageHybridCacheSimulatedRaidGroupsIsPartition to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybridCacheSimulatedRaidGroupsIsPartition(blockStorageHybridCacheSimulatedRaidGroupsIsPartition *bool) {
	o.BlockStorageHybridCacheSimulatedRaidGroupsIsPartition = blockStorageHybridCacheSimulatedRaidGroupsIsPartition
}

// WithBlockStorageHybridCacheSimulatedRaidGroupsName adds the blockStorageHybridCacheSimulatedRaidGroupsName to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybridCacheSimulatedRaidGroupsName(blockStorageHybridCacheSimulatedRaidGroupsName *string) *AggregateCollectionGetParams {
	o.SetBlockStorageHybridCacheSimulatedRaidGroupsName(blockStorageHybridCacheSimulatedRaidGroupsName)
	return o
}

// SetBlockStorageHybridCacheSimulatedRaidGroupsName adds the blockStorageHybridCacheSimulatedRaidGroupsName to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybridCacheSimulatedRaidGroupsName(blockStorageHybridCacheSimulatedRaidGroupsName *string) {
	o.BlockStorageHybridCacheSimulatedRaidGroupsName = blockStorageHybridCacheSimulatedRaidGroupsName
}

// WithBlockStorageHybridCacheSimulatedRaidGroupsUsableSize adds the blockStorageHybridCacheSimulatedRaidGroupsUsableSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybridCacheSimulatedRaidGroupsUsableSize(blockStorageHybridCacheSimulatedRaidGroupsUsableSize *int64) *AggregateCollectionGetParams {
	o.SetBlockStorageHybridCacheSimulatedRaidGroupsUsableSize(blockStorageHybridCacheSimulatedRaidGroupsUsableSize)
	return o
}

// SetBlockStorageHybridCacheSimulatedRaidGroupsUsableSize adds the blockStorageHybridCacheSimulatedRaidGroupsUsableSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybridCacheSimulatedRaidGroupsUsableSize(blockStorageHybridCacheSimulatedRaidGroupsUsableSize *int64) {
	o.BlockStorageHybridCacheSimulatedRaidGroupsUsableSize = blockStorageHybridCacheSimulatedRaidGroupsUsableSize
}

// WithBlockStorageHybridCacheSize adds the blockStorageHybridCacheSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybridCacheSize(blockStorageHybridCacheSize *int64) *AggregateCollectionGetParams {
	o.SetBlockStorageHybridCacheSize(blockStorageHybridCacheSize)
	return o
}

// SetBlockStorageHybridCacheSize adds the blockStorageHybridCacheSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybridCacheSize(blockStorageHybridCacheSize *int64) {
	o.BlockStorageHybridCacheSize = blockStorageHybridCacheSize
}

// WithBlockStorageHybridCacheStoragePoolsAllocationUnitsCount adds the blockStorageHybridCacheStoragePoolsAllocationUnitsCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybridCacheStoragePoolsAllocationUnitsCount(blockStorageHybridCacheStoragePoolsAllocationUnitsCount *int64) *AggregateCollectionGetParams {
	o.SetBlockStorageHybridCacheStoragePoolsAllocationUnitsCount(blockStorageHybridCacheStoragePoolsAllocationUnitsCount)
	return o
}

// SetBlockStorageHybridCacheStoragePoolsAllocationUnitsCount adds the blockStorageHybridCacheStoragePoolsAllocationUnitsCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybridCacheStoragePoolsAllocationUnitsCount(blockStorageHybridCacheStoragePoolsAllocationUnitsCount *int64) {
	o.BlockStorageHybridCacheStoragePoolsAllocationUnitsCount = blockStorageHybridCacheStoragePoolsAllocationUnitsCount
}

// WithBlockStorageHybridCacheStoragePoolsStoragePoolName adds the blockStorageHybridCacheStoragePoolsStoragePoolName to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybridCacheStoragePoolsStoragePoolName(blockStorageHybridCacheStoragePoolsStoragePoolName *string) *AggregateCollectionGetParams {
	o.SetBlockStorageHybridCacheStoragePoolsStoragePoolName(blockStorageHybridCacheStoragePoolsStoragePoolName)
	return o
}

// SetBlockStorageHybridCacheStoragePoolsStoragePoolName adds the blockStorageHybridCacheStoragePoolsStoragePoolName to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybridCacheStoragePoolsStoragePoolName(blockStorageHybridCacheStoragePoolsStoragePoolName *string) {
	o.BlockStorageHybridCacheStoragePoolsStoragePoolName = blockStorageHybridCacheStoragePoolsStoragePoolName
}

// WithBlockStorageHybridCacheStoragePoolsStoragePoolUUID adds the blockStorageHybridCacheStoragePoolsStoragePoolUUID to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybridCacheStoragePoolsStoragePoolUUID(blockStorageHybridCacheStoragePoolsStoragePoolUUID *string) *AggregateCollectionGetParams {
	o.SetBlockStorageHybridCacheStoragePoolsStoragePoolUUID(blockStorageHybridCacheStoragePoolsStoragePoolUUID)
	return o
}

// SetBlockStorageHybridCacheStoragePoolsStoragePoolUUID adds the blockStorageHybridCacheStoragePoolsStoragePoolUuid to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybridCacheStoragePoolsStoragePoolUUID(blockStorageHybridCacheStoragePoolsStoragePoolUUID *string) {
	o.BlockStorageHybridCacheStoragePoolsStoragePoolUUID = blockStorageHybridCacheStoragePoolsStoragePoolUUID
}

// WithBlockStorageHybridCacheUsed adds the blockStorageHybridCacheUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageHybridCacheUsed(blockStorageHybridCacheUsed *int64) *AggregateCollectionGetParams {
	o.SetBlockStorageHybridCacheUsed(blockStorageHybridCacheUsed)
	return o
}

// SetBlockStorageHybridCacheUsed adds the blockStorageHybridCacheUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageHybridCacheUsed(blockStorageHybridCacheUsed *int64) {
	o.BlockStorageHybridCacheUsed = blockStorageHybridCacheUsed
}

// WithBlockStorageMirrorEnabled adds the blockStorageMirrorEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageMirrorEnabled(blockStorageMirrorEnabled *bool) *AggregateCollectionGetParams {
	o.SetBlockStorageMirrorEnabled(blockStorageMirrorEnabled)
	return o
}

// SetBlockStorageMirrorEnabled adds the blockStorageMirrorEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageMirrorEnabled(blockStorageMirrorEnabled *bool) {
	o.BlockStorageMirrorEnabled = blockStorageMirrorEnabled
}

// WithBlockStorageMirrorState adds the blockStorageMirrorState to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageMirrorState(blockStorageMirrorState *string) *AggregateCollectionGetParams {
	o.SetBlockStorageMirrorState(blockStorageMirrorState)
	return o
}

// SetBlockStorageMirrorState adds the blockStorageMirrorState to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageMirrorState(blockStorageMirrorState *string) {
	o.BlockStorageMirrorState = blockStorageMirrorState
}

// WithBlockStoragePlexesName adds the blockStoragePlexesName to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePlexesName(blockStoragePlexesName *string) *AggregateCollectionGetParams {
	o.SetBlockStoragePlexesName(blockStoragePlexesName)
	return o
}

// SetBlockStoragePlexesName adds the blockStoragePlexesName to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePlexesName(blockStoragePlexesName *string) {
	o.BlockStoragePlexesName = blockStoragePlexesName
}

// WithBlockStoragePrimaryChecksumStyle adds the blockStoragePrimaryChecksumStyle to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimaryChecksumStyle(blockStoragePrimaryChecksumStyle *string) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimaryChecksumStyle(blockStoragePrimaryChecksumStyle)
	return o
}

// SetBlockStoragePrimaryChecksumStyle adds the blockStoragePrimaryChecksumStyle to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimaryChecksumStyle(blockStoragePrimaryChecksumStyle *string) {
	o.BlockStoragePrimaryChecksumStyle = blockStoragePrimaryChecksumStyle
}

// WithBlockStoragePrimaryDiskClass adds the blockStoragePrimaryDiskClass to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimaryDiskClass(blockStoragePrimaryDiskClass *string) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimaryDiskClass(blockStoragePrimaryDiskClass)
	return o
}

// SetBlockStoragePrimaryDiskClass adds the blockStoragePrimaryDiskClass to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimaryDiskClass(blockStoragePrimaryDiskClass *string) {
	o.BlockStoragePrimaryDiskClass = blockStoragePrimaryDiskClass
}

// WithBlockStoragePrimaryDiskCount adds the blockStoragePrimaryDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimaryDiskCount(blockStoragePrimaryDiskCount *int64) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimaryDiskCount(blockStoragePrimaryDiskCount)
	return o
}

// SetBlockStoragePrimaryDiskCount adds the blockStoragePrimaryDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimaryDiskCount(blockStoragePrimaryDiskCount *int64) {
	o.BlockStoragePrimaryDiskCount = blockStoragePrimaryDiskCount
}

// WithBlockStoragePrimaryDiskType adds the blockStoragePrimaryDiskType to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimaryDiskType(blockStoragePrimaryDiskType *string) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimaryDiskType(blockStoragePrimaryDiskType)
	return o
}

// SetBlockStoragePrimaryDiskType adds the blockStoragePrimaryDiskType to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimaryDiskType(blockStoragePrimaryDiskType *string) {
	o.BlockStoragePrimaryDiskType = blockStoragePrimaryDiskType
}

// WithBlockStoragePrimaryRaidSize adds the blockStoragePrimaryRaidSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimaryRaidSize(blockStoragePrimaryRaidSize *int64) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimaryRaidSize(blockStoragePrimaryRaidSize)
	return o
}

// SetBlockStoragePrimaryRaidSize adds the blockStoragePrimaryRaidSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimaryRaidSize(blockStoragePrimaryRaidSize *int64) {
	o.BlockStoragePrimaryRaidSize = blockStoragePrimaryRaidSize
}

// WithBlockStoragePrimaryRaidType adds the blockStoragePrimaryRaidType to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimaryRaidType(blockStoragePrimaryRaidType *string) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimaryRaidType(blockStoragePrimaryRaidType)
	return o
}

// SetBlockStoragePrimaryRaidType adds the blockStoragePrimaryRaidType to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimaryRaidType(blockStoragePrimaryRaidType *string) {
	o.BlockStoragePrimaryRaidType = blockStoragePrimaryRaidType
}

// WithBlockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount adds the blockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount(blockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount *int64) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount(blockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount)
	return o
}

// SetBlockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount adds the blockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount(blockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount *int64) {
	o.BlockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount = blockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount
}

// WithBlockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount adds the blockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount(blockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount *int64) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount(blockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount)
	return o
}

// SetBlockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount adds the blockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount(blockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount *int64) {
	o.BlockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount = blockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount
}

// WithBlockStoragePrimarySimulatedRaidGroupsDataDiskCount adds the blockStoragePrimarySimulatedRaidGroupsDataDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimarySimulatedRaidGroupsDataDiskCount(blockStoragePrimarySimulatedRaidGroupsDataDiskCount *int64) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimarySimulatedRaidGroupsDataDiskCount(blockStoragePrimarySimulatedRaidGroupsDataDiskCount)
	return o
}

// SetBlockStoragePrimarySimulatedRaidGroupsDataDiskCount adds the blockStoragePrimarySimulatedRaidGroupsDataDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimarySimulatedRaidGroupsDataDiskCount(blockStoragePrimarySimulatedRaidGroupsDataDiskCount *int64) {
	o.BlockStoragePrimarySimulatedRaidGroupsDataDiskCount = blockStoragePrimarySimulatedRaidGroupsDataDiskCount
}

// WithBlockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount adds the blockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount(blockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount *int64) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount(blockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount)
	return o
}

// SetBlockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount adds the blockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount(blockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount *int64) {
	o.BlockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount = blockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount
}

// WithBlockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount adds the blockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount(blockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount *int64) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount(blockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount)
	return o
}

// SetBlockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount adds the blockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount(blockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount *int64) {
	o.BlockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount = blockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount
}

// WithBlockStoragePrimarySimulatedRaidGroupsIsPartition adds the blockStoragePrimarySimulatedRaidGroupsIsPartition to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimarySimulatedRaidGroupsIsPartition(blockStoragePrimarySimulatedRaidGroupsIsPartition *bool) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimarySimulatedRaidGroupsIsPartition(blockStoragePrimarySimulatedRaidGroupsIsPartition)
	return o
}

// SetBlockStoragePrimarySimulatedRaidGroupsIsPartition adds the blockStoragePrimarySimulatedRaidGroupsIsPartition to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimarySimulatedRaidGroupsIsPartition(blockStoragePrimarySimulatedRaidGroupsIsPartition *bool) {
	o.BlockStoragePrimarySimulatedRaidGroupsIsPartition = blockStoragePrimarySimulatedRaidGroupsIsPartition
}

// WithBlockStoragePrimarySimulatedRaidGroupsName adds the blockStoragePrimarySimulatedRaidGroupsName to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimarySimulatedRaidGroupsName(blockStoragePrimarySimulatedRaidGroupsName *string) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimarySimulatedRaidGroupsName(blockStoragePrimarySimulatedRaidGroupsName)
	return o
}

// SetBlockStoragePrimarySimulatedRaidGroupsName adds the blockStoragePrimarySimulatedRaidGroupsName to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimarySimulatedRaidGroupsName(blockStoragePrimarySimulatedRaidGroupsName *string) {
	o.BlockStoragePrimarySimulatedRaidGroupsName = blockStoragePrimarySimulatedRaidGroupsName
}

// WithBlockStoragePrimarySimulatedRaidGroupsParityDiskCount adds the blockStoragePrimarySimulatedRaidGroupsParityDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimarySimulatedRaidGroupsParityDiskCount(blockStoragePrimarySimulatedRaidGroupsParityDiskCount *int64) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimarySimulatedRaidGroupsParityDiskCount(blockStoragePrimarySimulatedRaidGroupsParityDiskCount)
	return o
}

// SetBlockStoragePrimarySimulatedRaidGroupsParityDiskCount adds the blockStoragePrimarySimulatedRaidGroupsParityDiskCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimarySimulatedRaidGroupsParityDiskCount(blockStoragePrimarySimulatedRaidGroupsParityDiskCount *int64) {
	o.BlockStoragePrimarySimulatedRaidGroupsParityDiskCount = blockStoragePrimarySimulatedRaidGroupsParityDiskCount
}

// WithBlockStoragePrimarySimulatedRaidGroupsRaidType adds the blockStoragePrimarySimulatedRaidGroupsRaidType to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimarySimulatedRaidGroupsRaidType(blockStoragePrimarySimulatedRaidGroupsRaidType *string) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimarySimulatedRaidGroupsRaidType(blockStoragePrimarySimulatedRaidGroupsRaidType)
	return o
}

// SetBlockStoragePrimarySimulatedRaidGroupsRaidType adds the blockStoragePrimarySimulatedRaidGroupsRaidType to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimarySimulatedRaidGroupsRaidType(blockStoragePrimarySimulatedRaidGroupsRaidType *string) {
	o.BlockStoragePrimarySimulatedRaidGroupsRaidType = blockStoragePrimarySimulatedRaidGroupsRaidType
}

// WithBlockStoragePrimarySimulatedRaidGroupsUsableSize adds the blockStoragePrimarySimulatedRaidGroupsUsableSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStoragePrimarySimulatedRaidGroupsUsableSize(blockStoragePrimarySimulatedRaidGroupsUsableSize *int64) *AggregateCollectionGetParams {
	o.SetBlockStoragePrimarySimulatedRaidGroupsUsableSize(blockStoragePrimarySimulatedRaidGroupsUsableSize)
	return o
}

// SetBlockStoragePrimarySimulatedRaidGroupsUsableSize adds the blockStoragePrimarySimulatedRaidGroupsUsableSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStoragePrimarySimulatedRaidGroupsUsableSize(blockStoragePrimarySimulatedRaidGroupsUsableSize *int64) {
	o.BlockStoragePrimarySimulatedRaidGroupsUsableSize = blockStoragePrimarySimulatedRaidGroupsUsableSize
}

// WithBlockStorageStorageType adds the blockStorageStorageType to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageStorageType(blockStorageStorageType *string) *AggregateCollectionGetParams {
	o.SetBlockStorageStorageType(blockStorageStorageType)
	return o
}

// SetBlockStorageStorageType adds the blockStorageStorageType to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageStorageType(blockStorageStorageType *string) {
	o.BlockStorageStorageType = blockStorageStorageType
}

// WithBlockStorageUsesPartitions adds the blockStorageUsesPartitions to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithBlockStorageUsesPartitions(blockStorageUsesPartitions *bool) *AggregateCollectionGetParams {
	o.SetBlockStorageUsesPartitions(blockStorageUsesPartitions)
	return o
}

// SetBlockStorageUsesPartitions adds the blockStorageUsesPartitions to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetBlockStorageUsesPartitions(blockStorageUsesPartitions *bool) {
	o.BlockStorageUsesPartitions = blockStorageUsesPartitions
}

// WithCloudStorageAttachEligible adds the cloudStorageAttachEligible to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithCloudStorageAttachEligible(cloudStorageAttachEligible *bool) *AggregateCollectionGetParams {
	o.SetCloudStorageAttachEligible(cloudStorageAttachEligible)
	return o
}

// SetCloudStorageAttachEligible adds the cloudStorageAttachEligible to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetCloudStorageAttachEligible(cloudStorageAttachEligible *bool) {
	o.CloudStorageAttachEligible = cloudStorageAttachEligible
}

// WithCloudStorageStoresCloudStoreName adds the cloudStorageStoresCloudStoreName to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithCloudStorageStoresCloudStoreName(cloudStorageStoresCloudStoreName *string) *AggregateCollectionGetParams {
	o.SetCloudStorageStoresCloudStoreName(cloudStorageStoresCloudStoreName)
	return o
}

// SetCloudStorageStoresCloudStoreName adds the cloudStorageStoresCloudStoreName to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetCloudStorageStoresCloudStoreName(cloudStorageStoresCloudStoreName *string) {
	o.CloudStorageStoresCloudStoreName = cloudStorageStoresCloudStoreName
}

// WithCloudStorageStoresCloudStoreUUID adds the cloudStorageStoresCloudStoreUUID to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithCloudStorageStoresCloudStoreUUID(cloudStorageStoresCloudStoreUUID *string) *AggregateCollectionGetParams {
	o.SetCloudStorageStoresCloudStoreUUID(cloudStorageStoresCloudStoreUUID)
	return o
}

// SetCloudStorageStoresCloudStoreUUID adds the cloudStorageStoresCloudStoreUuid to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetCloudStorageStoresCloudStoreUUID(cloudStorageStoresCloudStoreUUID *string) {
	o.CloudStorageStoresCloudStoreUUID = cloudStorageStoresCloudStoreUUID
}

// WithCloudStorageStoresUsed adds the cloudStorageStoresUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithCloudStorageStoresUsed(cloudStorageStoresUsed *int64) *AggregateCollectionGetParams {
	o.SetCloudStorageStoresUsed(cloudStorageStoresUsed)
	return o
}

// SetCloudStorageStoresUsed adds the cloudStorageStoresUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetCloudStorageStoresUsed(cloudStorageStoresUsed *int64) {
	o.CloudStorageStoresUsed = cloudStorageStoresUsed
}

// WithCreateTime adds the createTime to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithCreateTime(createTime *string) *AggregateCollectionGetParams {
	o.SetCreateTime(createTime)
	return o
}

// SetCreateTime adds the createTime to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetCreateTime(createTime *string) {
	o.CreateTime = createTime
}

// WithDataEncryptionDriveProtectionEnabled adds the dataEncryptionDriveProtectionEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithDataEncryptionDriveProtectionEnabled(dataEncryptionDriveProtectionEnabled *bool) *AggregateCollectionGetParams {
	o.SetDataEncryptionDriveProtectionEnabled(dataEncryptionDriveProtectionEnabled)
	return o
}

// SetDataEncryptionDriveProtectionEnabled adds the dataEncryptionDriveProtectionEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetDataEncryptionDriveProtectionEnabled(dataEncryptionDriveProtectionEnabled *bool) {
	o.DataEncryptionDriveProtectionEnabled = dataEncryptionDriveProtectionEnabled
}

// WithDataEncryptionSoftwareEncryptionEnabled adds the dataEncryptionSoftwareEncryptionEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithDataEncryptionSoftwareEncryptionEnabled(dataEncryptionSoftwareEncryptionEnabled *bool) *AggregateCollectionGetParams {
	o.SetDataEncryptionSoftwareEncryptionEnabled(dataEncryptionSoftwareEncryptionEnabled)
	return o
}

// SetDataEncryptionSoftwareEncryptionEnabled adds the dataEncryptionSoftwareEncryptionEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetDataEncryptionSoftwareEncryptionEnabled(dataEncryptionSoftwareEncryptionEnabled *bool) {
	o.DataEncryptionSoftwareEncryptionEnabled = dataEncryptionSoftwareEncryptionEnabled
}

// WithDrHomeNodeName adds the drHomeNodeName to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithDrHomeNodeName(drHomeNodeName *string) *AggregateCollectionGetParams {
	o.SetDrHomeNodeName(drHomeNodeName)
	return o
}

// SetDrHomeNodeName adds the drHomeNodeName to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetDrHomeNodeName(drHomeNodeName *string) {
	o.DrHomeNodeName = drHomeNodeName
}

// WithDrHomeNodeUUID adds the drHomeNodeUUID to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithDrHomeNodeUUID(drHomeNodeUUID *string) *AggregateCollectionGetParams {
	o.SetDrHomeNodeUUID(drHomeNodeUUID)
	return o
}

// SetDrHomeNodeUUID adds the drHomeNodeUuid to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetDrHomeNodeUUID(drHomeNodeUUID *string) {
	o.DrHomeNodeUUID = drHomeNodeUUID
}

// WithFields adds the fields to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithFields(fields []string) *AggregateCollectionGetParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetFields(fields []string) {
	o.Fields = fields
}

// WithFlashPoolEligible adds the flashPoolEligible to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithFlashPoolEligible(flashPoolEligible *bool) *AggregateCollectionGetParams {
	o.SetFlashPoolEligible(flashPoolEligible)
	return o
}

// SetFlashPoolEligible adds the flashPoolEligible to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetFlashPoolEligible(flashPoolEligible *bool) {
	o.FlashPoolEligible = flashPoolEligible
}

// WithHomeNodeName adds the homeNodeName to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithHomeNodeName(homeNodeName *string) *AggregateCollectionGetParams {
	o.SetHomeNodeName(homeNodeName)
	return o
}

// SetHomeNodeName adds the homeNodeName to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetHomeNodeName(homeNodeName *string) {
	o.HomeNodeName = homeNodeName
}

// WithHomeNodeUUID adds the homeNodeUUID to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithHomeNodeUUID(homeNodeUUID *string) *AggregateCollectionGetParams {
	o.SetHomeNodeUUID(homeNodeUUID)
	return o
}

// SetHomeNodeUUID adds the homeNodeUuid to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetHomeNodeUUID(homeNodeUUID *string) {
	o.HomeNodeUUID = homeNodeUUID
}

// WithInactiveDataReportingEnabled adds the inactiveDataReportingEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithInactiveDataReportingEnabled(inactiveDataReportingEnabled *bool) *AggregateCollectionGetParams {
	o.SetInactiveDataReportingEnabled(inactiveDataReportingEnabled)
	return o
}

// SetInactiveDataReportingEnabled adds the inactiveDataReportingEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetInactiveDataReportingEnabled(inactiveDataReportingEnabled *bool) {
	o.InactiveDataReportingEnabled = inactiveDataReportingEnabled
}

// WithInactiveDataReportingStartTime adds the inactiveDataReportingStartTime to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithInactiveDataReportingStartTime(inactiveDataReportingStartTime *string) *AggregateCollectionGetParams {
	o.SetInactiveDataReportingStartTime(inactiveDataReportingStartTime)
	return o
}

// SetInactiveDataReportingStartTime adds the inactiveDataReportingStartTime to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetInactiveDataReportingStartTime(inactiveDataReportingStartTime *string) {
	o.InactiveDataReportingStartTime = inactiveDataReportingStartTime
}

// WithInodeAttributesFilePrivateCapacity adds the inodeAttributesFilePrivateCapacity to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithInodeAttributesFilePrivateCapacity(inodeAttributesFilePrivateCapacity *int64) *AggregateCollectionGetParams {
	o.SetInodeAttributesFilePrivateCapacity(inodeAttributesFilePrivateCapacity)
	return o
}

// SetInodeAttributesFilePrivateCapacity adds the inodeAttributesFilePrivateCapacity to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetInodeAttributesFilePrivateCapacity(inodeAttributesFilePrivateCapacity *int64) {
	o.InodeAttributesFilePrivateCapacity = inodeAttributesFilePrivateCapacity
}

// WithInodeAttributesFilePublicCapacity adds the inodeAttributesFilePublicCapacity to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithInodeAttributesFilePublicCapacity(inodeAttributesFilePublicCapacity *int64) *AggregateCollectionGetParams {
	o.SetInodeAttributesFilePublicCapacity(inodeAttributesFilePublicCapacity)
	return o
}

// SetInodeAttributesFilePublicCapacity adds the inodeAttributesFilePublicCapacity to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetInodeAttributesFilePublicCapacity(inodeAttributesFilePublicCapacity *int64) {
	o.InodeAttributesFilePublicCapacity = inodeAttributesFilePublicCapacity
}

// WithInodeAttributesFilesPrivateUsed adds the inodeAttributesFilesPrivateUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithInodeAttributesFilesPrivateUsed(inodeAttributesFilesPrivateUsed *int64) *AggregateCollectionGetParams {
	o.SetInodeAttributesFilesPrivateUsed(inodeAttributesFilesPrivateUsed)
	return o
}

// SetInodeAttributesFilesPrivateUsed adds the inodeAttributesFilesPrivateUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetInodeAttributesFilesPrivateUsed(inodeAttributesFilesPrivateUsed *int64) {
	o.InodeAttributesFilesPrivateUsed = inodeAttributesFilesPrivateUsed
}

// WithInodeAttributesFilesTotal adds the inodeAttributesFilesTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithInodeAttributesFilesTotal(inodeAttributesFilesTotal *int64) *AggregateCollectionGetParams {
	o.SetInodeAttributesFilesTotal(inodeAttributesFilesTotal)
	return o
}

// SetInodeAttributesFilesTotal adds the inodeAttributesFilesTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetInodeAttributesFilesTotal(inodeAttributesFilesTotal *int64) {
	o.InodeAttributesFilesTotal = inodeAttributesFilesTotal
}

// WithInodeAttributesFilesUsed adds the inodeAttributesFilesUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithInodeAttributesFilesUsed(inodeAttributesFilesUsed *int64) *AggregateCollectionGetParams {
	o.SetInodeAttributesFilesUsed(inodeAttributesFilesUsed)
	return o
}

// SetInodeAttributesFilesUsed adds the inodeAttributesFilesUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetInodeAttributesFilesUsed(inodeAttributesFilesUsed *int64) {
	o.InodeAttributesFilesUsed = inodeAttributesFilesUsed
}

// WithInodeAttributesMaxFilesAvailable adds the inodeAttributesMaxFilesAvailable to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithInodeAttributesMaxFilesAvailable(inodeAttributesMaxFilesAvailable *int64) *AggregateCollectionGetParams {
	o.SetInodeAttributesMaxFilesAvailable(inodeAttributesMaxFilesAvailable)
	return o
}

// SetInodeAttributesMaxFilesAvailable adds the inodeAttributesMaxFilesAvailable to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetInodeAttributesMaxFilesAvailable(inodeAttributesMaxFilesAvailable *int64) {
	o.InodeAttributesMaxFilesAvailable = inodeAttributesMaxFilesAvailable
}

// WithInodeAttributesMaxFilesPossible adds the inodeAttributesMaxFilesPossible to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithInodeAttributesMaxFilesPossible(inodeAttributesMaxFilesPossible *int64) *AggregateCollectionGetParams {
	o.SetInodeAttributesMaxFilesPossible(inodeAttributesMaxFilesPossible)
	return o
}

// SetInodeAttributesMaxFilesPossible adds the inodeAttributesMaxFilesPossible to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetInodeAttributesMaxFilesPossible(inodeAttributesMaxFilesPossible *int64) {
	o.InodeAttributesMaxFilesPossible = inodeAttributesMaxFilesPossible
}

// WithInodeAttributesMaxFilesUsed adds the inodeAttributesMaxFilesUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithInodeAttributesMaxFilesUsed(inodeAttributesMaxFilesUsed *int64) *AggregateCollectionGetParams {
	o.SetInodeAttributesMaxFilesUsed(inodeAttributesMaxFilesUsed)
	return o
}

// SetInodeAttributesMaxFilesUsed adds the inodeAttributesMaxFilesUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetInodeAttributesMaxFilesUsed(inodeAttributesMaxFilesUsed *int64) {
	o.InodeAttributesMaxFilesUsed = inodeAttributesMaxFilesUsed
}

// WithInodeAttributesUsedPercent adds the inodeAttributesUsedPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithInodeAttributesUsedPercent(inodeAttributesUsedPercent *int64) *AggregateCollectionGetParams {
	o.SetInodeAttributesUsedPercent(inodeAttributesUsedPercent)
	return o
}

// SetInodeAttributesUsedPercent adds the inodeAttributesUsedPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetInodeAttributesUsedPercent(inodeAttributesUsedPercent *int64) {
	o.InodeAttributesUsedPercent = inodeAttributesUsedPercent
}

// WithInodeAttributesVersion adds the inodeAttributesVersion to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithInodeAttributesVersion(inodeAttributesVersion *int64) *AggregateCollectionGetParams {
	o.SetInodeAttributesVersion(inodeAttributesVersion)
	return o
}

// SetInodeAttributesVersion adds the inodeAttributesVersion to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetInodeAttributesVersion(inodeAttributesVersion *int64) {
	o.InodeAttributesVersion = inodeAttributesVersion
}

// WithIsSpareLow adds the isSpareLow to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithIsSpareLow(isSpareLow *bool) *AggregateCollectionGetParams {
	o.SetIsSpareLow(isSpareLow)
	return o
}

// SetIsSpareLow adds the isSpareLow to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetIsSpareLow(isSpareLow *bool) {
	o.IsSpareLow = isSpareLow
}

// WithMaxRecords adds the maxRecords to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMaxRecords(maxRecords *int64) *AggregateCollectionGetParams {
	o.SetMaxRecords(maxRecords)
	return o
}

// SetMaxRecords adds the maxRecords to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMaxRecords(maxRecords *int64) {
	o.MaxRecords = maxRecords
}

// WithMetricDuration adds the metricDuration to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricDuration(metricDuration *string) *AggregateCollectionGetParams {
	o.SetMetricDuration(metricDuration)
	return o
}

// SetMetricDuration adds the metricDuration to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricDuration(metricDuration *string) {
	o.MetricDuration = metricDuration
}

// WithMetricIopsOther adds the metricIopsOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricIopsOther(metricIopsOther *int64) *AggregateCollectionGetParams {
	o.SetMetricIopsOther(metricIopsOther)
	return o
}

// SetMetricIopsOther adds the metricIopsOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricIopsOther(metricIopsOther *int64) {
	o.MetricIopsOther = metricIopsOther
}

// WithMetricIopsRead adds the metricIopsRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricIopsRead(metricIopsRead *int64) *AggregateCollectionGetParams {
	o.SetMetricIopsRead(metricIopsRead)
	return o
}

// SetMetricIopsRead adds the metricIopsRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricIopsRead(metricIopsRead *int64) {
	o.MetricIopsRead = metricIopsRead
}

// WithMetricIopsTotal adds the metricIopsTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricIopsTotal(metricIopsTotal *int64) *AggregateCollectionGetParams {
	o.SetMetricIopsTotal(metricIopsTotal)
	return o
}

// SetMetricIopsTotal adds the metricIopsTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricIopsTotal(metricIopsTotal *int64) {
	o.MetricIopsTotal = metricIopsTotal
}

// WithMetricIopsWrite adds the metricIopsWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricIopsWrite(metricIopsWrite *int64) *AggregateCollectionGetParams {
	o.SetMetricIopsWrite(metricIopsWrite)
	return o
}

// SetMetricIopsWrite adds the metricIopsWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricIopsWrite(metricIopsWrite *int64) {
	o.MetricIopsWrite = metricIopsWrite
}

// WithMetricLatencyOther adds the metricLatencyOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricLatencyOther(metricLatencyOther *int64) *AggregateCollectionGetParams {
	o.SetMetricLatencyOther(metricLatencyOther)
	return o
}

// SetMetricLatencyOther adds the metricLatencyOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricLatencyOther(metricLatencyOther *int64) {
	o.MetricLatencyOther = metricLatencyOther
}

// WithMetricLatencyRead adds the metricLatencyRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricLatencyRead(metricLatencyRead *int64) *AggregateCollectionGetParams {
	o.SetMetricLatencyRead(metricLatencyRead)
	return o
}

// SetMetricLatencyRead adds the metricLatencyRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricLatencyRead(metricLatencyRead *int64) {
	o.MetricLatencyRead = metricLatencyRead
}

// WithMetricLatencyTotal adds the metricLatencyTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricLatencyTotal(metricLatencyTotal *int64) *AggregateCollectionGetParams {
	o.SetMetricLatencyTotal(metricLatencyTotal)
	return o
}

// SetMetricLatencyTotal adds the metricLatencyTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricLatencyTotal(metricLatencyTotal *int64) {
	o.MetricLatencyTotal = metricLatencyTotal
}

// WithMetricLatencyWrite adds the metricLatencyWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricLatencyWrite(metricLatencyWrite *int64) *AggregateCollectionGetParams {
	o.SetMetricLatencyWrite(metricLatencyWrite)
	return o
}

// SetMetricLatencyWrite adds the metricLatencyWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricLatencyWrite(metricLatencyWrite *int64) {
	o.MetricLatencyWrite = metricLatencyWrite
}

// WithMetricStatus adds the metricStatus to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricStatus(metricStatus *string) *AggregateCollectionGetParams {
	o.SetMetricStatus(metricStatus)
	return o
}

// SetMetricStatus adds the metricStatus to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricStatus(metricStatus *string) {
	o.MetricStatus = metricStatus
}

// WithMetricThroughputOther adds the metricThroughputOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricThroughputOther(metricThroughputOther *int64) *AggregateCollectionGetParams {
	o.SetMetricThroughputOther(metricThroughputOther)
	return o
}

// SetMetricThroughputOther adds the metricThroughputOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricThroughputOther(metricThroughputOther *int64) {
	o.MetricThroughputOther = metricThroughputOther
}

// WithMetricThroughputRead adds the metricThroughputRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricThroughputRead(metricThroughputRead *int64) *AggregateCollectionGetParams {
	o.SetMetricThroughputRead(metricThroughputRead)
	return o
}

// SetMetricThroughputRead adds the metricThroughputRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricThroughputRead(metricThroughputRead *int64) {
	o.MetricThroughputRead = metricThroughputRead
}

// WithMetricThroughputTotal adds the metricThroughputTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricThroughputTotal(metricThroughputTotal *int64) *AggregateCollectionGetParams {
	o.SetMetricThroughputTotal(metricThroughputTotal)
	return o
}

// SetMetricThroughputTotal adds the metricThroughputTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricThroughputTotal(metricThroughputTotal *int64) {
	o.MetricThroughputTotal = metricThroughputTotal
}

// WithMetricThroughputWrite adds the metricThroughputWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricThroughputWrite(metricThroughputWrite *int64) *AggregateCollectionGetParams {
	o.SetMetricThroughputWrite(metricThroughputWrite)
	return o
}

// SetMetricThroughputWrite adds the metricThroughputWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricThroughputWrite(metricThroughputWrite *int64) {
	o.MetricThroughputWrite = metricThroughputWrite
}

// WithMetricTimestamp adds the metricTimestamp to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithMetricTimestamp(metricTimestamp *string) *AggregateCollectionGetParams {
	o.SetMetricTimestamp(metricTimestamp)
	return o
}

// SetMetricTimestamp adds the metricTimestamp to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetMetricTimestamp(metricTimestamp *string) {
	o.MetricTimestamp = metricTimestamp
}

// WithName adds the name to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithName(name *string) *AggregateCollectionGetParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetName(name *string) {
	o.Name = name
}

// WithNodeName adds the nodeName to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithNodeName(nodeName *string) *AggregateCollectionGetParams {
	o.SetNodeName(nodeName)
	return o
}

// SetNodeName adds the nodeName to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetNodeName(nodeName *string) {
	o.NodeName = nodeName
}

// WithNodeUUID adds the nodeUUID to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithNodeUUID(nodeUUID *string) *AggregateCollectionGetParams {
	o.SetNodeUUID(nodeUUID)
	return o
}

// SetNodeUUID adds the nodeUuid to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetNodeUUID(nodeUUID *string) {
	o.NodeUUID = nodeUUID
}

// WithOrderBy adds the orderBy to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithOrderBy(orderBy []string) *AggregateCollectionGetParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetOrderBy(orderBy []string) {
	o.OrderBy = orderBy
}

// WithRecommend adds the recommend to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithRecommend(recommend *bool) *AggregateCollectionGetParams {
	o.SetRecommend(recommend)
	return o
}

// SetRecommend adds the recommend to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetRecommend(recommend *bool) {
	o.Recommend = recommend
}

// WithReturnRecords adds the returnRecords to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithReturnRecords(returnRecords *bool) *AggregateCollectionGetParams {
	o.SetReturnRecords(returnRecords)
	return o
}

// SetReturnRecords adds the returnRecords to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetReturnRecords(returnRecords *bool) {
	o.ReturnRecords = returnRecords
}

// WithReturnTimeout adds the returnTimeout to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithReturnTimeout(returnTimeout *int64) *AggregateCollectionGetParams {
	o.SetReturnTimeout(returnTimeout)
	return o
}

// SetReturnTimeout adds the returnTimeout to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetReturnTimeout(returnTimeout *int64) {
	o.ReturnTimeout = returnTimeout
}

// WithShowSpares adds the showSpares to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithShowSpares(showSpares *bool) *AggregateCollectionGetParams {
	o.SetShowSpares(showSpares)
	return o
}

// SetShowSpares adds the showSpares to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetShowSpares(showSpares *bool) {
	o.ShowSpares = showSpares
}

// WithSidlEnabled adds the sidlEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSidlEnabled(sidlEnabled *bool) *AggregateCollectionGetParams {
	o.SetSidlEnabled(sidlEnabled)
	return o
}

// SetSidlEnabled adds the sidlEnabled to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSidlEnabled(sidlEnabled *bool) {
	o.SidlEnabled = sidlEnabled
}

// WithSnaplockType adds the snaplockType to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSnaplockType(snaplockType *string) *AggregateCollectionGetParams {
	o.SetSnaplockType(snaplockType)
	return o
}

// SetSnaplockType adds the snaplockType to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSnaplockType(snaplockType *string) {
	o.SnaplockType = snaplockType
}

// WithSnapshotFilesTotal adds the snapshotFilesTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSnapshotFilesTotal(snapshotFilesTotal *int64) *AggregateCollectionGetParams {
	o.SetSnapshotFilesTotal(snapshotFilesTotal)
	return o
}

// SetSnapshotFilesTotal adds the snapshotFilesTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSnapshotFilesTotal(snapshotFilesTotal *int64) {
	o.SnapshotFilesTotal = snapshotFilesTotal
}

// WithSnapshotFilesUsed adds the snapshotFilesUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSnapshotFilesUsed(snapshotFilesUsed *int64) *AggregateCollectionGetParams {
	o.SetSnapshotFilesUsed(snapshotFilesUsed)
	return o
}

// SetSnapshotFilesUsed adds the snapshotFilesUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSnapshotFilesUsed(snapshotFilesUsed *int64) {
	o.SnapshotFilesUsed = snapshotFilesUsed
}

// WithSnapshotMaxFilesAvailable adds the snapshotMaxFilesAvailable to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSnapshotMaxFilesAvailable(snapshotMaxFilesAvailable *int64) *AggregateCollectionGetParams {
	o.SetSnapshotMaxFilesAvailable(snapshotMaxFilesAvailable)
	return o
}

// SetSnapshotMaxFilesAvailable adds the snapshotMaxFilesAvailable to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSnapshotMaxFilesAvailable(snapshotMaxFilesAvailable *int64) {
	o.SnapshotMaxFilesAvailable = snapshotMaxFilesAvailable
}

// WithSnapshotMaxFilesUsed adds the snapshotMaxFilesUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSnapshotMaxFilesUsed(snapshotMaxFilesUsed *int64) *AggregateCollectionGetParams {
	o.SetSnapshotMaxFilesUsed(snapshotMaxFilesUsed)
	return o
}

// SetSnapshotMaxFilesUsed adds the snapshotMaxFilesUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSnapshotMaxFilesUsed(snapshotMaxFilesUsed *int64) {
	o.SnapshotMaxFilesUsed = snapshotMaxFilesUsed
}

// WithSpaceBlockStorageAggregateMetadata adds the spaceBlockStorageAggregateMetadata to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageAggregateMetadata(spaceBlockStorageAggregateMetadata *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageAggregateMetadata(spaceBlockStorageAggregateMetadata)
	return o
}

// SetSpaceBlockStorageAggregateMetadata adds the spaceBlockStorageAggregateMetadata to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageAggregateMetadata(spaceBlockStorageAggregateMetadata *int64) {
	o.SpaceBlockStorageAggregateMetadata = spaceBlockStorageAggregateMetadata
}

// WithSpaceBlockStorageAggregateMetadataPercent adds the spaceBlockStorageAggregateMetadataPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageAggregateMetadataPercent(spaceBlockStorageAggregateMetadataPercent *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageAggregateMetadataPercent(spaceBlockStorageAggregateMetadataPercent)
	return o
}

// SetSpaceBlockStorageAggregateMetadataPercent adds the spaceBlockStorageAggregateMetadataPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageAggregateMetadataPercent(spaceBlockStorageAggregateMetadataPercent *int64) {
	o.SpaceBlockStorageAggregateMetadataPercent = spaceBlockStorageAggregateMetadataPercent
}

// WithSpaceBlockStorageAvailable adds the spaceBlockStorageAvailable to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageAvailable(spaceBlockStorageAvailable *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageAvailable(spaceBlockStorageAvailable)
	return o
}

// SetSpaceBlockStorageAvailable adds the spaceBlockStorageAvailable to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageAvailable(spaceBlockStorageAvailable *int64) {
	o.SpaceBlockStorageAvailable = spaceBlockStorageAvailable
}

// WithSpaceBlockStorageDataCompactedCount adds the spaceBlockStorageDataCompactedCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageDataCompactedCount(spaceBlockStorageDataCompactedCount *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageDataCompactedCount(spaceBlockStorageDataCompactedCount)
	return o
}

// SetSpaceBlockStorageDataCompactedCount adds the spaceBlockStorageDataCompactedCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageDataCompactedCount(spaceBlockStorageDataCompactedCount *int64) {
	o.SpaceBlockStorageDataCompactedCount = spaceBlockStorageDataCompactedCount
}

// WithSpaceBlockStorageDataCompactionSpaceSaved adds the spaceBlockStorageDataCompactionSpaceSaved to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageDataCompactionSpaceSaved(spaceBlockStorageDataCompactionSpaceSaved *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageDataCompactionSpaceSaved(spaceBlockStorageDataCompactionSpaceSaved)
	return o
}

// SetSpaceBlockStorageDataCompactionSpaceSaved adds the spaceBlockStorageDataCompactionSpaceSaved to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageDataCompactionSpaceSaved(spaceBlockStorageDataCompactionSpaceSaved *int64) {
	o.SpaceBlockStorageDataCompactionSpaceSaved = spaceBlockStorageDataCompactionSpaceSaved
}

// WithSpaceBlockStorageDataCompactionSpaceSavedPercent adds the spaceBlockStorageDataCompactionSpaceSavedPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageDataCompactionSpaceSavedPercent(spaceBlockStorageDataCompactionSpaceSavedPercent *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageDataCompactionSpaceSavedPercent(spaceBlockStorageDataCompactionSpaceSavedPercent)
	return o
}

// SetSpaceBlockStorageDataCompactionSpaceSavedPercent adds the spaceBlockStorageDataCompactionSpaceSavedPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageDataCompactionSpaceSavedPercent(spaceBlockStorageDataCompactionSpaceSavedPercent *int64) {
	o.SpaceBlockStorageDataCompactionSpaceSavedPercent = spaceBlockStorageDataCompactionSpaceSavedPercent
}

// WithSpaceBlockStorageFullThresholdPercent adds the spaceBlockStorageFullThresholdPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageFullThresholdPercent(spaceBlockStorageFullThresholdPercent *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageFullThresholdPercent(spaceBlockStorageFullThresholdPercent)
	return o
}

// SetSpaceBlockStorageFullThresholdPercent adds the spaceBlockStorageFullThresholdPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageFullThresholdPercent(spaceBlockStorageFullThresholdPercent *int64) {
	o.SpaceBlockStorageFullThresholdPercent = spaceBlockStorageFullThresholdPercent
}

// WithSpaceBlockStorageInactiveUserData adds the spaceBlockStorageInactiveUserData to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageInactiveUserData(spaceBlockStorageInactiveUserData *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageInactiveUserData(spaceBlockStorageInactiveUserData)
	return o
}

// SetSpaceBlockStorageInactiveUserData adds the spaceBlockStorageInactiveUserData to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageInactiveUserData(spaceBlockStorageInactiveUserData *int64) {
	o.SpaceBlockStorageInactiveUserData = spaceBlockStorageInactiveUserData
}

// WithSpaceBlockStorageInactiveUserDataPercent adds the spaceBlockStorageInactiveUserDataPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageInactiveUserDataPercent(spaceBlockStorageInactiveUserDataPercent *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageInactiveUserDataPercent(spaceBlockStorageInactiveUserDataPercent)
	return o
}

// SetSpaceBlockStorageInactiveUserDataPercent adds the spaceBlockStorageInactiveUserDataPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageInactiveUserDataPercent(spaceBlockStorageInactiveUserDataPercent *int64) {
	o.SpaceBlockStorageInactiveUserDataPercent = spaceBlockStorageInactiveUserDataPercent
}

// WithSpaceBlockStoragePhysicalUsed adds the spaceBlockStoragePhysicalUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStoragePhysicalUsed(spaceBlockStoragePhysicalUsed *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStoragePhysicalUsed(spaceBlockStoragePhysicalUsed)
	return o
}

// SetSpaceBlockStoragePhysicalUsed adds the spaceBlockStoragePhysicalUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStoragePhysicalUsed(spaceBlockStoragePhysicalUsed *int64) {
	o.SpaceBlockStoragePhysicalUsed = spaceBlockStoragePhysicalUsed
}

// WithSpaceBlockStoragePhysicalUsedPercent adds the spaceBlockStoragePhysicalUsedPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStoragePhysicalUsedPercent(spaceBlockStoragePhysicalUsedPercent *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStoragePhysicalUsedPercent(spaceBlockStoragePhysicalUsedPercent)
	return o
}

// SetSpaceBlockStoragePhysicalUsedPercent adds the spaceBlockStoragePhysicalUsedPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStoragePhysicalUsedPercent(spaceBlockStoragePhysicalUsedPercent *int64) {
	o.SpaceBlockStoragePhysicalUsedPercent = spaceBlockStoragePhysicalUsedPercent
}

// WithSpaceBlockStorageSize adds the spaceBlockStorageSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageSize(spaceBlockStorageSize *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageSize(spaceBlockStorageSize)
	return o
}

// SetSpaceBlockStorageSize adds the spaceBlockStorageSize to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageSize(spaceBlockStorageSize *int64) {
	o.SpaceBlockStorageSize = spaceBlockStorageSize
}

// WithSpaceBlockStorageUsed adds the spaceBlockStorageUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageUsed(spaceBlockStorageUsed *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageUsed(spaceBlockStorageUsed)
	return o
}

// SetSpaceBlockStorageUsed adds the spaceBlockStorageUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageUsed(spaceBlockStorageUsed *int64) {
	o.SpaceBlockStorageUsed = spaceBlockStorageUsed
}

// WithSpaceBlockStorageUsedIncludingSnapshotReserve adds the spaceBlockStorageUsedIncludingSnapshotReserve to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageUsedIncludingSnapshotReserve(spaceBlockStorageUsedIncludingSnapshotReserve *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageUsedIncludingSnapshotReserve(spaceBlockStorageUsedIncludingSnapshotReserve)
	return o
}

// SetSpaceBlockStorageUsedIncludingSnapshotReserve adds the spaceBlockStorageUsedIncludingSnapshotReserve to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageUsedIncludingSnapshotReserve(spaceBlockStorageUsedIncludingSnapshotReserve *int64) {
	o.SpaceBlockStorageUsedIncludingSnapshotReserve = spaceBlockStorageUsedIncludingSnapshotReserve
}

// WithSpaceBlockStorageUsedIncludingSnapshotReservePercent adds the spaceBlockStorageUsedIncludingSnapshotReservePercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageUsedIncludingSnapshotReservePercent(spaceBlockStorageUsedIncludingSnapshotReservePercent *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageUsedIncludingSnapshotReservePercent(spaceBlockStorageUsedIncludingSnapshotReservePercent)
	return o
}

// SetSpaceBlockStorageUsedIncludingSnapshotReservePercent adds the spaceBlockStorageUsedIncludingSnapshotReservePercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageUsedIncludingSnapshotReservePercent(spaceBlockStorageUsedIncludingSnapshotReservePercent *int64) {
	o.SpaceBlockStorageUsedIncludingSnapshotReservePercent = spaceBlockStorageUsedIncludingSnapshotReservePercent
}

// WithSpaceBlockStorageUsedPercent adds the spaceBlockStorageUsedPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageUsedPercent(spaceBlockStorageUsedPercent *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageUsedPercent(spaceBlockStorageUsedPercent)
	return o
}

// SetSpaceBlockStorageUsedPercent adds the spaceBlockStorageUsedPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageUsedPercent(spaceBlockStorageUsedPercent *int64) {
	o.SpaceBlockStorageUsedPercent = spaceBlockStorageUsedPercent
}

// WithSpaceBlockStorageVolumeDeduplicationSharedCount adds the spaceBlockStorageVolumeDeduplicationSharedCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageVolumeDeduplicationSharedCount(spaceBlockStorageVolumeDeduplicationSharedCount *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageVolumeDeduplicationSharedCount(spaceBlockStorageVolumeDeduplicationSharedCount)
	return o
}

// SetSpaceBlockStorageVolumeDeduplicationSharedCount adds the spaceBlockStorageVolumeDeduplicationSharedCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageVolumeDeduplicationSharedCount(spaceBlockStorageVolumeDeduplicationSharedCount *int64) {
	o.SpaceBlockStorageVolumeDeduplicationSharedCount = spaceBlockStorageVolumeDeduplicationSharedCount
}

// WithSpaceBlockStorageVolumeDeduplicationSpaceSaved adds the spaceBlockStorageVolumeDeduplicationSpaceSaved to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageVolumeDeduplicationSpaceSaved(spaceBlockStorageVolumeDeduplicationSpaceSaved *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageVolumeDeduplicationSpaceSaved(spaceBlockStorageVolumeDeduplicationSpaceSaved)
	return o
}

// SetSpaceBlockStorageVolumeDeduplicationSpaceSaved adds the spaceBlockStorageVolumeDeduplicationSpaceSaved to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageVolumeDeduplicationSpaceSaved(spaceBlockStorageVolumeDeduplicationSpaceSaved *int64) {
	o.SpaceBlockStorageVolumeDeduplicationSpaceSaved = spaceBlockStorageVolumeDeduplicationSpaceSaved
}

// WithSpaceBlockStorageVolumeDeduplicationSpaceSavedPercent adds the spaceBlockStorageVolumeDeduplicationSpaceSavedPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageVolumeDeduplicationSpaceSavedPercent(spaceBlockStorageVolumeDeduplicationSpaceSavedPercent *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageVolumeDeduplicationSpaceSavedPercent(spaceBlockStorageVolumeDeduplicationSpaceSavedPercent)
	return o
}

// SetSpaceBlockStorageVolumeDeduplicationSpaceSavedPercent adds the spaceBlockStorageVolumeDeduplicationSpaceSavedPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageVolumeDeduplicationSpaceSavedPercent(spaceBlockStorageVolumeDeduplicationSpaceSavedPercent *int64) {
	o.SpaceBlockStorageVolumeDeduplicationSpaceSavedPercent = spaceBlockStorageVolumeDeduplicationSpaceSavedPercent
}

// WithSpaceBlockStorageVolumeFootprintsPercent adds the spaceBlockStorageVolumeFootprintsPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceBlockStorageVolumeFootprintsPercent(spaceBlockStorageVolumeFootprintsPercent *int64) *AggregateCollectionGetParams {
	o.SetSpaceBlockStorageVolumeFootprintsPercent(spaceBlockStorageVolumeFootprintsPercent)
	return o
}

// SetSpaceBlockStorageVolumeFootprintsPercent adds the spaceBlockStorageVolumeFootprintsPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceBlockStorageVolumeFootprintsPercent(spaceBlockStorageVolumeFootprintsPercent *int64) {
	o.SpaceBlockStorageVolumeFootprintsPercent = spaceBlockStorageVolumeFootprintsPercent
}

// WithSpaceCloudStorageUsed adds the spaceCloudStorageUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceCloudStorageUsed(spaceCloudStorageUsed *int64) *AggregateCollectionGetParams {
	o.SetSpaceCloudStorageUsed(spaceCloudStorageUsed)
	return o
}

// SetSpaceCloudStorageUsed adds the spaceCloudStorageUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceCloudStorageUsed(spaceCloudStorageUsed *int64) {
	o.SpaceCloudStorageUsed = spaceCloudStorageUsed
}

// WithSpaceEfficiencyAutoAdaptiveCompressionSavings adds the spaceEfficiencyAutoAdaptiveCompressionSavings to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyAutoAdaptiveCompressionSavings(spaceEfficiencyAutoAdaptiveCompressionSavings *bool) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyAutoAdaptiveCompressionSavings(spaceEfficiencyAutoAdaptiveCompressionSavings)
	return o
}

// SetSpaceEfficiencyAutoAdaptiveCompressionSavings adds the spaceEfficiencyAutoAdaptiveCompressionSavings to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyAutoAdaptiveCompressionSavings(spaceEfficiencyAutoAdaptiveCompressionSavings *bool) {
	o.SpaceEfficiencyAutoAdaptiveCompressionSavings = spaceEfficiencyAutoAdaptiveCompressionSavings
}

// WithSpaceEfficiencyCrossVolumeBackgroundDedupe adds the spaceEfficiencyCrossVolumeBackgroundDedupe to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyCrossVolumeBackgroundDedupe(spaceEfficiencyCrossVolumeBackgroundDedupe *bool) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyCrossVolumeBackgroundDedupe(spaceEfficiencyCrossVolumeBackgroundDedupe)
	return o
}

// SetSpaceEfficiencyCrossVolumeBackgroundDedupe adds the spaceEfficiencyCrossVolumeBackgroundDedupe to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyCrossVolumeBackgroundDedupe(spaceEfficiencyCrossVolumeBackgroundDedupe *bool) {
	o.SpaceEfficiencyCrossVolumeBackgroundDedupe = spaceEfficiencyCrossVolumeBackgroundDedupe
}

// WithSpaceEfficiencyCrossVolumeDedupeSavings adds the spaceEfficiencyCrossVolumeDedupeSavings to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyCrossVolumeDedupeSavings(spaceEfficiencyCrossVolumeDedupeSavings *bool) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyCrossVolumeDedupeSavings(spaceEfficiencyCrossVolumeDedupeSavings)
	return o
}

// SetSpaceEfficiencyCrossVolumeDedupeSavings adds the spaceEfficiencyCrossVolumeDedupeSavings to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyCrossVolumeDedupeSavings(spaceEfficiencyCrossVolumeDedupeSavings *bool) {
	o.SpaceEfficiencyCrossVolumeDedupeSavings = spaceEfficiencyCrossVolumeDedupeSavings
}

// WithSpaceEfficiencyCrossVolumeInlineDedupe adds the spaceEfficiencyCrossVolumeInlineDedupe to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyCrossVolumeInlineDedupe(spaceEfficiencyCrossVolumeInlineDedupe *bool) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyCrossVolumeInlineDedupe(spaceEfficiencyCrossVolumeInlineDedupe)
	return o
}

// SetSpaceEfficiencyCrossVolumeInlineDedupe adds the spaceEfficiencyCrossVolumeInlineDedupe to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyCrossVolumeInlineDedupe(spaceEfficiencyCrossVolumeInlineDedupe *bool) {
	o.SpaceEfficiencyCrossVolumeInlineDedupe = spaceEfficiencyCrossVolumeInlineDedupe
}

// WithSpaceEfficiencyEnableWorkloadInformedTsse adds the spaceEfficiencyEnableWorkloadInformedTsse to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyEnableWorkloadInformedTsse(spaceEfficiencyEnableWorkloadInformedTsse *bool) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyEnableWorkloadInformedTsse(spaceEfficiencyEnableWorkloadInformedTsse)
	return o
}

// SetSpaceEfficiencyEnableWorkloadInformedTsse adds the spaceEfficiencyEnableWorkloadInformedTsse to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyEnableWorkloadInformedTsse(spaceEfficiencyEnableWorkloadInformedTsse *bool) {
	o.SpaceEfficiencyEnableWorkloadInformedTsse = spaceEfficiencyEnableWorkloadInformedTsse
}

// WithSpaceEfficiencyLogicalUsed adds the spaceEfficiencyLogicalUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyLogicalUsed(spaceEfficiencyLogicalUsed *int64) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyLogicalUsed(spaceEfficiencyLogicalUsed)
	return o
}

// SetSpaceEfficiencyLogicalUsed adds the spaceEfficiencyLogicalUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyLogicalUsed(spaceEfficiencyLogicalUsed *int64) {
	o.SpaceEfficiencyLogicalUsed = spaceEfficiencyLogicalUsed
}

// WithSpaceEfficiencyRatio adds the spaceEfficiencyRatio to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyRatio(spaceEfficiencyRatio *float64) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyRatio(spaceEfficiencyRatio)
	return o
}

// SetSpaceEfficiencyRatio adds the spaceEfficiencyRatio to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyRatio(spaceEfficiencyRatio *float64) {
	o.SpaceEfficiencyRatio = spaceEfficiencyRatio
}

// WithSpaceEfficiencySavings adds the spaceEfficiencySavings to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencySavings(spaceEfficiencySavings *int64) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencySavings(spaceEfficiencySavings)
	return o
}

// SetSpaceEfficiencySavings adds the spaceEfficiencySavings to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencySavings(spaceEfficiencySavings *int64) {
	o.SpaceEfficiencySavings = spaceEfficiencySavings
}

// WithSpaceEfficiencyWiseTsseMinUsedCapacityPct adds the spaceEfficiencyWiseTsseMinUsedCapacityPct to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyWiseTsseMinUsedCapacityPct(spaceEfficiencyWiseTsseMinUsedCapacityPct *int64) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyWiseTsseMinUsedCapacityPct(spaceEfficiencyWiseTsseMinUsedCapacityPct)
	return o
}

// SetSpaceEfficiencyWiseTsseMinUsedCapacityPct adds the spaceEfficiencyWiseTsseMinUsedCapacityPct to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyWiseTsseMinUsedCapacityPct(spaceEfficiencyWiseTsseMinUsedCapacityPct *int64) {
	o.SpaceEfficiencyWiseTsseMinUsedCapacityPct = spaceEfficiencyWiseTsseMinUsedCapacityPct
}

// WithSpaceEfficiencyWithoutSnapshotsLogicalUsed adds the spaceEfficiencyWithoutSnapshotsLogicalUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyWithoutSnapshotsLogicalUsed(spaceEfficiencyWithoutSnapshotsLogicalUsed *int64) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyWithoutSnapshotsLogicalUsed(spaceEfficiencyWithoutSnapshotsLogicalUsed)
	return o
}

// SetSpaceEfficiencyWithoutSnapshotsLogicalUsed adds the spaceEfficiencyWithoutSnapshotsLogicalUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyWithoutSnapshotsLogicalUsed(spaceEfficiencyWithoutSnapshotsLogicalUsed *int64) {
	o.SpaceEfficiencyWithoutSnapshotsLogicalUsed = spaceEfficiencyWithoutSnapshotsLogicalUsed
}

// WithSpaceEfficiencyWithoutSnapshotsRatio adds the spaceEfficiencyWithoutSnapshotsRatio to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyWithoutSnapshotsRatio(spaceEfficiencyWithoutSnapshotsRatio *float64) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyWithoutSnapshotsRatio(spaceEfficiencyWithoutSnapshotsRatio)
	return o
}

// SetSpaceEfficiencyWithoutSnapshotsRatio adds the spaceEfficiencyWithoutSnapshotsRatio to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyWithoutSnapshotsRatio(spaceEfficiencyWithoutSnapshotsRatio *float64) {
	o.SpaceEfficiencyWithoutSnapshotsRatio = spaceEfficiencyWithoutSnapshotsRatio
}

// WithSpaceEfficiencyWithoutSnapshotsSavings adds the spaceEfficiencyWithoutSnapshotsSavings to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyWithoutSnapshotsSavings(spaceEfficiencyWithoutSnapshotsSavings *int64) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyWithoutSnapshotsSavings(spaceEfficiencyWithoutSnapshotsSavings)
	return o
}

// SetSpaceEfficiencyWithoutSnapshotsSavings adds the spaceEfficiencyWithoutSnapshotsSavings to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyWithoutSnapshotsSavings(spaceEfficiencyWithoutSnapshotsSavings *int64) {
	o.SpaceEfficiencyWithoutSnapshotsSavings = spaceEfficiencyWithoutSnapshotsSavings
}

// WithSpaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed adds the spaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed(spaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed *int64) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed(spaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed)
	return o
}

// SetSpaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed adds the spaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed(spaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed *int64) {
	o.SpaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed = spaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed
}

// WithSpaceEfficiencyWithoutSnapshotsFlexclonesRatio adds the spaceEfficiencyWithoutSnapshotsFlexclonesRatio to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyWithoutSnapshotsFlexclonesRatio(spaceEfficiencyWithoutSnapshotsFlexclonesRatio *float64) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyWithoutSnapshotsFlexclonesRatio(spaceEfficiencyWithoutSnapshotsFlexclonesRatio)
	return o
}

// SetSpaceEfficiencyWithoutSnapshotsFlexclonesRatio adds the spaceEfficiencyWithoutSnapshotsFlexclonesRatio to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyWithoutSnapshotsFlexclonesRatio(spaceEfficiencyWithoutSnapshotsFlexclonesRatio *float64) {
	o.SpaceEfficiencyWithoutSnapshotsFlexclonesRatio = spaceEfficiencyWithoutSnapshotsFlexclonesRatio
}

// WithSpaceEfficiencyWithoutSnapshotsFlexclonesSavings adds the spaceEfficiencyWithoutSnapshotsFlexclonesSavings to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceEfficiencyWithoutSnapshotsFlexclonesSavings(spaceEfficiencyWithoutSnapshotsFlexclonesSavings *int64) *AggregateCollectionGetParams {
	o.SetSpaceEfficiencyWithoutSnapshotsFlexclonesSavings(spaceEfficiencyWithoutSnapshotsFlexclonesSavings)
	return o
}

// SetSpaceEfficiencyWithoutSnapshotsFlexclonesSavings adds the spaceEfficiencyWithoutSnapshotsFlexclonesSavings to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceEfficiencyWithoutSnapshotsFlexclonesSavings(spaceEfficiencyWithoutSnapshotsFlexclonesSavings *int64) {
	o.SpaceEfficiencyWithoutSnapshotsFlexclonesSavings = spaceEfficiencyWithoutSnapshotsFlexclonesSavings
}

// WithSpaceFootprint adds the spaceFootprint to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceFootprint(spaceFootprint *int64) *AggregateCollectionGetParams {
	o.SetSpaceFootprint(spaceFootprint)
	return o
}

// SetSpaceFootprint adds the spaceFootprint to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceFootprint(spaceFootprint *int64) {
	o.SpaceFootprint = spaceFootprint
}

// WithSpaceSnapshotAvailable adds the spaceSnapshotAvailable to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceSnapshotAvailable(spaceSnapshotAvailable *int64) *AggregateCollectionGetParams {
	o.SetSpaceSnapshotAvailable(spaceSnapshotAvailable)
	return o
}

// SetSpaceSnapshotAvailable adds the spaceSnapshotAvailable to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceSnapshotAvailable(spaceSnapshotAvailable *int64) {
	o.SpaceSnapshotAvailable = spaceSnapshotAvailable
}

// WithSpaceSnapshotReservePercent adds the spaceSnapshotReservePercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceSnapshotReservePercent(spaceSnapshotReservePercent *int64) *AggregateCollectionGetParams {
	o.SetSpaceSnapshotReservePercent(spaceSnapshotReservePercent)
	return o
}

// SetSpaceSnapshotReservePercent adds the spaceSnapshotReservePercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceSnapshotReservePercent(spaceSnapshotReservePercent *int64) {
	o.SpaceSnapshotReservePercent = spaceSnapshotReservePercent
}

// WithSpaceSnapshotTotal adds the spaceSnapshotTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceSnapshotTotal(spaceSnapshotTotal *int64) *AggregateCollectionGetParams {
	o.SetSpaceSnapshotTotal(spaceSnapshotTotal)
	return o
}

// SetSpaceSnapshotTotal adds the spaceSnapshotTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceSnapshotTotal(spaceSnapshotTotal *int64) {
	o.SpaceSnapshotTotal = spaceSnapshotTotal
}

// WithSpaceSnapshotUsed adds the spaceSnapshotUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceSnapshotUsed(spaceSnapshotUsed *int64) *AggregateCollectionGetParams {
	o.SetSpaceSnapshotUsed(spaceSnapshotUsed)
	return o
}

// SetSpaceSnapshotUsed adds the spaceSnapshotUsed to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceSnapshotUsed(spaceSnapshotUsed *int64) {
	o.SpaceSnapshotUsed = spaceSnapshotUsed
}

// WithSpaceSnapshotUsedPercent adds the spaceSnapshotUsedPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceSnapshotUsedPercent(spaceSnapshotUsedPercent *int64) *AggregateCollectionGetParams {
	o.SetSpaceSnapshotUsedPercent(spaceSnapshotUsedPercent)
	return o
}

// SetSpaceSnapshotUsedPercent adds the spaceSnapshotUsedPercent to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceSnapshotUsedPercent(spaceSnapshotUsedPercent *int64) {
	o.SpaceSnapshotUsedPercent = spaceSnapshotUsedPercent
}

// WithSpaceTotalProvisionedSpace adds the spaceTotalProvisionedSpace to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithSpaceTotalProvisionedSpace(spaceTotalProvisionedSpace *int64) *AggregateCollectionGetParams {
	o.SetSpaceTotalProvisionedSpace(spaceTotalProvisionedSpace)
	return o
}

// SetSpaceTotalProvisionedSpace adds the spaceTotalProvisionedSpace to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetSpaceTotalProvisionedSpace(spaceTotalProvisionedSpace *int64) {
	o.SpaceTotalProvisionedSpace = spaceTotalProvisionedSpace
}

// WithState adds the state to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithState(state *string) *AggregateCollectionGetParams {
	o.SetState(state)
	return o
}

// SetState adds the state to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetState(state *string) {
	o.State = state
}

// WithStatisticsIopsRawOther adds the statisticsIopsRawOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsIopsRawOther(statisticsIopsRawOther *int64) *AggregateCollectionGetParams {
	o.SetStatisticsIopsRawOther(statisticsIopsRawOther)
	return o
}

// SetStatisticsIopsRawOther adds the statisticsIopsRawOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsIopsRawOther(statisticsIopsRawOther *int64) {
	o.StatisticsIopsRawOther = statisticsIopsRawOther
}

// WithStatisticsIopsRawRead adds the statisticsIopsRawRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsIopsRawRead(statisticsIopsRawRead *int64) *AggregateCollectionGetParams {
	o.SetStatisticsIopsRawRead(statisticsIopsRawRead)
	return o
}

// SetStatisticsIopsRawRead adds the statisticsIopsRawRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsIopsRawRead(statisticsIopsRawRead *int64) {
	o.StatisticsIopsRawRead = statisticsIopsRawRead
}

// WithStatisticsIopsRawTotal adds the statisticsIopsRawTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsIopsRawTotal(statisticsIopsRawTotal *int64) *AggregateCollectionGetParams {
	o.SetStatisticsIopsRawTotal(statisticsIopsRawTotal)
	return o
}

// SetStatisticsIopsRawTotal adds the statisticsIopsRawTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsIopsRawTotal(statisticsIopsRawTotal *int64) {
	o.StatisticsIopsRawTotal = statisticsIopsRawTotal
}

// WithStatisticsIopsRawWrite adds the statisticsIopsRawWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsIopsRawWrite(statisticsIopsRawWrite *int64) *AggregateCollectionGetParams {
	o.SetStatisticsIopsRawWrite(statisticsIopsRawWrite)
	return o
}

// SetStatisticsIopsRawWrite adds the statisticsIopsRawWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsIopsRawWrite(statisticsIopsRawWrite *int64) {
	o.StatisticsIopsRawWrite = statisticsIopsRawWrite
}

// WithStatisticsLatencyRawOther adds the statisticsLatencyRawOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsLatencyRawOther(statisticsLatencyRawOther *int64) *AggregateCollectionGetParams {
	o.SetStatisticsLatencyRawOther(statisticsLatencyRawOther)
	return o
}

// SetStatisticsLatencyRawOther adds the statisticsLatencyRawOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsLatencyRawOther(statisticsLatencyRawOther *int64) {
	o.StatisticsLatencyRawOther = statisticsLatencyRawOther
}

// WithStatisticsLatencyRawRead adds the statisticsLatencyRawRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsLatencyRawRead(statisticsLatencyRawRead *int64) *AggregateCollectionGetParams {
	o.SetStatisticsLatencyRawRead(statisticsLatencyRawRead)
	return o
}

// SetStatisticsLatencyRawRead adds the statisticsLatencyRawRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsLatencyRawRead(statisticsLatencyRawRead *int64) {
	o.StatisticsLatencyRawRead = statisticsLatencyRawRead
}

// WithStatisticsLatencyRawTotal adds the statisticsLatencyRawTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsLatencyRawTotal(statisticsLatencyRawTotal *int64) *AggregateCollectionGetParams {
	o.SetStatisticsLatencyRawTotal(statisticsLatencyRawTotal)
	return o
}

// SetStatisticsLatencyRawTotal adds the statisticsLatencyRawTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsLatencyRawTotal(statisticsLatencyRawTotal *int64) {
	o.StatisticsLatencyRawTotal = statisticsLatencyRawTotal
}

// WithStatisticsLatencyRawWrite adds the statisticsLatencyRawWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsLatencyRawWrite(statisticsLatencyRawWrite *int64) *AggregateCollectionGetParams {
	o.SetStatisticsLatencyRawWrite(statisticsLatencyRawWrite)
	return o
}

// SetStatisticsLatencyRawWrite adds the statisticsLatencyRawWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsLatencyRawWrite(statisticsLatencyRawWrite *int64) {
	o.StatisticsLatencyRawWrite = statisticsLatencyRawWrite
}

// WithStatisticsStatus adds the statisticsStatus to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsStatus(statisticsStatus *string) *AggregateCollectionGetParams {
	o.SetStatisticsStatus(statisticsStatus)
	return o
}

// SetStatisticsStatus adds the statisticsStatus to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsStatus(statisticsStatus *string) {
	o.StatisticsStatus = statisticsStatus
}

// WithStatisticsThroughputRawOther adds the statisticsThroughputRawOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsThroughputRawOther(statisticsThroughputRawOther *int64) *AggregateCollectionGetParams {
	o.SetStatisticsThroughputRawOther(statisticsThroughputRawOther)
	return o
}

// SetStatisticsThroughputRawOther adds the statisticsThroughputRawOther to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsThroughputRawOther(statisticsThroughputRawOther *int64) {
	o.StatisticsThroughputRawOther = statisticsThroughputRawOther
}

// WithStatisticsThroughputRawRead adds the statisticsThroughputRawRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsThroughputRawRead(statisticsThroughputRawRead *int64) *AggregateCollectionGetParams {
	o.SetStatisticsThroughputRawRead(statisticsThroughputRawRead)
	return o
}

// SetStatisticsThroughputRawRead adds the statisticsThroughputRawRead to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsThroughputRawRead(statisticsThroughputRawRead *int64) {
	o.StatisticsThroughputRawRead = statisticsThroughputRawRead
}

// WithStatisticsThroughputRawTotal adds the statisticsThroughputRawTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsThroughputRawTotal(statisticsThroughputRawTotal *int64) *AggregateCollectionGetParams {
	o.SetStatisticsThroughputRawTotal(statisticsThroughputRawTotal)
	return o
}

// SetStatisticsThroughputRawTotal adds the statisticsThroughputRawTotal to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsThroughputRawTotal(statisticsThroughputRawTotal *int64) {
	o.StatisticsThroughputRawTotal = statisticsThroughputRawTotal
}

// WithStatisticsThroughputRawWrite adds the statisticsThroughputRawWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsThroughputRawWrite(statisticsThroughputRawWrite *int64) *AggregateCollectionGetParams {
	o.SetStatisticsThroughputRawWrite(statisticsThroughputRawWrite)
	return o
}

// SetStatisticsThroughputRawWrite adds the statisticsThroughputRawWrite to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsThroughputRawWrite(statisticsThroughputRawWrite *int64) {
	o.StatisticsThroughputRawWrite = statisticsThroughputRawWrite
}

// WithStatisticsTimestamp adds the statisticsTimestamp to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithStatisticsTimestamp(statisticsTimestamp *string) *AggregateCollectionGetParams {
	o.SetStatisticsTimestamp(statisticsTimestamp)
	return o
}

// SetStatisticsTimestamp adds the statisticsTimestamp to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetStatisticsTimestamp(statisticsTimestamp *string) {
	o.StatisticsTimestamp = statisticsTimestamp
}

// WithUUID adds the uuid to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithUUID(uuid *string) *AggregateCollectionGetParams {
	o.SetUUID(uuid)
	return o
}

// SetUUID adds the uuid to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetUUID(uuid *string) {
	o.UUID = uuid
}

// WithVolumeCount adds the volumeCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) WithVolumeCount(volumeCount *int64) *AggregateCollectionGetParams {
	o.SetVolumeCount(volumeCount)
	return o
}

// SetVolumeCount adds the volumeCount to the aggregate collection get params
func (o *AggregateCollectionGetParams) SetVolumeCount(volumeCount *int64) {
	o.VolumeCount = volumeCount
}

// WriteToRequest writes these params to a swagger request
func (o *AggregateCollectionGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Tags != nil {

		// query param _tags
		var qrTags string

		if o.Tags != nil {
			qrTags = *o.Tags
		}
		qTags := qrTags
		if qTags != "" {

			if err := r.SetQueryParam("_tags", qTags); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybridCacheDiskCount != nil {

		// query param block_storage.hybrid_cache.disk_count
		var qrBlockStorageHybridCacheDiskCount int64

		if o.BlockStorageHybridCacheDiskCount != nil {
			qrBlockStorageHybridCacheDiskCount = *o.BlockStorageHybridCacheDiskCount
		}
		qBlockStorageHybridCacheDiskCount := swag.FormatInt64(qrBlockStorageHybridCacheDiskCount)
		if qBlockStorageHybridCacheDiskCount != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.disk_count", qBlockStorageHybridCacheDiskCount); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybridCacheDiskType != nil {

		// query param block_storage.hybrid_cache.disk_type
		var qrBlockStorageHybridCacheDiskType string

		if o.BlockStorageHybridCacheDiskType != nil {
			qrBlockStorageHybridCacheDiskType = *o.BlockStorageHybridCacheDiskType
		}
		qBlockStorageHybridCacheDiskType := qrBlockStorageHybridCacheDiskType
		if qBlockStorageHybridCacheDiskType != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.disk_type", qBlockStorageHybridCacheDiskType); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybridCacheEnabled != nil {

		// query param block_storage.hybrid_cache.enabled
		var qrBlockStorageHybridCacheEnabled bool

		if o.BlockStorageHybridCacheEnabled != nil {
			qrBlockStorageHybridCacheEnabled = *o.BlockStorageHybridCacheEnabled
		}
		qBlockStorageHybridCacheEnabled := swag.FormatBool(qrBlockStorageHybridCacheEnabled)
		if qBlockStorageHybridCacheEnabled != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.enabled", qBlockStorageHybridCacheEnabled); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybridCacheRaidSize != nil {

		// query param block_storage.hybrid_cache.raid_size
		var qrBlockStorageHybridCacheRaidSize int64

		if o.BlockStorageHybridCacheRaidSize != nil {
			qrBlockStorageHybridCacheRaidSize = *o.BlockStorageHybridCacheRaidSize
		}
		qBlockStorageHybridCacheRaidSize := swag.FormatInt64(qrBlockStorageHybridCacheRaidSize)
		if qBlockStorageHybridCacheRaidSize != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.raid_size", qBlockStorageHybridCacheRaidSize); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybridCacheRaidType != nil {

		// query param block_storage.hybrid_cache.raid_type
		var qrBlockStorageHybridCacheRaidType string

		if o.BlockStorageHybridCacheRaidType != nil {
			qrBlockStorageHybridCacheRaidType = *o.BlockStorageHybridCacheRaidType
		}
		qBlockStorageHybridCacheRaidType := qrBlockStorageHybridCacheRaidType
		if qBlockStorageHybridCacheRaidType != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.raid_type", qBlockStorageHybridCacheRaidType); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount != nil {

		// query param block_storage.hybrid_cache.simulated_raid_groups.added_data_disk_count
		var qrBlockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount int64

		if o.BlockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount != nil {
			qrBlockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount = *o.BlockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount
		}
		qBlockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount := swag.FormatInt64(qrBlockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount)
		if qBlockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.simulated_raid_groups.added_data_disk_count", qBlockStorageHybridCacheSimulatedRaidGroupsAddedDataDiskCount); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount != nil {

		// query param block_storage.hybrid_cache.simulated_raid_groups.added_parity_disk_count
		var qrBlockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount int64

		if o.BlockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount != nil {
			qrBlockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount = *o.BlockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount
		}
		qBlockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount := swag.FormatInt64(qrBlockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount)
		if qBlockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.simulated_raid_groups.added_parity_disk_count", qBlockStorageHybridCacheSimulatedRaidGroupsAddedParityDiskCount); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount != nil {

		// query param block_storage.hybrid_cache.simulated_raid_groups.existing_data_disk_count
		var qrBlockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount int64

		if o.BlockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount != nil {
			qrBlockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount = *o.BlockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount
		}
		qBlockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount := swag.FormatInt64(qrBlockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount)
		if qBlockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.simulated_raid_groups.existing_data_disk_count", qBlockStorageHybridCacheSimulatedRaidGroupsExistingDataDiskCount); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount != nil {

		// query param block_storage.hybrid_cache.simulated_raid_groups.existing_parity_disk_count
		var qrBlockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount int64

		if o.BlockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount != nil {
			qrBlockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount = *o.BlockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount
		}
		qBlockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount := swag.FormatInt64(qrBlockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount)
		if qBlockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.simulated_raid_groups.existing_parity_disk_count", qBlockStorageHybridCacheSimulatedRaidGroupsExistingParityDiskCount); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybridCacheSimulatedRaidGroupsIsPartition != nil {

		// query param block_storage.hybrid_cache.simulated_raid_groups.is_partition
		var qrBlockStorageHybridCacheSimulatedRaidGroupsIsPartition bool

		if o.BlockStorageHybridCacheSimulatedRaidGroupsIsPartition != nil {
			qrBlockStorageHybridCacheSimulatedRaidGroupsIsPartition = *o.BlockStorageHybridCacheSimulatedRaidGroupsIsPartition
		}
		qBlockStorageHybridCacheSimulatedRaidGroupsIsPartition := swag.FormatBool(qrBlockStorageHybridCacheSimulatedRaidGroupsIsPartition)
		if qBlockStorageHybridCacheSimulatedRaidGroupsIsPartition != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.simulated_raid_groups.is_partition", qBlockStorageHybridCacheSimulatedRaidGroupsIsPartition); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybridCacheSimulatedRaidGroupsName != nil {

		// query param block_storage.hybrid_cache.simulated_raid_groups.name
		var qrBlockStorageHybridCacheSimulatedRaidGroupsName string

		if o.BlockStorageHybridCacheSimulatedRaidGroupsName != nil {
			qrBlockStorageHybridCacheSimulatedRaidGroupsName = *o.BlockStorageHybridCacheSimulatedRaidGroupsName
		}
		qBlockStorageHybridCacheSimulatedRaidGroupsName := qrBlockStorageHybridCacheSimulatedRaidGroupsName
		if qBlockStorageHybridCacheSimulatedRaidGroupsName != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.simulated_raid_groups.name", qBlockStorageHybridCacheSimulatedRaidGroupsName); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybridCacheSimulatedRaidGroupsUsableSize != nil {

		// query param block_storage.hybrid_cache.simulated_raid_groups.usable_size
		var qrBlockStorageHybridCacheSimulatedRaidGroupsUsableSize int64

		if o.BlockStorageHybridCacheSimulatedRaidGroupsUsableSize != nil {
			qrBlockStorageHybridCacheSimulatedRaidGroupsUsableSize = *o.BlockStorageHybridCacheSimulatedRaidGroupsUsableSize
		}
		qBlockStorageHybridCacheSimulatedRaidGroupsUsableSize := swag.FormatInt64(qrBlockStorageHybridCacheSimulatedRaidGroupsUsableSize)
		if qBlockStorageHybridCacheSimulatedRaidGroupsUsableSize != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.simulated_raid_groups.usable_size", qBlockStorageHybridCacheSimulatedRaidGroupsUsableSize); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybridCacheSize != nil {

		// query param block_storage.hybrid_cache.size
		var qrBlockStorageHybridCacheSize int64

		if o.BlockStorageHybridCacheSize != nil {
			qrBlockStorageHybridCacheSize = *o.BlockStorageHybridCacheSize
		}
		qBlockStorageHybridCacheSize := swag.FormatInt64(qrBlockStorageHybridCacheSize)
		if qBlockStorageHybridCacheSize != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.size", qBlockStorageHybridCacheSize); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybridCacheStoragePoolsAllocationUnitsCount != nil {

		// query param block_storage.hybrid_cache.storage_pools.allocation_units_count
		var qrBlockStorageHybridCacheStoragePoolsAllocationUnitsCount int64

		if o.BlockStorageHybridCacheStoragePoolsAllocationUnitsCount != nil {
			qrBlockStorageHybridCacheStoragePoolsAllocationUnitsCount = *o.BlockStorageHybridCacheStoragePoolsAllocationUnitsCount
		}
		qBlockStorageHybridCacheStoragePoolsAllocationUnitsCount := swag.FormatInt64(qrBlockStorageHybridCacheStoragePoolsAllocationUnitsCount)
		if qBlockStorageHybridCacheStoragePoolsAllocationUnitsCount != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.storage_pools.allocation_units_count", qBlockStorageHybridCacheStoragePoolsAllocationUnitsCount); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybridCacheStoragePoolsStoragePoolName != nil {

		// query param block_storage.hybrid_cache.storage_pools.storage_pool.name
		var qrBlockStorageHybridCacheStoragePoolsStoragePoolName string

		if o.BlockStorageHybridCacheStoragePoolsStoragePoolName != nil {
			qrBlockStorageHybridCacheStoragePoolsStoragePoolName = *o.BlockStorageHybridCacheStoragePoolsStoragePoolName
		}
		qBlockStorageHybridCacheStoragePoolsStoragePoolName := qrBlockStorageHybridCacheStoragePoolsStoragePoolName
		if qBlockStorageHybridCacheStoragePoolsStoragePoolName != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.storage_pools.storage_pool.name", qBlockStorageHybridCacheStoragePoolsStoragePoolName); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybridCacheStoragePoolsStoragePoolUUID != nil {

		// query param block_storage.hybrid_cache.storage_pools.storage_pool.uuid
		var qrBlockStorageHybridCacheStoragePoolsStoragePoolUUID string

		if o.BlockStorageHybridCacheStoragePoolsStoragePoolUUID != nil {
			qrBlockStorageHybridCacheStoragePoolsStoragePoolUUID = *o.BlockStorageHybridCacheStoragePoolsStoragePoolUUID
		}
		qBlockStorageHybridCacheStoragePoolsStoragePoolUUID := qrBlockStorageHybridCacheStoragePoolsStoragePoolUUID
		if qBlockStorageHybridCacheStoragePoolsStoragePoolUUID != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.storage_pools.storage_pool.uuid", qBlockStorageHybridCacheStoragePoolsStoragePoolUUID); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageHybridCacheUsed != nil {

		// query param block_storage.hybrid_cache.used
		var qrBlockStorageHybridCacheUsed int64

		if o.BlockStorageHybridCacheUsed != nil {
			qrBlockStorageHybridCacheUsed = *o.BlockStorageHybridCacheUsed
		}
		qBlockStorageHybridCacheUsed := swag.FormatInt64(qrBlockStorageHybridCacheUsed)
		if qBlockStorageHybridCacheUsed != "" {

			if err := r.SetQueryParam("block_storage.hybrid_cache.used", qBlockStorageHybridCacheUsed); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageMirrorEnabled != nil {

		// query param block_storage.mirror.enabled
		var qrBlockStorageMirrorEnabled bool

		if o.BlockStorageMirrorEnabled != nil {
			qrBlockStorageMirrorEnabled = *o.BlockStorageMirrorEnabled
		}
		qBlockStorageMirrorEnabled := swag.FormatBool(qrBlockStorageMirrorEnabled)
		if qBlockStorageMirrorEnabled != "" {

			if err := r.SetQueryParam("block_storage.mirror.enabled", qBlockStorageMirrorEnabled); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageMirrorState != nil {

		// query param block_storage.mirror.state
		var qrBlockStorageMirrorState string

		if o.BlockStorageMirrorState != nil {
			qrBlockStorageMirrorState = *o.BlockStorageMirrorState
		}
		qBlockStorageMirrorState := qrBlockStorageMirrorState
		if qBlockStorageMirrorState != "" {

			if err := r.SetQueryParam("block_storage.mirror.state", qBlockStorageMirrorState); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePlexesName != nil {

		// query param block_storage.plexes.name
		var qrBlockStoragePlexesName string

		if o.BlockStoragePlexesName != nil {
			qrBlockStoragePlexesName = *o.BlockStoragePlexesName
		}
		qBlockStoragePlexesName := qrBlockStoragePlexesName
		if qBlockStoragePlexesName != "" {

			if err := r.SetQueryParam("block_storage.plexes.name", qBlockStoragePlexesName); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimaryChecksumStyle != nil {

		// query param block_storage.primary.checksum_style
		var qrBlockStoragePrimaryChecksumStyle string

		if o.BlockStoragePrimaryChecksumStyle != nil {
			qrBlockStoragePrimaryChecksumStyle = *o.BlockStoragePrimaryChecksumStyle
		}
		qBlockStoragePrimaryChecksumStyle := qrBlockStoragePrimaryChecksumStyle
		if qBlockStoragePrimaryChecksumStyle != "" {

			if err := r.SetQueryParam("block_storage.primary.checksum_style", qBlockStoragePrimaryChecksumStyle); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimaryDiskClass != nil {

		// query param block_storage.primary.disk_class
		var qrBlockStoragePrimaryDiskClass string

		if o.BlockStoragePrimaryDiskClass != nil {
			qrBlockStoragePrimaryDiskClass = *o.BlockStoragePrimaryDiskClass
		}
		qBlockStoragePrimaryDiskClass := qrBlockStoragePrimaryDiskClass
		if qBlockStoragePrimaryDiskClass != "" {

			if err := r.SetQueryParam("block_storage.primary.disk_class", qBlockStoragePrimaryDiskClass); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimaryDiskCount != nil {

		// query param block_storage.primary.disk_count
		var qrBlockStoragePrimaryDiskCount int64

		if o.BlockStoragePrimaryDiskCount != nil {
			qrBlockStoragePrimaryDiskCount = *o.BlockStoragePrimaryDiskCount
		}
		qBlockStoragePrimaryDiskCount := swag.FormatInt64(qrBlockStoragePrimaryDiskCount)
		if qBlockStoragePrimaryDiskCount != "" {

			if err := r.SetQueryParam("block_storage.primary.disk_count", qBlockStoragePrimaryDiskCount); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimaryDiskType != nil {

		// query param block_storage.primary.disk_type
		var qrBlockStoragePrimaryDiskType string

		if o.BlockStoragePrimaryDiskType != nil {
			qrBlockStoragePrimaryDiskType = *o.BlockStoragePrimaryDiskType
		}
		qBlockStoragePrimaryDiskType := qrBlockStoragePrimaryDiskType
		if qBlockStoragePrimaryDiskType != "" {

			if err := r.SetQueryParam("block_storage.primary.disk_type", qBlockStoragePrimaryDiskType); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimaryRaidSize != nil {

		// query param block_storage.primary.raid_size
		var qrBlockStoragePrimaryRaidSize int64

		if o.BlockStoragePrimaryRaidSize != nil {
			qrBlockStoragePrimaryRaidSize = *o.BlockStoragePrimaryRaidSize
		}
		qBlockStoragePrimaryRaidSize := swag.FormatInt64(qrBlockStoragePrimaryRaidSize)
		if qBlockStoragePrimaryRaidSize != "" {

			if err := r.SetQueryParam("block_storage.primary.raid_size", qBlockStoragePrimaryRaidSize); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimaryRaidType != nil {

		// query param block_storage.primary.raid_type
		var qrBlockStoragePrimaryRaidType string

		if o.BlockStoragePrimaryRaidType != nil {
			qrBlockStoragePrimaryRaidType = *o.BlockStoragePrimaryRaidType
		}
		qBlockStoragePrimaryRaidType := qrBlockStoragePrimaryRaidType
		if qBlockStoragePrimaryRaidType != "" {

			if err := r.SetQueryParam("block_storage.primary.raid_type", qBlockStoragePrimaryRaidType); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount != nil {

		// query param block_storage.primary.simulated_raid_groups.added_data_disk_count
		var qrBlockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount int64

		if o.BlockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount != nil {
			qrBlockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount = *o.BlockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount
		}
		qBlockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount := swag.FormatInt64(qrBlockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount)
		if qBlockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount != "" {

			if err := r.SetQueryParam("block_storage.primary.simulated_raid_groups.added_data_disk_count", qBlockStoragePrimarySimulatedRaidGroupsAddedDataDiskCount); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount != nil {

		// query param block_storage.primary.simulated_raid_groups.added_parity_disk_count
		var qrBlockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount int64

		if o.BlockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount != nil {
			qrBlockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount = *o.BlockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount
		}
		qBlockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount := swag.FormatInt64(qrBlockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount)
		if qBlockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount != "" {

			if err := r.SetQueryParam("block_storage.primary.simulated_raid_groups.added_parity_disk_count", qBlockStoragePrimarySimulatedRaidGroupsAddedParityDiskCount); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimarySimulatedRaidGroupsDataDiskCount != nil {

		// query param block_storage.primary.simulated_raid_groups.data_disk_count
		var qrBlockStoragePrimarySimulatedRaidGroupsDataDiskCount int64

		if o.BlockStoragePrimarySimulatedRaidGroupsDataDiskCount != nil {
			qrBlockStoragePrimarySimulatedRaidGroupsDataDiskCount = *o.BlockStoragePrimarySimulatedRaidGroupsDataDiskCount
		}
		qBlockStoragePrimarySimulatedRaidGroupsDataDiskCount := swag.FormatInt64(qrBlockStoragePrimarySimulatedRaidGroupsDataDiskCount)
		if qBlockStoragePrimarySimulatedRaidGroupsDataDiskCount != "" {

			if err := r.SetQueryParam("block_storage.primary.simulated_raid_groups.data_disk_count", qBlockStoragePrimarySimulatedRaidGroupsDataDiskCount); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount != nil {

		// query param block_storage.primary.simulated_raid_groups.existing_data_disk_count
		var qrBlockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount int64

		if o.BlockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount != nil {
			qrBlockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount = *o.BlockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount
		}
		qBlockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount := swag.FormatInt64(qrBlockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount)
		if qBlockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount != "" {

			if err := r.SetQueryParam("block_storage.primary.simulated_raid_groups.existing_data_disk_count", qBlockStoragePrimarySimulatedRaidGroupsExistingDataDiskCount); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount != nil {

		// query param block_storage.primary.simulated_raid_groups.existing_parity_disk_count
		var qrBlockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount int64

		if o.BlockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount != nil {
			qrBlockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount = *o.BlockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount
		}
		qBlockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount := swag.FormatInt64(qrBlockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount)
		if qBlockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount != "" {

			if err := r.SetQueryParam("block_storage.primary.simulated_raid_groups.existing_parity_disk_count", qBlockStoragePrimarySimulatedRaidGroupsExistingParityDiskCount); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimarySimulatedRaidGroupsIsPartition != nil {

		// query param block_storage.primary.simulated_raid_groups.is_partition
		var qrBlockStoragePrimarySimulatedRaidGroupsIsPartition bool

		if o.BlockStoragePrimarySimulatedRaidGroupsIsPartition != nil {
			qrBlockStoragePrimarySimulatedRaidGroupsIsPartition = *o.BlockStoragePrimarySimulatedRaidGroupsIsPartition
		}
		qBlockStoragePrimarySimulatedRaidGroupsIsPartition := swag.FormatBool(qrBlockStoragePrimarySimulatedRaidGroupsIsPartition)
		if qBlockStoragePrimarySimulatedRaidGroupsIsPartition != "" {

			if err := r.SetQueryParam("block_storage.primary.simulated_raid_groups.is_partition", qBlockStoragePrimarySimulatedRaidGroupsIsPartition); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimarySimulatedRaidGroupsName != nil {

		// query param block_storage.primary.simulated_raid_groups.name
		var qrBlockStoragePrimarySimulatedRaidGroupsName string

		if o.BlockStoragePrimarySimulatedRaidGroupsName != nil {
			qrBlockStoragePrimarySimulatedRaidGroupsName = *o.BlockStoragePrimarySimulatedRaidGroupsName
		}
		qBlockStoragePrimarySimulatedRaidGroupsName := qrBlockStoragePrimarySimulatedRaidGroupsName
		if qBlockStoragePrimarySimulatedRaidGroupsName != "" {

			if err := r.SetQueryParam("block_storage.primary.simulated_raid_groups.name", qBlockStoragePrimarySimulatedRaidGroupsName); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimarySimulatedRaidGroupsParityDiskCount != nil {

		// query param block_storage.primary.simulated_raid_groups.parity_disk_count
		var qrBlockStoragePrimarySimulatedRaidGroupsParityDiskCount int64

		if o.BlockStoragePrimarySimulatedRaidGroupsParityDiskCount != nil {
			qrBlockStoragePrimarySimulatedRaidGroupsParityDiskCount = *o.BlockStoragePrimarySimulatedRaidGroupsParityDiskCount
		}
		qBlockStoragePrimarySimulatedRaidGroupsParityDiskCount := swag.FormatInt64(qrBlockStoragePrimarySimulatedRaidGroupsParityDiskCount)
		if qBlockStoragePrimarySimulatedRaidGroupsParityDiskCount != "" {

			if err := r.SetQueryParam("block_storage.primary.simulated_raid_groups.parity_disk_count", qBlockStoragePrimarySimulatedRaidGroupsParityDiskCount); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimarySimulatedRaidGroupsRaidType != nil {

		// query param block_storage.primary.simulated_raid_groups.raid_type
		var qrBlockStoragePrimarySimulatedRaidGroupsRaidType string

		if o.BlockStoragePrimarySimulatedRaidGroupsRaidType != nil {
			qrBlockStoragePrimarySimulatedRaidGroupsRaidType = *o.BlockStoragePrimarySimulatedRaidGroupsRaidType
		}
		qBlockStoragePrimarySimulatedRaidGroupsRaidType := qrBlockStoragePrimarySimulatedRaidGroupsRaidType
		if qBlockStoragePrimarySimulatedRaidGroupsRaidType != "" {

			if err := r.SetQueryParam("block_storage.primary.simulated_raid_groups.raid_type", qBlockStoragePrimarySimulatedRaidGroupsRaidType); err != nil {
				return err
			}
		}
	}

	if o.BlockStoragePrimarySimulatedRaidGroupsUsableSize != nil {

		// query param block_storage.primary.simulated_raid_groups.usable_size
		var qrBlockStoragePrimarySimulatedRaidGroupsUsableSize int64

		if o.BlockStoragePrimarySimulatedRaidGroupsUsableSize != nil {
			qrBlockStoragePrimarySimulatedRaidGroupsUsableSize = *o.BlockStoragePrimarySimulatedRaidGroupsUsableSize
		}
		qBlockStoragePrimarySimulatedRaidGroupsUsableSize := swag.FormatInt64(qrBlockStoragePrimarySimulatedRaidGroupsUsableSize)
		if qBlockStoragePrimarySimulatedRaidGroupsUsableSize != "" {

			if err := r.SetQueryParam("block_storage.primary.simulated_raid_groups.usable_size", qBlockStoragePrimarySimulatedRaidGroupsUsableSize); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageStorageType != nil {

		// query param block_storage.storage_type
		var qrBlockStorageStorageType string

		if o.BlockStorageStorageType != nil {
			qrBlockStorageStorageType = *o.BlockStorageStorageType
		}
		qBlockStorageStorageType := qrBlockStorageStorageType
		if qBlockStorageStorageType != "" {

			if err := r.SetQueryParam("block_storage.storage_type", qBlockStorageStorageType); err != nil {
				return err
			}
		}
	}

	if o.BlockStorageUsesPartitions != nil {

		// query param block_storage.uses_partitions
		var qrBlockStorageUsesPartitions bool

		if o.BlockStorageUsesPartitions != nil {
			qrBlockStorageUsesPartitions = *o.BlockStorageUsesPartitions
		}
		qBlockStorageUsesPartitions := swag.FormatBool(qrBlockStorageUsesPartitions)
		if qBlockStorageUsesPartitions != "" {

			if err := r.SetQueryParam("block_storage.uses_partitions", qBlockStorageUsesPartitions); err != nil {
				return err
			}
		}
	}

	if o.CloudStorageAttachEligible != nil {

		// query param cloud_storage.attach_eligible
		var qrCloudStorageAttachEligible bool

		if o.CloudStorageAttachEligible != nil {
			qrCloudStorageAttachEligible = *o.CloudStorageAttachEligible
		}
		qCloudStorageAttachEligible := swag.FormatBool(qrCloudStorageAttachEligible)
		if qCloudStorageAttachEligible != "" {

			if err := r.SetQueryParam("cloud_storage.attach_eligible", qCloudStorageAttachEligible); err != nil {
				return err
			}
		}
	}

	if o.CloudStorageStoresCloudStoreName != nil {

		// query param cloud_storage.stores.cloud_store.name
		var qrCloudStorageStoresCloudStoreName string

		if o.CloudStorageStoresCloudStoreName != nil {
			qrCloudStorageStoresCloudStoreName = *o.CloudStorageStoresCloudStoreName
		}
		qCloudStorageStoresCloudStoreName := qrCloudStorageStoresCloudStoreName
		if qCloudStorageStoresCloudStoreName != "" {

			if err := r.SetQueryParam("cloud_storage.stores.cloud_store.name", qCloudStorageStoresCloudStoreName); err != nil {
				return err
			}
		}
	}

	if o.CloudStorageStoresCloudStoreUUID != nil {

		// query param cloud_storage.stores.cloud_store.uuid
		var qrCloudStorageStoresCloudStoreUUID string

		if o.CloudStorageStoresCloudStoreUUID != nil {
			qrCloudStorageStoresCloudStoreUUID = *o.CloudStorageStoresCloudStoreUUID
		}
		qCloudStorageStoresCloudStoreUUID := qrCloudStorageStoresCloudStoreUUID
		if qCloudStorageStoresCloudStoreUUID != "" {

			if err := r.SetQueryParam("cloud_storage.stores.cloud_store.uuid", qCloudStorageStoresCloudStoreUUID); err != nil {
				return err
			}
		}
	}

	if o.CloudStorageStoresUsed != nil {

		// query param cloud_storage.stores.used
		var qrCloudStorageStoresUsed int64

		if o.CloudStorageStoresUsed != nil {
			qrCloudStorageStoresUsed = *o.CloudStorageStoresUsed
		}
		qCloudStorageStoresUsed := swag.FormatInt64(qrCloudStorageStoresUsed)
		if qCloudStorageStoresUsed != "" {

			if err := r.SetQueryParam("cloud_storage.stores.used", qCloudStorageStoresUsed); err != nil {
				return err
			}
		}
	}

	if o.CreateTime != nil {

		// query param create_time
		var qrCreateTime string

		if o.CreateTime != nil {
			qrCreateTime = *o.CreateTime
		}
		qCreateTime := qrCreateTime
		if qCreateTime != "" {

			if err := r.SetQueryParam("create_time", qCreateTime); err != nil {
				return err
			}
		}
	}

	if o.DataEncryptionDriveProtectionEnabled != nil {

		// query param data_encryption.drive_protection_enabled
		var qrDataEncryptionDriveProtectionEnabled bool

		if o.DataEncryptionDriveProtectionEnabled != nil {
			qrDataEncryptionDriveProtectionEnabled = *o.DataEncryptionDriveProtectionEnabled
		}
		qDataEncryptionDriveProtectionEnabled := swag.FormatBool(qrDataEncryptionDriveProtectionEnabled)
		if qDataEncryptionDriveProtectionEnabled != "" {

			if err := r.SetQueryParam("data_encryption.drive_protection_enabled", qDataEncryptionDriveProtectionEnabled); err != nil {
				return err
			}
		}
	}

	if o.DataEncryptionSoftwareEncryptionEnabled != nil {

		// query param data_encryption.software_encryption_enabled
		var qrDataEncryptionSoftwareEncryptionEnabled bool

		if o.DataEncryptionSoftwareEncryptionEnabled != nil {
			qrDataEncryptionSoftwareEncryptionEnabled = *o.DataEncryptionSoftwareEncryptionEnabled
		}
		qDataEncryptionSoftwareEncryptionEnabled := swag.FormatBool(qrDataEncryptionSoftwareEncryptionEnabled)
		if qDataEncryptionSoftwareEncryptionEnabled != "" {

			if err := r.SetQueryParam("data_encryption.software_encryption_enabled", qDataEncryptionSoftwareEncryptionEnabled); err != nil {
				return err
			}
		}
	}

	if o.DrHomeNodeName != nil {

		// query param dr_home_node.name
		var qrDrHomeNodeName string

		if o.DrHomeNodeName != nil {
			qrDrHomeNodeName = *o.DrHomeNodeName
		}
		qDrHomeNodeName := qrDrHomeNodeName
		if qDrHomeNodeName != "" {

			if err := r.SetQueryParam("dr_home_node.name", qDrHomeNodeName); err != nil {
				return err
			}
		}
	}

	if o.DrHomeNodeUUID != nil {

		// query param dr_home_node.uuid
		var qrDrHomeNodeUUID string

		if o.DrHomeNodeUUID != nil {
			qrDrHomeNodeUUID = *o.DrHomeNodeUUID
		}
		qDrHomeNodeUUID := qrDrHomeNodeUUID
		if qDrHomeNodeUUID != "" {

			if err := r.SetQueryParam("dr_home_node.uuid", qDrHomeNodeUUID); err != nil {
				return err
			}
		}
	}

	if o.Fields != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.FlashPoolEligible != nil {

		// query param flash_pool_eligible
		var qrFlashPoolEligible bool

		if o.FlashPoolEligible != nil {
			qrFlashPoolEligible = *o.FlashPoolEligible
		}
		qFlashPoolEligible := swag.FormatBool(qrFlashPoolEligible)
		if qFlashPoolEligible != "" {

			if err := r.SetQueryParam("flash_pool_eligible", qFlashPoolEligible); err != nil {
				return err
			}
		}
	}

	if o.HomeNodeName != nil {

		// query param home_node.name
		var qrHomeNodeName string

		if o.HomeNodeName != nil {
			qrHomeNodeName = *o.HomeNodeName
		}
		qHomeNodeName := qrHomeNodeName
		if qHomeNodeName != "" {

			if err := r.SetQueryParam("home_node.name", qHomeNodeName); err != nil {
				return err
			}
		}
	}

	if o.HomeNodeUUID != nil {

		// query param home_node.uuid
		var qrHomeNodeUUID string

		if o.HomeNodeUUID != nil {
			qrHomeNodeUUID = *o.HomeNodeUUID
		}
		qHomeNodeUUID := qrHomeNodeUUID
		if qHomeNodeUUID != "" {

			if err := r.SetQueryParam("home_node.uuid", qHomeNodeUUID); err != nil {
				return err
			}
		}
	}

	if o.InactiveDataReportingEnabled != nil {

		// query param inactive_data_reporting.enabled
		var qrInactiveDataReportingEnabled bool

		if o.InactiveDataReportingEnabled != nil {
			qrInactiveDataReportingEnabled = *o.InactiveDataReportingEnabled
		}
		qInactiveDataReportingEnabled := swag.FormatBool(qrInactiveDataReportingEnabled)
		if qInactiveDataReportingEnabled != "" {

			if err := r.SetQueryParam("inactive_data_reporting.enabled", qInactiveDataReportingEnabled); err != nil {
				return err
			}
		}
	}

	if o.InactiveDataReportingStartTime != nil {

		// query param inactive_data_reporting.start_time
		var qrInactiveDataReportingStartTime string

		if o.InactiveDataReportingStartTime != nil {
			qrInactiveDataReportingStartTime = *o.InactiveDataReportingStartTime
		}
		qInactiveDataReportingStartTime := qrInactiveDataReportingStartTime
		if qInactiveDataReportingStartTime != "" {

			if err := r.SetQueryParam("inactive_data_reporting.start_time", qInactiveDataReportingStartTime); err != nil {
				return err
			}
		}
	}

	if o.InodeAttributesFilePrivateCapacity != nil {

		// query param inode_attributes.file_private_capacity
		var qrInodeAttributesFilePrivateCapacity int64

		if o.InodeAttributesFilePrivateCapacity != nil {
			qrInodeAttributesFilePrivateCapacity = *o.InodeAttributesFilePrivateCapacity
		}
		qInodeAttributesFilePrivateCapacity := swag.FormatInt64(qrInodeAttributesFilePrivateCapacity)
		if qInodeAttributesFilePrivateCapacity != "" {

			if err := r.SetQueryParam("inode_attributes.file_private_capacity", qInodeAttributesFilePrivateCapacity); err != nil {
				return err
			}
		}
	}

	if o.InodeAttributesFilePublicCapacity != nil {

		// query param inode_attributes.file_public_capacity
		var qrInodeAttributesFilePublicCapacity int64

		if o.InodeAttributesFilePublicCapacity != nil {
			qrInodeAttributesFilePublicCapacity = *o.InodeAttributesFilePublicCapacity
		}
		qInodeAttributesFilePublicCapacity := swag.FormatInt64(qrInodeAttributesFilePublicCapacity)
		if qInodeAttributesFilePublicCapacity != "" {

			if err := r.SetQueryParam("inode_attributes.file_public_capacity", qInodeAttributesFilePublicCapacity); err != nil {
				return err
			}
		}
	}

	if o.InodeAttributesFilesPrivateUsed != nil {

		// query param inode_attributes.files_private_used
		var qrInodeAttributesFilesPrivateUsed int64

		if o.InodeAttributesFilesPrivateUsed != nil {
			qrInodeAttributesFilesPrivateUsed = *o.InodeAttributesFilesPrivateUsed
		}
		qInodeAttributesFilesPrivateUsed := swag.FormatInt64(qrInodeAttributesFilesPrivateUsed)
		if qInodeAttributesFilesPrivateUsed != "" {

			if err := r.SetQueryParam("inode_attributes.files_private_used", qInodeAttributesFilesPrivateUsed); err != nil {
				return err
			}
		}
	}

	if o.InodeAttributesFilesTotal != nil {

		// query param inode_attributes.files_total
		var qrInodeAttributesFilesTotal int64

		if o.InodeAttributesFilesTotal != nil {
			qrInodeAttributesFilesTotal = *o.InodeAttributesFilesTotal
		}
		qInodeAttributesFilesTotal := swag.FormatInt64(qrInodeAttributesFilesTotal)
		if qInodeAttributesFilesTotal != "" {

			if err := r.SetQueryParam("inode_attributes.files_total", qInodeAttributesFilesTotal); err != nil {
				return err
			}
		}
	}

	if o.InodeAttributesFilesUsed != nil {

		// query param inode_attributes.files_used
		var qrInodeAttributesFilesUsed int64

		if o.InodeAttributesFilesUsed != nil {
			qrInodeAttributesFilesUsed = *o.InodeAttributesFilesUsed
		}
		qInodeAttributesFilesUsed := swag.FormatInt64(qrInodeAttributesFilesUsed)
		if qInodeAttributesFilesUsed != "" {

			if err := r.SetQueryParam("inode_attributes.files_used", qInodeAttributesFilesUsed); err != nil {
				return err
			}
		}
	}

	if o.InodeAttributesMaxFilesAvailable != nil {

		// query param inode_attributes.max_files_available
		var qrInodeAttributesMaxFilesAvailable int64

		if o.InodeAttributesMaxFilesAvailable != nil {
			qrInodeAttributesMaxFilesAvailable = *o.InodeAttributesMaxFilesAvailable
		}
		qInodeAttributesMaxFilesAvailable := swag.FormatInt64(qrInodeAttributesMaxFilesAvailable)
		if qInodeAttributesMaxFilesAvailable != "" {

			if err := r.SetQueryParam("inode_attributes.max_files_available", qInodeAttributesMaxFilesAvailable); err != nil {
				return err
			}
		}
	}

	if o.InodeAttributesMaxFilesPossible != nil {

		// query param inode_attributes.max_files_possible
		var qrInodeAttributesMaxFilesPossible int64

		if o.InodeAttributesMaxFilesPossible != nil {
			qrInodeAttributesMaxFilesPossible = *o.InodeAttributesMaxFilesPossible
		}
		qInodeAttributesMaxFilesPossible := swag.FormatInt64(qrInodeAttributesMaxFilesPossible)
		if qInodeAttributesMaxFilesPossible != "" {

			if err := r.SetQueryParam("inode_attributes.max_files_possible", qInodeAttributesMaxFilesPossible); err != nil {
				return err
			}
		}
	}

	if o.InodeAttributesMaxFilesUsed != nil {

		// query param inode_attributes.max_files_used
		var qrInodeAttributesMaxFilesUsed int64

		if o.InodeAttributesMaxFilesUsed != nil {
			qrInodeAttributesMaxFilesUsed = *o.InodeAttributesMaxFilesUsed
		}
		qInodeAttributesMaxFilesUsed := swag.FormatInt64(qrInodeAttributesMaxFilesUsed)
		if qInodeAttributesMaxFilesUsed != "" {

			if err := r.SetQueryParam("inode_attributes.max_files_used", qInodeAttributesMaxFilesUsed); err != nil {
				return err
			}
		}
	}

	if o.InodeAttributesUsedPercent != nil {

		// query param inode_attributes.used_percent
		var qrInodeAttributesUsedPercent int64

		if o.InodeAttributesUsedPercent != nil {
			qrInodeAttributesUsedPercent = *o.InodeAttributesUsedPercent
		}
		qInodeAttributesUsedPercent := swag.FormatInt64(qrInodeAttributesUsedPercent)
		if qInodeAttributesUsedPercent != "" {

			if err := r.SetQueryParam("inode_attributes.used_percent", qInodeAttributesUsedPercent); err != nil {
				return err
			}
		}
	}

	if o.InodeAttributesVersion != nil {

		// query param inode_attributes.version
		var qrInodeAttributesVersion int64

		if o.InodeAttributesVersion != nil {
			qrInodeAttributesVersion = *o.InodeAttributesVersion
		}
		qInodeAttributesVersion := swag.FormatInt64(qrInodeAttributesVersion)
		if qInodeAttributesVersion != "" {

			if err := r.SetQueryParam("inode_attributes.version", qInodeAttributesVersion); err != nil {
				return err
			}
		}
	}

	if o.IsSpareLow != nil {

		// query param is_spare_low
		var qrIsSpareLow bool

		if o.IsSpareLow != nil {
			qrIsSpareLow = *o.IsSpareLow
		}
		qIsSpareLow := swag.FormatBool(qrIsSpareLow)
		if qIsSpareLow != "" {

			if err := r.SetQueryParam("is_spare_low", qIsSpareLow); err != nil {
				return err
			}
		}
	}

	if o.MaxRecords != nil {

		// query param max_records
		var qrMaxRecords int64

		if o.MaxRecords != nil {
			qrMaxRecords = *o.MaxRecords
		}
		qMaxRecords := swag.FormatInt64(qrMaxRecords)
		if qMaxRecords != "" {

			if err := r.SetQueryParam("max_records", qMaxRecords); err != nil {
				return err
			}
		}
	}

	if o.MetricDuration != nil {

		// query param metric.duration
		var qrMetricDuration string

		if o.MetricDuration != nil {
			qrMetricDuration = *o.MetricDuration
		}
		qMetricDuration := qrMetricDuration
		if qMetricDuration != "" {

			if err := r.SetQueryParam("metric.duration", qMetricDuration); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsOther != nil {

		// query param metric.iops.other
		var qrMetricIopsOther int64

		if o.MetricIopsOther != nil {
			qrMetricIopsOther = *o.MetricIopsOther
		}
		qMetricIopsOther := swag.FormatInt64(qrMetricIopsOther)
		if qMetricIopsOther != "" {

			if err := r.SetQueryParam("metric.iops.other", qMetricIopsOther); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsRead != nil {

		// query param metric.iops.read
		var qrMetricIopsRead int64

		if o.MetricIopsRead != nil {
			qrMetricIopsRead = *o.MetricIopsRead
		}
		qMetricIopsRead := swag.FormatInt64(qrMetricIopsRead)
		if qMetricIopsRead != "" {

			if err := r.SetQueryParam("metric.iops.read", qMetricIopsRead); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsTotal != nil {

		// query param metric.iops.total
		var qrMetricIopsTotal int64

		if o.MetricIopsTotal != nil {
			qrMetricIopsTotal = *o.MetricIopsTotal
		}
		qMetricIopsTotal := swag.FormatInt64(qrMetricIopsTotal)
		if qMetricIopsTotal != "" {

			if err := r.SetQueryParam("metric.iops.total", qMetricIopsTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsWrite != nil {

		// query param metric.iops.write
		var qrMetricIopsWrite int64

		if o.MetricIopsWrite != nil {
			qrMetricIopsWrite = *o.MetricIopsWrite
		}
		qMetricIopsWrite := swag.FormatInt64(qrMetricIopsWrite)
		if qMetricIopsWrite != "" {

			if err := r.SetQueryParam("metric.iops.write", qMetricIopsWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyOther != nil {

		// query param metric.latency.other
		var qrMetricLatencyOther int64

		if o.MetricLatencyOther != nil {
			qrMetricLatencyOther = *o.MetricLatencyOther
		}
		qMetricLatencyOther := swag.FormatInt64(qrMetricLatencyOther)
		if qMetricLatencyOther != "" {

			if err := r.SetQueryParam("metric.latency.other", qMetricLatencyOther); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyRead != nil {

		// query param metric.latency.read
		var qrMetricLatencyRead int64

		if o.MetricLatencyRead != nil {
			qrMetricLatencyRead = *o.MetricLatencyRead
		}
		qMetricLatencyRead := swag.FormatInt64(qrMetricLatencyRead)
		if qMetricLatencyRead != "" {

			if err := r.SetQueryParam("metric.latency.read", qMetricLatencyRead); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyTotal != nil {

		// query param metric.latency.total
		var qrMetricLatencyTotal int64

		if o.MetricLatencyTotal != nil {
			qrMetricLatencyTotal = *o.MetricLatencyTotal
		}
		qMetricLatencyTotal := swag.FormatInt64(qrMetricLatencyTotal)
		if qMetricLatencyTotal != "" {

			if err := r.SetQueryParam("metric.latency.total", qMetricLatencyTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyWrite != nil {

		// query param metric.latency.write
		var qrMetricLatencyWrite int64

		if o.MetricLatencyWrite != nil {
			qrMetricLatencyWrite = *o.MetricLatencyWrite
		}
		qMetricLatencyWrite := swag.FormatInt64(qrMetricLatencyWrite)
		if qMetricLatencyWrite != "" {

			if err := r.SetQueryParam("metric.latency.write", qMetricLatencyWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricStatus != nil {

		// query param metric.status
		var qrMetricStatus string

		if o.MetricStatus != nil {
			qrMetricStatus = *o.MetricStatus
		}
		qMetricStatus := qrMetricStatus
		if qMetricStatus != "" {

			if err := r.SetQueryParam("metric.status", qMetricStatus); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputOther != nil {

		// query param metric.throughput.other
		var qrMetricThroughputOther int64

		if o.MetricThroughputOther != nil {
			qrMetricThroughputOther = *o.MetricThroughputOther
		}
		qMetricThroughputOther := swag.FormatInt64(qrMetricThroughputOther)
		if qMetricThroughputOther != "" {

			if err := r.SetQueryParam("metric.throughput.other", qMetricThroughputOther); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputRead != nil {

		// query param metric.throughput.read
		var qrMetricThroughputRead int64

		if o.MetricThroughputRead != nil {
			qrMetricThroughputRead = *o.MetricThroughputRead
		}
		qMetricThroughputRead := swag.FormatInt64(qrMetricThroughputRead)
		if qMetricThroughputRead != "" {

			if err := r.SetQueryParam("metric.throughput.read", qMetricThroughputRead); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputTotal != nil {

		// query param metric.throughput.total
		var qrMetricThroughputTotal int64

		if o.MetricThroughputTotal != nil {
			qrMetricThroughputTotal = *o.MetricThroughputTotal
		}
		qMetricThroughputTotal := swag.FormatInt64(qrMetricThroughputTotal)
		if qMetricThroughputTotal != "" {

			if err := r.SetQueryParam("metric.throughput.total", qMetricThroughputTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputWrite != nil {

		// query param metric.throughput.write
		var qrMetricThroughputWrite int64

		if o.MetricThroughputWrite != nil {
			qrMetricThroughputWrite = *o.MetricThroughputWrite
		}
		qMetricThroughputWrite := swag.FormatInt64(qrMetricThroughputWrite)
		if qMetricThroughputWrite != "" {

			if err := r.SetQueryParam("metric.throughput.write", qMetricThroughputWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricTimestamp != nil {

		// query param metric.timestamp
		var qrMetricTimestamp string

		if o.MetricTimestamp != nil {
			qrMetricTimestamp = *o.MetricTimestamp
		}
		qMetricTimestamp := qrMetricTimestamp
		if qMetricTimestamp != "" {

			if err := r.SetQueryParam("metric.timestamp", qMetricTimestamp); err != nil {
				return err
			}
		}
	}

	if o.Name != nil {

		// query param name
		var qrName string

		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.NodeName != nil {

		// query param node.name
		var qrNodeName string

		if o.NodeName != nil {
			qrNodeName = *o.NodeName
		}
		qNodeName := qrNodeName
		if qNodeName != "" {

			if err := r.SetQueryParam("node.name", qNodeName); err != nil {
				return err
			}
		}
	}

	if o.NodeUUID != nil {

		// query param node.uuid
		var qrNodeUUID string

		if o.NodeUUID != nil {
			qrNodeUUID = *o.NodeUUID
		}
		qNodeUUID := qrNodeUUID
		if qNodeUUID != "" {

			if err := r.SetQueryParam("node.uuid", qNodeUUID); err != nil {
				return err
			}
		}
	}

	if o.OrderBy != nil {

		// binding items for order_by
		joinedOrderBy := o.bindParamOrderBy(reg)

		// query array param order_by
		if err := r.SetQueryParam("order_by", joinedOrderBy...); err != nil {
			return err
		}
	}

	if o.Recommend != nil {

		// query param recommend
		var qrRecommend bool

		if o.Recommend != nil {
			qrRecommend = *o.Recommend
		}
		qRecommend := swag.FormatBool(qrRecommend)
		if qRecommend != "" {

			if err := r.SetQueryParam("recommend", qRecommend); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecords != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecords != nil {
			qrReturnRecords = *o.ReturnRecords
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeout != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeout != nil {
			qrReturnTimeout = *o.ReturnTimeout
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.ShowSpares != nil {

		// query param show_spares
		var qrShowSpares bool

		if o.ShowSpares != nil {
			qrShowSpares = *o.ShowSpares
		}
		qShowSpares := swag.FormatBool(qrShowSpares)
		if qShowSpares != "" {

			if err := r.SetQueryParam("show_spares", qShowSpares); err != nil {
				return err
			}
		}
	}

	if o.SidlEnabled != nil {

		// query param sidl_enabled
		var qrSidlEnabled bool

		if o.SidlEnabled != nil {
			qrSidlEnabled = *o.SidlEnabled
		}
		qSidlEnabled := swag.FormatBool(qrSidlEnabled)
		if qSidlEnabled != "" {

			if err := r.SetQueryParam("sidl_enabled", qSidlEnabled); err != nil {
				return err
			}
		}
	}

	if o.SnaplockType != nil {

		// query param snaplock_type
		var qrSnaplockType string

		if o.SnaplockType != nil {
			qrSnaplockType = *o.SnaplockType
		}
		qSnaplockType := qrSnaplockType
		if qSnaplockType != "" {

			if err := r.SetQueryParam("snaplock_type", qSnaplockType); err != nil {
				return err
			}
		}
	}

	if o.SnapshotFilesTotal != nil {

		// query param snapshot.files_total
		var qrSnapshotFilesTotal int64

		if o.SnapshotFilesTotal != nil {
			qrSnapshotFilesTotal = *o.SnapshotFilesTotal
		}
		qSnapshotFilesTotal := swag.FormatInt64(qrSnapshotFilesTotal)
		if qSnapshotFilesTotal != "" {

			if err := r.SetQueryParam("snapshot.files_total", qSnapshotFilesTotal); err != nil {
				return err
			}
		}
	}

	if o.SnapshotFilesUsed != nil {

		// query param snapshot.files_used
		var qrSnapshotFilesUsed int64

		if o.SnapshotFilesUsed != nil {
			qrSnapshotFilesUsed = *o.SnapshotFilesUsed
		}
		qSnapshotFilesUsed := swag.FormatInt64(qrSnapshotFilesUsed)
		if qSnapshotFilesUsed != "" {

			if err := r.SetQueryParam("snapshot.files_used", qSnapshotFilesUsed); err != nil {
				return err
			}
		}
	}

	if o.SnapshotMaxFilesAvailable != nil {

		// query param snapshot.max_files_available
		var qrSnapshotMaxFilesAvailable int64

		if o.SnapshotMaxFilesAvailable != nil {
			qrSnapshotMaxFilesAvailable = *o.SnapshotMaxFilesAvailable
		}
		qSnapshotMaxFilesAvailable := swag.FormatInt64(qrSnapshotMaxFilesAvailable)
		if qSnapshotMaxFilesAvailable != "" {

			if err := r.SetQueryParam("snapshot.max_files_available", qSnapshotMaxFilesAvailable); err != nil {
				return err
			}
		}
	}

	if o.SnapshotMaxFilesUsed != nil {

		// query param snapshot.max_files_used
		var qrSnapshotMaxFilesUsed int64

		if o.SnapshotMaxFilesUsed != nil {
			qrSnapshotMaxFilesUsed = *o.SnapshotMaxFilesUsed
		}
		qSnapshotMaxFilesUsed := swag.FormatInt64(qrSnapshotMaxFilesUsed)
		if qSnapshotMaxFilesUsed != "" {

			if err := r.SetQueryParam("snapshot.max_files_used", qSnapshotMaxFilesUsed); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageAggregateMetadata != nil {

		// query param space.block_storage.aggregate_metadata
		var qrSpaceBlockStorageAggregateMetadata int64

		if o.SpaceBlockStorageAggregateMetadata != nil {
			qrSpaceBlockStorageAggregateMetadata = *o.SpaceBlockStorageAggregateMetadata
		}
		qSpaceBlockStorageAggregateMetadata := swag.FormatInt64(qrSpaceBlockStorageAggregateMetadata)
		if qSpaceBlockStorageAggregateMetadata != "" {

			if err := r.SetQueryParam("space.block_storage.aggregate_metadata", qSpaceBlockStorageAggregateMetadata); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageAggregateMetadataPercent != nil {

		// query param space.block_storage.aggregate_metadata_percent
		var qrSpaceBlockStorageAggregateMetadataPercent int64

		if o.SpaceBlockStorageAggregateMetadataPercent != nil {
			qrSpaceBlockStorageAggregateMetadataPercent = *o.SpaceBlockStorageAggregateMetadataPercent
		}
		qSpaceBlockStorageAggregateMetadataPercent := swag.FormatInt64(qrSpaceBlockStorageAggregateMetadataPercent)
		if qSpaceBlockStorageAggregateMetadataPercent != "" {

			if err := r.SetQueryParam("space.block_storage.aggregate_metadata_percent", qSpaceBlockStorageAggregateMetadataPercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageAvailable != nil {

		// query param space.block_storage.available
		var qrSpaceBlockStorageAvailable int64

		if o.SpaceBlockStorageAvailable != nil {
			qrSpaceBlockStorageAvailable = *o.SpaceBlockStorageAvailable
		}
		qSpaceBlockStorageAvailable := swag.FormatInt64(qrSpaceBlockStorageAvailable)
		if qSpaceBlockStorageAvailable != "" {

			if err := r.SetQueryParam("space.block_storage.available", qSpaceBlockStorageAvailable); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageDataCompactedCount != nil {

		// query param space.block_storage.data_compacted_count
		var qrSpaceBlockStorageDataCompactedCount int64

		if o.SpaceBlockStorageDataCompactedCount != nil {
			qrSpaceBlockStorageDataCompactedCount = *o.SpaceBlockStorageDataCompactedCount
		}
		qSpaceBlockStorageDataCompactedCount := swag.FormatInt64(qrSpaceBlockStorageDataCompactedCount)
		if qSpaceBlockStorageDataCompactedCount != "" {

			if err := r.SetQueryParam("space.block_storage.data_compacted_count", qSpaceBlockStorageDataCompactedCount); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageDataCompactionSpaceSaved != nil {

		// query param space.block_storage.data_compaction_space_saved
		var qrSpaceBlockStorageDataCompactionSpaceSaved int64

		if o.SpaceBlockStorageDataCompactionSpaceSaved != nil {
			qrSpaceBlockStorageDataCompactionSpaceSaved = *o.SpaceBlockStorageDataCompactionSpaceSaved
		}
		qSpaceBlockStorageDataCompactionSpaceSaved := swag.FormatInt64(qrSpaceBlockStorageDataCompactionSpaceSaved)
		if qSpaceBlockStorageDataCompactionSpaceSaved != "" {

			if err := r.SetQueryParam("space.block_storage.data_compaction_space_saved", qSpaceBlockStorageDataCompactionSpaceSaved); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageDataCompactionSpaceSavedPercent != nil {

		// query param space.block_storage.data_compaction_space_saved_percent
		var qrSpaceBlockStorageDataCompactionSpaceSavedPercent int64

		if o.SpaceBlockStorageDataCompactionSpaceSavedPercent != nil {
			qrSpaceBlockStorageDataCompactionSpaceSavedPercent = *o.SpaceBlockStorageDataCompactionSpaceSavedPercent
		}
		qSpaceBlockStorageDataCompactionSpaceSavedPercent := swag.FormatInt64(qrSpaceBlockStorageDataCompactionSpaceSavedPercent)
		if qSpaceBlockStorageDataCompactionSpaceSavedPercent != "" {

			if err := r.SetQueryParam("space.block_storage.data_compaction_space_saved_percent", qSpaceBlockStorageDataCompactionSpaceSavedPercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageFullThresholdPercent != nil {

		// query param space.block_storage.full_threshold_percent
		var qrSpaceBlockStorageFullThresholdPercent int64

		if o.SpaceBlockStorageFullThresholdPercent != nil {
			qrSpaceBlockStorageFullThresholdPercent = *o.SpaceBlockStorageFullThresholdPercent
		}
		qSpaceBlockStorageFullThresholdPercent := swag.FormatInt64(qrSpaceBlockStorageFullThresholdPercent)
		if qSpaceBlockStorageFullThresholdPercent != "" {

			if err := r.SetQueryParam("space.block_storage.full_threshold_percent", qSpaceBlockStorageFullThresholdPercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageInactiveUserData != nil {

		// query param space.block_storage.inactive_user_data
		var qrSpaceBlockStorageInactiveUserData int64

		if o.SpaceBlockStorageInactiveUserData != nil {
			qrSpaceBlockStorageInactiveUserData = *o.SpaceBlockStorageInactiveUserData
		}
		qSpaceBlockStorageInactiveUserData := swag.FormatInt64(qrSpaceBlockStorageInactiveUserData)
		if qSpaceBlockStorageInactiveUserData != "" {

			if err := r.SetQueryParam("space.block_storage.inactive_user_data", qSpaceBlockStorageInactiveUserData); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageInactiveUserDataPercent != nil {

		// query param space.block_storage.inactive_user_data_percent
		var qrSpaceBlockStorageInactiveUserDataPercent int64

		if o.SpaceBlockStorageInactiveUserDataPercent != nil {
			qrSpaceBlockStorageInactiveUserDataPercent = *o.SpaceBlockStorageInactiveUserDataPercent
		}
		qSpaceBlockStorageInactiveUserDataPercent := swag.FormatInt64(qrSpaceBlockStorageInactiveUserDataPercent)
		if qSpaceBlockStorageInactiveUserDataPercent != "" {

			if err := r.SetQueryParam("space.block_storage.inactive_user_data_percent", qSpaceBlockStorageInactiveUserDataPercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStoragePhysicalUsed != nil {

		// query param space.block_storage.physical_used
		var qrSpaceBlockStoragePhysicalUsed int64

		if o.SpaceBlockStoragePhysicalUsed != nil {
			qrSpaceBlockStoragePhysicalUsed = *o.SpaceBlockStoragePhysicalUsed
		}
		qSpaceBlockStoragePhysicalUsed := swag.FormatInt64(qrSpaceBlockStoragePhysicalUsed)
		if qSpaceBlockStoragePhysicalUsed != "" {

			if err := r.SetQueryParam("space.block_storage.physical_used", qSpaceBlockStoragePhysicalUsed); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStoragePhysicalUsedPercent != nil {

		// query param space.block_storage.physical_used_percent
		var qrSpaceBlockStoragePhysicalUsedPercent int64

		if o.SpaceBlockStoragePhysicalUsedPercent != nil {
			qrSpaceBlockStoragePhysicalUsedPercent = *o.SpaceBlockStoragePhysicalUsedPercent
		}
		qSpaceBlockStoragePhysicalUsedPercent := swag.FormatInt64(qrSpaceBlockStoragePhysicalUsedPercent)
		if qSpaceBlockStoragePhysicalUsedPercent != "" {

			if err := r.SetQueryParam("space.block_storage.physical_used_percent", qSpaceBlockStoragePhysicalUsedPercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageSize != nil {

		// query param space.block_storage.size
		var qrSpaceBlockStorageSize int64

		if o.SpaceBlockStorageSize != nil {
			qrSpaceBlockStorageSize = *o.SpaceBlockStorageSize
		}
		qSpaceBlockStorageSize := swag.FormatInt64(qrSpaceBlockStorageSize)
		if qSpaceBlockStorageSize != "" {

			if err := r.SetQueryParam("space.block_storage.size", qSpaceBlockStorageSize); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageUsed != nil {

		// query param space.block_storage.used
		var qrSpaceBlockStorageUsed int64

		if o.SpaceBlockStorageUsed != nil {
			qrSpaceBlockStorageUsed = *o.SpaceBlockStorageUsed
		}
		qSpaceBlockStorageUsed := swag.FormatInt64(qrSpaceBlockStorageUsed)
		if qSpaceBlockStorageUsed != "" {

			if err := r.SetQueryParam("space.block_storage.used", qSpaceBlockStorageUsed); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageUsedIncludingSnapshotReserve != nil {

		// query param space.block_storage.used_including_snapshot_reserve
		var qrSpaceBlockStorageUsedIncludingSnapshotReserve int64

		if o.SpaceBlockStorageUsedIncludingSnapshotReserve != nil {
			qrSpaceBlockStorageUsedIncludingSnapshotReserve = *o.SpaceBlockStorageUsedIncludingSnapshotReserve
		}
		qSpaceBlockStorageUsedIncludingSnapshotReserve := swag.FormatInt64(qrSpaceBlockStorageUsedIncludingSnapshotReserve)
		if qSpaceBlockStorageUsedIncludingSnapshotReserve != "" {

			if err := r.SetQueryParam("space.block_storage.used_including_snapshot_reserve", qSpaceBlockStorageUsedIncludingSnapshotReserve); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageUsedIncludingSnapshotReservePercent != nil {

		// query param space.block_storage.used_including_snapshot_reserve_percent
		var qrSpaceBlockStorageUsedIncludingSnapshotReservePercent int64

		if o.SpaceBlockStorageUsedIncludingSnapshotReservePercent != nil {
			qrSpaceBlockStorageUsedIncludingSnapshotReservePercent = *o.SpaceBlockStorageUsedIncludingSnapshotReservePercent
		}
		qSpaceBlockStorageUsedIncludingSnapshotReservePercent := swag.FormatInt64(qrSpaceBlockStorageUsedIncludingSnapshotReservePercent)
		if qSpaceBlockStorageUsedIncludingSnapshotReservePercent != "" {

			if err := r.SetQueryParam("space.block_storage.used_including_snapshot_reserve_percent", qSpaceBlockStorageUsedIncludingSnapshotReservePercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageUsedPercent != nil {

		// query param space.block_storage.used_percent
		var qrSpaceBlockStorageUsedPercent int64

		if o.SpaceBlockStorageUsedPercent != nil {
			qrSpaceBlockStorageUsedPercent = *o.SpaceBlockStorageUsedPercent
		}
		qSpaceBlockStorageUsedPercent := swag.FormatInt64(qrSpaceBlockStorageUsedPercent)
		if qSpaceBlockStorageUsedPercent != "" {

			if err := r.SetQueryParam("space.block_storage.used_percent", qSpaceBlockStorageUsedPercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageVolumeDeduplicationSharedCount != nil {

		// query param space.block_storage.volume_deduplication_shared_count
		var qrSpaceBlockStorageVolumeDeduplicationSharedCount int64

		if o.SpaceBlockStorageVolumeDeduplicationSharedCount != nil {
			qrSpaceBlockStorageVolumeDeduplicationSharedCount = *o.SpaceBlockStorageVolumeDeduplicationSharedCount
		}
		qSpaceBlockStorageVolumeDeduplicationSharedCount := swag.FormatInt64(qrSpaceBlockStorageVolumeDeduplicationSharedCount)
		if qSpaceBlockStorageVolumeDeduplicationSharedCount != "" {

			if err := r.SetQueryParam("space.block_storage.volume_deduplication_shared_count", qSpaceBlockStorageVolumeDeduplicationSharedCount); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageVolumeDeduplicationSpaceSaved != nil {

		// query param space.block_storage.volume_deduplication_space_saved
		var qrSpaceBlockStorageVolumeDeduplicationSpaceSaved int64

		if o.SpaceBlockStorageVolumeDeduplicationSpaceSaved != nil {
			qrSpaceBlockStorageVolumeDeduplicationSpaceSaved = *o.SpaceBlockStorageVolumeDeduplicationSpaceSaved
		}
		qSpaceBlockStorageVolumeDeduplicationSpaceSaved := swag.FormatInt64(qrSpaceBlockStorageVolumeDeduplicationSpaceSaved)
		if qSpaceBlockStorageVolumeDeduplicationSpaceSaved != "" {

			if err := r.SetQueryParam("space.block_storage.volume_deduplication_space_saved", qSpaceBlockStorageVolumeDeduplicationSpaceSaved); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageVolumeDeduplicationSpaceSavedPercent != nil {

		// query param space.block_storage.volume_deduplication_space_saved_percent
		var qrSpaceBlockStorageVolumeDeduplicationSpaceSavedPercent int64

		if o.SpaceBlockStorageVolumeDeduplicationSpaceSavedPercent != nil {
			qrSpaceBlockStorageVolumeDeduplicationSpaceSavedPercent = *o.SpaceBlockStorageVolumeDeduplicationSpaceSavedPercent
		}
		qSpaceBlockStorageVolumeDeduplicationSpaceSavedPercent := swag.FormatInt64(qrSpaceBlockStorageVolumeDeduplicationSpaceSavedPercent)
		if qSpaceBlockStorageVolumeDeduplicationSpaceSavedPercent != "" {

			if err := r.SetQueryParam("space.block_storage.volume_deduplication_space_saved_percent", qSpaceBlockStorageVolumeDeduplicationSpaceSavedPercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceBlockStorageVolumeFootprintsPercent != nil {

		// query param space.block_storage.volume_footprints_percent
		var qrSpaceBlockStorageVolumeFootprintsPercent int64

		if o.SpaceBlockStorageVolumeFootprintsPercent != nil {
			qrSpaceBlockStorageVolumeFootprintsPercent = *o.SpaceBlockStorageVolumeFootprintsPercent
		}
		qSpaceBlockStorageVolumeFootprintsPercent := swag.FormatInt64(qrSpaceBlockStorageVolumeFootprintsPercent)
		if qSpaceBlockStorageVolumeFootprintsPercent != "" {

			if err := r.SetQueryParam("space.block_storage.volume_footprints_percent", qSpaceBlockStorageVolumeFootprintsPercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceCloudStorageUsed != nil {

		// query param space.cloud_storage.used
		var qrSpaceCloudStorageUsed int64

		if o.SpaceCloudStorageUsed != nil {
			qrSpaceCloudStorageUsed = *o.SpaceCloudStorageUsed
		}
		qSpaceCloudStorageUsed := swag.FormatInt64(qrSpaceCloudStorageUsed)
		if qSpaceCloudStorageUsed != "" {

			if err := r.SetQueryParam("space.cloud_storage.used", qSpaceCloudStorageUsed); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyAutoAdaptiveCompressionSavings != nil {

		// query param space.efficiency.auto_adaptive_compression_savings
		var qrSpaceEfficiencyAutoAdaptiveCompressionSavings bool

		if o.SpaceEfficiencyAutoAdaptiveCompressionSavings != nil {
			qrSpaceEfficiencyAutoAdaptiveCompressionSavings = *o.SpaceEfficiencyAutoAdaptiveCompressionSavings
		}
		qSpaceEfficiencyAutoAdaptiveCompressionSavings := swag.FormatBool(qrSpaceEfficiencyAutoAdaptiveCompressionSavings)
		if qSpaceEfficiencyAutoAdaptiveCompressionSavings != "" {

			if err := r.SetQueryParam("space.efficiency.auto_adaptive_compression_savings", qSpaceEfficiencyAutoAdaptiveCompressionSavings); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyCrossVolumeBackgroundDedupe != nil {

		// query param space.efficiency.cross_volume_background_dedupe
		var qrSpaceEfficiencyCrossVolumeBackgroundDedupe bool

		if o.SpaceEfficiencyCrossVolumeBackgroundDedupe != nil {
			qrSpaceEfficiencyCrossVolumeBackgroundDedupe = *o.SpaceEfficiencyCrossVolumeBackgroundDedupe
		}
		qSpaceEfficiencyCrossVolumeBackgroundDedupe := swag.FormatBool(qrSpaceEfficiencyCrossVolumeBackgroundDedupe)
		if qSpaceEfficiencyCrossVolumeBackgroundDedupe != "" {

			if err := r.SetQueryParam("space.efficiency.cross_volume_background_dedupe", qSpaceEfficiencyCrossVolumeBackgroundDedupe); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyCrossVolumeDedupeSavings != nil {

		// query param space.efficiency.cross_volume_dedupe_savings
		var qrSpaceEfficiencyCrossVolumeDedupeSavings bool

		if o.SpaceEfficiencyCrossVolumeDedupeSavings != nil {
			qrSpaceEfficiencyCrossVolumeDedupeSavings = *o.SpaceEfficiencyCrossVolumeDedupeSavings
		}
		qSpaceEfficiencyCrossVolumeDedupeSavings := swag.FormatBool(qrSpaceEfficiencyCrossVolumeDedupeSavings)
		if qSpaceEfficiencyCrossVolumeDedupeSavings != "" {

			if err := r.SetQueryParam("space.efficiency.cross_volume_dedupe_savings", qSpaceEfficiencyCrossVolumeDedupeSavings); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyCrossVolumeInlineDedupe != nil {

		// query param space.efficiency.cross_volume_inline_dedupe
		var qrSpaceEfficiencyCrossVolumeInlineDedupe bool

		if o.SpaceEfficiencyCrossVolumeInlineDedupe != nil {
			qrSpaceEfficiencyCrossVolumeInlineDedupe = *o.SpaceEfficiencyCrossVolumeInlineDedupe
		}
		qSpaceEfficiencyCrossVolumeInlineDedupe := swag.FormatBool(qrSpaceEfficiencyCrossVolumeInlineDedupe)
		if qSpaceEfficiencyCrossVolumeInlineDedupe != "" {

			if err := r.SetQueryParam("space.efficiency.cross_volume_inline_dedupe", qSpaceEfficiencyCrossVolumeInlineDedupe); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyEnableWorkloadInformedTsse != nil {

		// query param space.efficiency.enable_workload_informed_tsse
		var qrSpaceEfficiencyEnableWorkloadInformedTsse bool

		if o.SpaceEfficiencyEnableWorkloadInformedTsse != nil {
			qrSpaceEfficiencyEnableWorkloadInformedTsse = *o.SpaceEfficiencyEnableWorkloadInformedTsse
		}
		qSpaceEfficiencyEnableWorkloadInformedTsse := swag.FormatBool(qrSpaceEfficiencyEnableWorkloadInformedTsse)
		if qSpaceEfficiencyEnableWorkloadInformedTsse != "" {

			if err := r.SetQueryParam("space.efficiency.enable_workload_informed_tsse", qSpaceEfficiencyEnableWorkloadInformedTsse); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyLogicalUsed != nil {

		// query param space.efficiency.logical_used
		var qrSpaceEfficiencyLogicalUsed int64

		if o.SpaceEfficiencyLogicalUsed != nil {
			qrSpaceEfficiencyLogicalUsed = *o.SpaceEfficiencyLogicalUsed
		}
		qSpaceEfficiencyLogicalUsed := swag.FormatInt64(qrSpaceEfficiencyLogicalUsed)
		if qSpaceEfficiencyLogicalUsed != "" {

			if err := r.SetQueryParam("space.efficiency.logical_used", qSpaceEfficiencyLogicalUsed); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyRatio != nil {

		// query param space.efficiency.ratio
		var qrSpaceEfficiencyRatio float64

		if o.SpaceEfficiencyRatio != nil {
			qrSpaceEfficiencyRatio = *o.SpaceEfficiencyRatio
		}
		qSpaceEfficiencyRatio := swag.FormatFloat64(qrSpaceEfficiencyRatio)
		if qSpaceEfficiencyRatio != "" {

			if err := r.SetQueryParam("space.efficiency.ratio", qSpaceEfficiencyRatio); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencySavings != nil {

		// query param space.efficiency.savings
		var qrSpaceEfficiencySavings int64

		if o.SpaceEfficiencySavings != nil {
			qrSpaceEfficiencySavings = *o.SpaceEfficiencySavings
		}
		qSpaceEfficiencySavings := swag.FormatInt64(qrSpaceEfficiencySavings)
		if qSpaceEfficiencySavings != "" {

			if err := r.SetQueryParam("space.efficiency.savings", qSpaceEfficiencySavings); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyWiseTsseMinUsedCapacityPct != nil {

		// query param space.efficiency.wise_tsse_min_used_capacity_pct
		var qrSpaceEfficiencyWiseTsseMinUsedCapacityPct int64

		if o.SpaceEfficiencyWiseTsseMinUsedCapacityPct != nil {
			qrSpaceEfficiencyWiseTsseMinUsedCapacityPct = *o.SpaceEfficiencyWiseTsseMinUsedCapacityPct
		}
		qSpaceEfficiencyWiseTsseMinUsedCapacityPct := swag.FormatInt64(qrSpaceEfficiencyWiseTsseMinUsedCapacityPct)
		if qSpaceEfficiencyWiseTsseMinUsedCapacityPct != "" {

			if err := r.SetQueryParam("space.efficiency.wise_tsse_min_used_capacity_pct", qSpaceEfficiencyWiseTsseMinUsedCapacityPct); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyWithoutSnapshotsLogicalUsed != nil {

		// query param space.efficiency_without_snapshots.logical_used
		var qrSpaceEfficiencyWithoutSnapshotsLogicalUsed int64

		if o.SpaceEfficiencyWithoutSnapshotsLogicalUsed != nil {
			qrSpaceEfficiencyWithoutSnapshotsLogicalUsed = *o.SpaceEfficiencyWithoutSnapshotsLogicalUsed
		}
		qSpaceEfficiencyWithoutSnapshotsLogicalUsed := swag.FormatInt64(qrSpaceEfficiencyWithoutSnapshotsLogicalUsed)
		if qSpaceEfficiencyWithoutSnapshotsLogicalUsed != "" {

			if err := r.SetQueryParam("space.efficiency_without_snapshots.logical_used", qSpaceEfficiencyWithoutSnapshotsLogicalUsed); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyWithoutSnapshotsRatio != nil {

		// query param space.efficiency_without_snapshots.ratio
		var qrSpaceEfficiencyWithoutSnapshotsRatio float64

		if o.SpaceEfficiencyWithoutSnapshotsRatio != nil {
			qrSpaceEfficiencyWithoutSnapshotsRatio = *o.SpaceEfficiencyWithoutSnapshotsRatio
		}
		qSpaceEfficiencyWithoutSnapshotsRatio := swag.FormatFloat64(qrSpaceEfficiencyWithoutSnapshotsRatio)
		if qSpaceEfficiencyWithoutSnapshotsRatio != "" {

			if err := r.SetQueryParam("space.efficiency_without_snapshots.ratio", qSpaceEfficiencyWithoutSnapshotsRatio); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyWithoutSnapshotsSavings != nil {

		// query param space.efficiency_without_snapshots.savings
		var qrSpaceEfficiencyWithoutSnapshotsSavings int64

		if o.SpaceEfficiencyWithoutSnapshotsSavings != nil {
			qrSpaceEfficiencyWithoutSnapshotsSavings = *o.SpaceEfficiencyWithoutSnapshotsSavings
		}
		qSpaceEfficiencyWithoutSnapshotsSavings := swag.FormatInt64(qrSpaceEfficiencyWithoutSnapshotsSavings)
		if qSpaceEfficiencyWithoutSnapshotsSavings != "" {

			if err := r.SetQueryParam("space.efficiency_without_snapshots.savings", qSpaceEfficiencyWithoutSnapshotsSavings); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed != nil {

		// query param space.efficiency_without_snapshots_flexclones.logical_used
		var qrSpaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed int64

		if o.SpaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed != nil {
			qrSpaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed = *o.SpaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed
		}
		qSpaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed := swag.FormatInt64(qrSpaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed)
		if qSpaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed != "" {

			if err := r.SetQueryParam("space.efficiency_without_snapshots_flexclones.logical_used", qSpaceEfficiencyWithoutSnapshotsFlexclonesLogicalUsed); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyWithoutSnapshotsFlexclonesRatio != nil {

		// query param space.efficiency_without_snapshots_flexclones.ratio
		var qrSpaceEfficiencyWithoutSnapshotsFlexclonesRatio float64

		if o.SpaceEfficiencyWithoutSnapshotsFlexclonesRatio != nil {
			qrSpaceEfficiencyWithoutSnapshotsFlexclonesRatio = *o.SpaceEfficiencyWithoutSnapshotsFlexclonesRatio
		}
		qSpaceEfficiencyWithoutSnapshotsFlexclonesRatio := swag.FormatFloat64(qrSpaceEfficiencyWithoutSnapshotsFlexclonesRatio)
		if qSpaceEfficiencyWithoutSnapshotsFlexclonesRatio != "" {

			if err := r.SetQueryParam("space.efficiency_without_snapshots_flexclones.ratio", qSpaceEfficiencyWithoutSnapshotsFlexclonesRatio); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyWithoutSnapshotsFlexclonesSavings != nil {

		// query param space.efficiency_without_snapshots_flexclones.savings
		var qrSpaceEfficiencyWithoutSnapshotsFlexclonesSavings int64

		if o.SpaceEfficiencyWithoutSnapshotsFlexclonesSavings != nil {
			qrSpaceEfficiencyWithoutSnapshotsFlexclonesSavings = *o.SpaceEfficiencyWithoutSnapshotsFlexclonesSavings
		}
		qSpaceEfficiencyWithoutSnapshotsFlexclonesSavings := swag.FormatInt64(qrSpaceEfficiencyWithoutSnapshotsFlexclonesSavings)
		if qSpaceEfficiencyWithoutSnapshotsFlexclonesSavings != "" {

			if err := r.SetQueryParam("space.efficiency_without_snapshots_flexclones.savings", qSpaceEfficiencyWithoutSnapshotsFlexclonesSavings); err != nil {
				return err
			}
		}
	}

	if o.SpaceFootprint != nil {

		// query param space.footprint
		var qrSpaceFootprint int64

		if o.SpaceFootprint != nil {
			qrSpaceFootprint = *o.SpaceFootprint
		}
		qSpaceFootprint := swag.FormatInt64(qrSpaceFootprint)
		if qSpaceFootprint != "" {

			if err := r.SetQueryParam("space.footprint", qSpaceFootprint); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotAvailable != nil {

		// query param space.snapshot.available
		var qrSpaceSnapshotAvailable int64

		if o.SpaceSnapshotAvailable != nil {
			qrSpaceSnapshotAvailable = *o.SpaceSnapshotAvailable
		}
		qSpaceSnapshotAvailable := swag.FormatInt64(qrSpaceSnapshotAvailable)
		if qSpaceSnapshotAvailable != "" {

			if err := r.SetQueryParam("space.snapshot.available", qSpaceSnapshotAvailable); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotReservePercent != nil {

		// query param space.snapshot.reserve_percent
		var qrSpaceSnapshotReservePercent int64

		if o.SpaceSnapshotReservePercent != nil {
			qrSpaceSnapshotReservePercent = *o.SpaceSnapshotReservePercent
		}
		qSpaceSnapshotReservePercent := swag.FormatInt64(qrSpaceSnapshotReservePercent)
		if qSpaceSnapshotReservePercent != "" {

			if err := r.SetQueryParam("space.snapshot.reserve_percent", qSpaceSnapshotReservePercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotTotal != nil {

		// query param space.snapshot.total
		var qrSpaceSnapshotTotal int64

		if o.SpaceSnapshotTotal != nil {
			qrSpaceSnapshotTotal = *o.SpaceSnapshotTotal
		}
		qSpaceSnapshotTotal := swag.FormatInt64(qrSpaceSnapshotTotal)
		if qSpaceSnapshotTotal != "" {

			if err := r.SetQueryParam("space.snapshot.total", qSpaceSnapshotTotal); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotUsed != nil {

		// query param space.snapshot.used
		var qrSpaceSnapshotUsed int64

		if o.SpaceSnapshotUsed != nil {
			qrSpaceSnapshotUsed = *o.SpaceSnapshotUsed
		}
		qSpaceSnapshotUsed := swag.FormatInt64(qrSpaceSnapshotUsed)
		if qSpaceSnapshotUsed != "" {

			if err := r.SetQueryParam("space.snapshot.used", qSpaceSnapshotUsed); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotUsedPercent != nil {

		// query param space.snapshot.used_percent
		var qrSpaceSnapshotUsedPercent int64

		if o.SpaceSnapshotUsedPercent != nil {
			qrSpaceSnapshotUsedPercent = *o.SpaceSnapshotUsedPercent
		}
		qSpaceSnapshotUsedPercent := swag.FormatInt64(qrSpaceSnapshotUsedPercent)
		if qSpaceSnapshotUsedPercent != "" {

			if err := r.SetQueryParam("space.snapshot.used_percent", qSpaceSnapshotUsedPercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceTotalProvisionedSpace != nil {

		// query param space.total_provisioned_space
		var qrSpaceTotalProvisionedSpace int64

		if o.SpaceTotalProvisionedSpace != nil {
			qrSpaceTotalProvisionedSpace = *o.SpaceTotalProvisionedSpace
		}
		qSpaceTotalProvisionedSpace := swag.FormatInt64(qrSpaceTotalProvisionedSpace)
		if qSpaceTotalProvisionedSpace != "" {

			if err := r.SetQueryParam("space.total_provisioned_space", qSpaceTotalProvisionedSpace); err != nil {
				return err
			}
		}
	}

	if o.State != nil {

		// query param state
		var qrState string

		if o.State != nil {
			qrState = *o.State
		}
		qState := qrState
		if qState != "" {

			if err := r.SetQueryParam("state", qState); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawOther != nil {

		// query param statistics.iops_raw.other
		var qrStatisticsIopsRawOther int64

		if o.StatisticsIopsRawOther != nil {
			qrStatisticsIopsRawOther = *o.StatisticsIopsRawOther
		}
		qStatisticsIopsRawOther := swag.FormatInt64(qrStatisticsIopsRawOther)
		if qStatisticsIopsRawOther != "" {

			if err := r.SetQueryParam("statistics.iops_raw.other", qStatisticsIopsRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawRead != nil {

		// query param statistics.iops_raw.read
		var qrStatisticsIopsRawRead int64

		if o.StatisticsIopsRawRead != nil {
			qrStatisticsIopsRawRead = *o.StatisticsIopsRawRead
		}
		qStatisticsIopsRawRead := swag.FormatInt64(qrStatisticsIopsRawRead)
		if qStatisticsIopsRawRead != "" {

			if err := r.SetQueryParam("statistics.iops_raw.read", qStatisticsIopsRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawTotal != nil {

		// query param statistics.iops_raw.total
		var qrStatisticsIopsRawTotal int64

		if o.StatisticsIopsRawTotal != nil {
			qrStatisticsIopsRawTotal = *o.StatisticsIopsRawTotal
		}
		qStatisticsIopsRawTotal := swag.FormatInt64(qrStatisticsIopsRawTotal)
		if qStatisticsIopsRawTotal != "" {

			if err := r.SetQueryParam("statistics.iops_raw.total", qStatisticsIopsRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawWrite != nil {

		// query param statistics.iops_raw.write
		var qrStatisticsIopsRawWrite int64

		if o.StatisticsIopsRawWrite != nil {
			qrStatisticsIopsRawWrite = *o.StatisticsIopsRawWrite
		}
		qStatisticsIopsRawWrite := swag.FormatInt64(qrStatisticsIopsRawWrite)
		if qStatisticsIopsRawWrite != "" {

			if err := r.SetQueryParam("statistics.iops_raw.write", qStatisticsIopsRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawOther != nil {

		// query param statistics.latency_raw.other
		var qrStatisticsLatencyRawOther int64

		if o.StatisticsLatencyRawOther != nil {
			qrStatisticsLatencyRawOther = *o.StatisticsLatencyRawOther
		}
		qStatisticsLatencyRawOther := swag.FormatInt64(qrStatisticsLatencyRawOther)
		if qStatisticsLatencyRawOther != "" {

			if err := r.SetQueryParam("statistics.latency_raw.other", qStatisticsLatencyRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawRead != nil {

		// query param statistics.latency_raw.read
		var qrStatisticsLatencyRawRead int64

		if o.StatisticsLatencyRawRead != nil {
			qrStatisticsLatencyRawRead = *o.StatisticsLatencyRawRead
		}
		qStatisticsLatencyRawRead := swag.FormatInt64(qrStatisticsLatencyRawRead)
		if qStatisticsLatencyRawRead != "" {

			if err := r.SetQueryParam("statistics.latency_raw.read", qStatisticsLatencyRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawTotal != nil {

		// query param statistics.latency_raw.total
		var qrStatisticsLatencyRawTotal int64

		if o.StatisticsLatencyRawTotal != nil {
			qrStatisticsLatencyRawTotal = *o.StatisticsLatencyRawTotal
		}
		qStatisticsLatencyRawTotal := swag.FormatInt64(qrStatisticsLatencyRawTotal)
		if qStatisticsLatencyRawTotal != "" {

			if err := r.SetQueryParam("statistics.latency_raw.total", qStatisticsLatencyRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawWrite != nil {

		// query param statistics.latency_raw.write
		var qrStatisticsLatencyRawWrite int64

		if o.StatisticsLatencyRawWrite != nil {
			qrStatisticsLatencyRawWrite = *o.StatisticsLatencyRawWrite
		}
		qStatisticsLatencyRawWrite := swag.FormatInt64(qrStatisticsLatencyRawWrite)
		if qStatisticsLatencyRawWrite != "" {

			if err := r.SetQueryParam("statistics.latency_raw.write", qStatisticsLatencyRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsStatus != nil {

		// query param statistics.status
		var qrStatisticsStatus string

		if o.StatisticsStatus != nil {
			qrStatisticsStatus = *o.StatisticsStatus
		}
		qStatisticsStatus := qrStatisticsStatus
		if qStatisticsStatus != "" {

			if err := r.SetQueryParam("statistics.status", qStatisticsStatus); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawOther != nil {

		// query param statistics.throughput_raw.other
		var qrStatisticsThroughputRawOther int64

		if o.StatisticsThroughputRawOther != nil {
			qrStatisticsThroughputRawOther = *o.StatisticsThroughputRawOther
		}
		qStatisticsThroughputRawOther := swag.FormatInt64(qrStatisticsThroughputRawOther)
		if qStatisticsThroughputRawOther != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.other", qStatisticsThroughputRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawRead != nil {

		// query param statistics.throughput_raw.read
		var qrStatisticsThroughputRawRead int64

		if o.StatisticsThroughputRawRead != nil {
			qrStatisticsThroughputRawRead = *o.StatisticsThroughputRawRead
		}
		qStatisticsThroughputRawRead := swag.FormatInt64(qrStatisticsThroughputRawRead)
		if qStatisticsThroughputRawRead != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.read", qStatisticsThroughputRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawTotal != nil {

		// query param statistics.throughput_raw.total
		var qrStatisticsThroughputRawTotal int64

		if o.StatisticsThroughputRawTotal != nil {
			qrStatisticsThroughputRawTotal = *o.StatisticsThroughputRawTotal
		}
		qStatisticsThroughputRawTotal := swag.FormatInt64(qrStatisticsThroughputRawTotal)
		if qStatisticsThroughputRawTotal != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.total", qStatisticsThroughputRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawWrite != nil {

		// query param statistics.throughput_raw.write
		var qrStatisticsThroughputRawWrite int64

		if o.StatisticsThroughputRawWrite != nil {
			qrStatisticsThroughputRawWrite = *o.StatisticsThroughputRawWrite
		}
		qStatisticsThroughputRawWrite := swag.FormatInt64(qrStatisticsThroughputRawWrite)
		if qStatisticsThroughputRawWrite != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.write", qStatisticsThroughputRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsTimestamp != nil {

		// query param statistics.timestamp
		var qrStatisticsTimestamp string

		if o.StatisticsTimestamp != nil {
			qrStatisticsTimestamp = *o.StatisticsTimestamp
		}
		qStatisticsTimestamp := qrStatisticsTimestamp
		if qStatisticsTimestamp != "" {

			if err := r.SetQueryParam("statistics.timestamp", qStatisticsTimestamp); err != nil {
				return err
			}
		}
	}

	if o.UUID != nil {

		// query param uuid
		var qrUUID string

		if o.UUID != nil {
			qrUUID = *o.UUID
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if o.VolumeCount != nil {

		// query param volume-count
		var qrVolumeCount int64

		if o.VolumeCount != nil {
			qrVolumeCount = *o.VolumeCount
		}
		qVolumeCount := swag.FormatInt64(qrVolumeCount)
		if qVolumeCount != "" {

			if err := r.SetQueryParam("volume-count", qVolumeCount); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamAggregateCollectionGet binds the parameter fields
func (o *AggregateCollectionGetParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.Fields

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsIS := swag.JoinByFormat(fieldsIC, "csv")

	return fieldsIS
}

// bindParamAggregateCollectionGet binds the parameter order_by
func (o *AggregateCollectionGetParams) bindParamOrderBy(formats strfmt.Registry) []string {
	orderByIR := o.OrderBy

	var orderByIC []string
	for _, orderByIIR := range orderByIR { // explode []string

		orderByIIV := orderByIIR // string as string
		orderByIC = append(orderByIC, orderByIIV)
	}

	// items.CollectionFormat: "csv"
	orderByIS := swag.JoinByFormat(orderByIC, "csv")

	return orderByIS
}
