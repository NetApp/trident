// Code generated by go-swagger; DO NOT EDIT.

package s_a_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewStorageUnitModifyCollectionParams creates a new StorageUnitModifyCollectionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewStorageUnitModifyCollectionParams() *StorageUnitModifyCollectionParams {
	return &StorageUnitModifyCollectionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewStorageUnitModifyCollectionParamsWithTimeout creates a new StorageUnitModifyCollectionParams object
// with the ability to set a timeout on a request.
func NewStorageUnitModifyCollectionParamsWithTimeout(timeout time.Duration) *StorageUnitModifyCollectionParams {
	return &StorageUnitModifyCollectionParams{
		timeout: timeout,
	}
}

// NewStorageUnitModifyCollectionParamsWithContext creates a new StorageUnitModifyCollectionParams object
// with the ability to set a context for a request.
func NewStorageUnitModifyCollectionParamsWithContext(ctx context.Context) *StorageUnitModifyCollectionParams {
	return &StorageUnitModifyCollectionParams{
		Context: ctx,
	}
}

// NewStorageUnitModifyCollectionParamsWithHTTPClient creates a new StorageUnitModifyCollectionParams object
// with the ability to set a custom HTTPClient for a request.
func NewStorageUnitModifyCollectionParamsWithHTTPClient(client *http.Client) *StorageUnitModifyCollectionParams {
	return &StorageUnitModifyCollectionParams{
		HTTPClient: client,
	}
}

/*
StorageUnitModifyCollectionParams contains all the parameters to send to the API endpoint

	for the storage unit modify collection operation.

	Typically these are written to a http.Request.
*/
type StorageUnitModifyCollectionParams struct {

	/* AntiRansomwareAttackProbability.

	   Filter by anti_ransomware.attack_probability
	*/
	AntiRansomwareAttackProbability *string

	/* AntiRansomwareAttackReportsTime.

	   Filter by anti_ransomware.attack_reports.time
	*/
	AntiRansomwareAttackReportsTime *string

	/* AntiRansomwareState.

	   Filter by anti_ransomware.state
	*/
	AntiRansomwareState *string

	/* Class.

	   Filter by class
	*/
	Class *string

	/* CloneInheritedPhysicalUsed.

	   Filter by clone.inherited_physical_used
	*/
	CloneInheritedPhysicalUsed *int64

	/* CloneInheritedSavings.

	   Filter by clone.inherited_savings
	*/
	CloneInheritedSavings *int64

	/* CloneIsFlexclone.

	   Filter by clone.is_flexclone
	*/
	CloneIsFlexclone *bool

	/* CloneSourceSnapshotName.

	   Filter by clone.source.snapshot.name
	*/
	CloneSourceSnapshotName *string

	/* CloneSourceSnapshotUUID.

	   Filter by clone.source.snapshot.uuid
	*/
	CloneSourceSnapshotUUID *string

	/* CloneSourceStorageUnitName.

	   Filter by clone.source.storage_unit.name
	*/
	CloneSourceStorageUnitName *string

	/* CloneSourceStorageUnitUUID.

	   Filter by clone.source.storage_unit.uuid
	*/
	CloneSourceStorageUnitUUID *string

	/* CloneSourceSvmName.

	   Filter by clone.source.svm.name
	*/
	CloneSourceSvmName *string

	/* CloneSourceSvmUUID.

	   Filter by clone.source.svm.uuid
	*/
	CloneSourceSvmUUID *string

	/* CloneSplitCompletePercent.

	   Filter by clone.split_complete_percent
	*/
	CloneSplitCompletePercent *int64

	/* CloneSplitEstimate.

	   Filter by clone.split_estimate
	*/
	CloneSplitEstimate *int64

	/* CloneSplitInitiated.

	   Filter by clone.split_initiated
	*/
	CloneSplitInitiated *bool

	/* Comment.

	   Filter by comment
	*/
	Comment *string

	/* ConsistencyGroupName.

	   Filter by consistency_group.name
	*/
	ConsistencyGroupName *string

	/* ConsistencyGroupUUID.

	   Filter by consistency_group.uuid
	*/
	ConsistencyGroupUUID *string

	/* ContinueOnFailure.

	   Continue even when the operation fails on one of the records.
	*/
	ContinueOnFailure *bool

	/* CreateTime.

	   Filter by create_time
	*/
	CreateTime *string

	/* Enabled.

	   Filter by enabled
	*/
	Enabled *bool

	/* EncryptionState.

	   Filter by encryption.state
	*/
	EncryptionState *string

	/* Info.

	   Info specification
	*/
	Info StorageUnitModifyCollectionBody

	/* LocationNodeName.

	   Filter by location.node.name
	*/
	LocationNodeName *string

	/* LocationNodeUUID.

	   Filter by location.node.uuid
	*/
	LocationNodeUUID *string

	/* LocationStorageAvailabilityZoneName.

	   Filter by location.storage_availability_zone.name
	*/
	LocationStorageAvailabilityZoneName *string

	/* LocationStorageAvailabilityZoneUUID.

	   Filter by location.storage_availability_zone.uuid
	*/
	LocationStorageAvailabilityZoneUUID *string

	/* LocationVolumeName.

	   Filter by location.volume.name
	*/
	LocationVolumeName *string

	/* LocationVolumeUUID.

	   Filter by location.volume.uuid
	*/
	LocationVolumeUUID *string

	/* MapsHostGroupName.

	   Filter by maps.host_group.name
	*/
	MapsHostGroupName *string

	/* MapsHostGroupUUID.

	   Filter by maps.host_group.uuid
	*/
	MapsHostGroupUUID *string

	/* MapsLunMapIgroupName.

	   Filter by maps.lun_map.igroup.name
	*/
	MapsLunMapIgroupName *string

	/* MapsLunMapIgroupUUID.

	   Filter by maps.lun_map.igroup.uuid
	*/
	MapsLunMapIgroupUUID *string

	/* MapsLunMapLogicalUnitNumber.

	   Filter by maps.lun_map.logical_unit_number
	*/
	MapsLunMapLogicalUnitNumber *int64

	/* MapsSubsystemMapNsid.

	   Filter by maps.subsystem_map.nsid
	*/
	MapsSubsystemMapNsid *string

	/* MapsSubsystemMapSubsystemName.

	   Filter by maps.subsystem_map.subsystem.name
	*/
	MapsSubsystemMapSubsystemName *string

	/* MapsSubsystemMapSubsystemUUID.

	   Filter by maps.subsystem_map.subsystem.uuid
	*/
	MapsSubsystemMapSubsystemUUID *string

	/* MetricDuration.

	   Filter by metric.duration
	*/
	MetricDuration *string

	/* MetricIopsOther.

	   Filter by metric.iops.other
	*/
	MetricIopsOther *int64

	/* MetricIopsRead.

	   Filter by metric.iops.read
	*/
	MetricIopsRead *int64

	/* MetricIopsTotal.

	   Filter by metric.iops.total
	*/
	MetricIopsTotal *int64

	/* MetricIopsWrite.

	   Filter by metric.iops.write
	*/
	MetricIopsWrite *int64

	/* MetricLatencyOther.

	   Filter by metric.latency.other
	*/
	MetricLatencyOther *int64

	/* MetricLatencyRead.

	   Filter by metric.latency.read
	*/
	MetricLatencyRead *int64

	/* MetricLatencyTotal.

	   Filter by metric.latency.total
	*/
	MetricLatencyTotal *int64

	/* MetricLatencyWrite.

	   Filter by metric.latency.write
	*/
	MetricLatencyWrite *int64

	/* MetricStatus.

	   Filter by metric.status
	*/
	MetricStatus *string

	/* MetricThroughputOther.

	   Filter by metric.throughput.other
	*/
	MetricThroughputOther *int64

	/* MetricThroughputRead.

	   Filter by metric.throughput.read
	*/
	MetricThroughputRead *int64

	/* MetricThroughputTotal.

	   Filter by metric.throughput.total
	*/
	MetricThroughputTotal *int64

	/* MetricThroughputWrite.

	   Filter by metric.throughput.write
	*/
	MetricThroughputWrite *int64

	/* MetricTimestamp.

	   Filter by metric.timestamp
	*/
	MetricTimestamp *string

	/* MovementDestinationStorageAvailabilityZoneName.

	   Filter by movement.destination.storage_availability_zone.name
	*/
	MovementDestinationStorageAvailabilityZoneName *string

	/* MovementDestinationStorageAvailabilityZoneUUID.

	   Filter by movement.destination.storage_availability_zone.uuid
	*/
	MovementDestinationStorageAvailabilityZoneUUID *string

	/* MovementPercentComplete.

	   Filter by movement.percent_complete
	*/
	MovementPercentComplete *int64

	/* MovementSourceStorageAvailabilityZoneName.

	   Filter by movement.source.storage_availability_zone.name
	*/
	MovementSourceStorageAvailabilityZoneName *string

	/* MovementSourceStorageAvailabilityZoneUUID.

	   Filter by movement.source.storage_availability_zone.uuid
	*/
	MovementSourceStorageAvailabilityZoneUUID *string

	/* MovementStartTime.

	   Filter by movement.start_time
	*/
	MovementStartTime *string

	/* MovementState.

	   Filter by movement.state
	*/
	MovementState *string

	/* Name.

	   Filter by name
	*/
	Name *string

	/* OsType.

	   Filter by os_type
	*/
	OsType *string

	/* QosPolicyName.

	   Filter by qos_policy.name
	*/
	QosPolicyName *string

	/* QosPolicyUUID.

	   Filter by qos_policy.uuid
	*/
	QosPolicyUUID *string

	/* RestoreToByteCount.

	   The number of bytes to restore from the source storage unit, in multiples of 4096. When set, `restore_to.start_byte` must also be set. Setting these parameters requires also setting `restore_to.keep_snapshots` to `true`.

	*/
	RestoreToByteCount *float64

	/* RestoreToKeepSnapshots.

	     Requests that snapshots created after the restored snapshot be retained for the storage unit.
	- If `false`, all snapshots created after the restored snapshot are deleted when the snapshot is restored.
	- If `true`, all snapshots created after the restored snapshot are retained when the snapshot is restored.
	This must be set to `true` when `restore_to.start_byte` and `restore_to.byte_count` are set or when called for a secondary storage unit.<br/>


	*/
	RestoreToKeepSnapshots *bool

	/* RestoreToSnapshotName.

	   The name of the snapshot to restore the storage unit to the point in time at which the snapshot was taken.

	*/
	RestoreToSnapshotName *string

	/* RestoreToSnapshotUUID.

	   The UUID of the snapshot to restore the storage unit to the point in time at which the snapshot was taken.

	*/
	RestoreToSnapshotUUID *string

	/* RestoreToStartByte.

	   The starting byte offset of the source storage unit, in multiples of 4096. When set, `restore_to.byte_count` must also be set. Setting these parameters requires also setting `restore_to.keep_snapshots` to `true`.

	*/
	RestoreToStartByte *float64

	/* ReturnRecords.

	   The default is true for GET calls.  When set to false, only the number of records is returned.

	   Default: true
	*/
	ReturnRecords *bool

	/* ReturnTimeout.

	   The number of seconds to allow the call to execute before returning.  When iterating over a collection, the default is 15 seconds.  ONTAP returns earlier if either max records or the end of the collection is reached.

	   Default: 15
	*/
	ReturnTimeout *int64

	/* SerialNumber.

	   Filter by serial_number
	*/
	SerialNumber *string

	/* SerialNumberHex.

	   Filter by serial_number_hex
	*/
	SerialNumberHex *string

	/* SerialRecords.

	   Perform the operation on the records synchronously.
	*/
	SerialRecords *bool

	/* SpaceEfficiencyRatio.

	   Filter by space.efficiency_ratio
	*/
	SpaceEfficiencyRatio *float64

	/* SpacePhysicalUsed.

	   Filter by space.physical_used
	*/
	SpacePhysicalUsed *int64

	/* SpacePhysicalUsedBySnapshots.

	   Filter by space.physical_used_by_snapshots
	*/
	SpacePhysicalUsedBySnapshots *int64

	/* SpaceSize.

	   Filter by space.size
	*/
	SpaceSize *int64

	/* SpaceSnapshotAutodeleteEnabled.

	   Filter by space.snapshot.autodelete.enabled
	*/
	SpaceSnapshotAutodeleteEnabled *bool

	/* SpaceSnapshotReserveAvailable.

	   Filter by space.snapshot.reserve_available
	*/
	SpaceSnapshotReserveAvailable *int64

	/* SpaceSnapshotReservePercent.

	   Filter by space.snapshot.reserve_percent
	*/
	SpaceSnapshotReservePercent *int64

	/* SpaceSnapshotReserveSize.

	   Filter by space.snapshot.reserve_size
	*/
	SpaceSnapshotReserveSize *int64

	/* SpaceSnapshotSpaceUsedPercent.

	   Filter by space.snapshot.space_used_percent
	*/
	SpaceSnapshotSpaceUsedPercent *int64

	/* SpaceSnapshotUsed.

	   Filter by space.snapshot.used
	*/
	SpaceSnapshotUsed *int64

	/* SpaceUsed.

	   Filter by space.used
	*/
	SpaceUsed *int64

	/* StatisticsIopsRawOther.

	   Filter by statistics.iops_raw.other
	*/
	StatisticsIopsRawOther *int64

	/* StatisticsIopsRawRead.

	   Filter by statistics.iops_raw.read
	*/
	StatisticsIopsRawRead *int64

	/* StatisticsIopsRawTotal.

	   Filter by statistics.iops_raw.total
	*/
	StatisticsIopsRawTotal *int64

	/* StatisticsIopsRawWrite.

	   Filter by statistics.iops_raw.write
	*/
	StatisticsIopsRawWrite *int64

	/* StatisticsLatencyRawOther.

	   Filter by statistics.latency_raw.other
	*/
	StatisticsLatencyRawOther *int64

	/* StatisticsLatencyRawRead.

	   Filter by statistics.latency_raw.read
	*/
	StatisticsLatencyRawRead *int64

	/* StatisticsLatencyRawTotal.

	   Filter by statistics.latency_raw.total
	*/
	StatisticsLatencyRawTotal *int64

	/* StatisticsLatencyRawWrite.

	   Filter by statistics.latency_raw.write
	*/
	StatisticsLatencyRawWrite *int64

	/* StatisticsStatus.

	   Filter by statistics.status
	*/
	StatisticsStatus *string

	/* StatisticsThroughputRawOther.

	   Filter by statistics.throughput_raw.other
	*/
	StatisticsThroughputRawOther *int64

	/* StatisticsThroughputRawRead.

	   Filter by statistics.throughput_raw.read
	*/
	StatisticsThroughputRawRead *int64

	/* StatisticsThroughputRawTotal.

	   Filter by statistics.throughput_raw.total
	*/
	StatisticsThroughputRawTotal *int64

	/* StatisticsThroughputRawWrite.

	   Filter by statistics.throughput_raw.write
	*/
	StatisticsThroughputRawWrite *int64

	/* StatisticsTimestamp.

	   Filter by statistics.timestamp
	*/
	StatisticsTimestamp *string

	/* StatusContainerState.

	   Filter by status.container_state
	*/
	StatusContainerState *string

	/* StatusMapped.

	   Filter by status.mapped
	*/
	StatusMapped *bool

	/* StatusReadOnly.

	   Filter by status.read_only
	*/
	StatusReadOnly *bool

	/* StatusState.

	   Filter by status.state
	*/
	StatusState *string

	/* SvmName.

	   Filter by svm.name
	*/
	SvmName *string

	/* SvmUUID.

	   Filter by svm.uuid
	*/
	SvmUUID *string

	/* Type.

	   Filter by type
	*/
	Type *string

	/* UUID.

	   Filter by uuid
	*/
	UUID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the storage unit modify collection params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *StorageUnitModifyCollectionParams) WithDefaults() *StorageUnitModifyCollectionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the storage unit modify collection params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *StorageUnitModifyCollectionParams) SetDefaults() {
	var (
		continueOnFailureDefault = bool(false)

		restoreToKeepSnapshotsDefault = bool(false)

		returnRecordsDefault = bool(true)

		returnTimeoutDefault = int64(15)

		serialRecordsDefault = bool(false)
	)

	val := StorageUnitModifyCollectionParams{
		ContinueOnFailure:      &continueOnFailureDefault,
		RestoreToKeepSnapshots: &restoreToKeepSnapshotsDefault,
		ReturnRecords:          &returnRecordsDefault,
		ReturnTimeout:          &returnTimeoutDefault,
		SerialRecords:          &serialRecordsDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithTimeout(timeout time.Duration) *StorageUnitModifyCollectionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithContext(ctx context.Context) *StorageUnitModifyCollectionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithHTTPClient(client *http.Client) *StorageUnitModifyCollectionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAntiRansomwareAttackProbability adds the antiRansomwareAttackProbability to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithAntiRansomwareAttackProbability(antiRansomwareAttackProbability *string) *StorageUnitModifyCollectionParams {
	o.SetAntiRansomwareAttackProbability(antiRansomwareAttackProbability)
	return o
}

// SetAntiRansomwareAttackProbability adds the antiRansomwareAttackProbability to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetAntiRansomwareAttackProbability(antiRansomwareAttackProbability *string) {
	o.AntiRansomwareAttackProbability = antiRansomwareAttackProbability
}

// WithAntiRansomwareAttackReportsTime adds the antiRansomwareAttackReportsTime to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithAntiRansomwareAttackReportsTime(antiRansomwareAttackReportsTime *string) *StorageUnitModifyCollectionParams {
	o.SetAntiRansomwareAttackReportsTime(antiRansomwareAttackReportsTime)
	return o
}

// SetAntiRansomwareAttackReportsTime adds the antiRansomwareAttackReportsTime to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetAntiRansomwareAttackReportsTime(antiRansomwareAttackReportsTime *string) {
	o.AntiRansomwareAttackReportsTime = antiRansomwareAttackReportsTime
}

// WithAntiRansomwareState adds the antiRansomwareState to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithAntiRansomwareState(antiRansomwareState *string) *StorageUnitModifyCollectionParams {
	o.SetAntiRansomwareState(antiRansomwareState)
	return o
}

// SetAntiRansomwareState adds the antiRansomwareState to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetAntiRansomwareState(antiRansomwareState *string) {
	o.AntiRansomwareState = antiRansomwareState
}

// WithClass adds the class to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithClass(class *string) *StorageUnitModifyCollectionParams {
	o.SetClass(class)
	return o
}

// SetClass adds the class to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetClass(class *string) {
	o.Class = class
}

// WithCloneInheritedPhysicalUsed adds the cloneInheritedPhysicalUsed to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithCloneInheritedPhysicalUsed(cloneInheritedPhysicalUsed *int64) *StorageUnitModifyCollectionParams {
	o.SetCloneInheritedPhysicalUsed(cloneInheritedPhysicalUsed)
	return o
}

// SetCloneInheritedPhysicalUsed adds the cloneInheritedPhysicalUsed to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetCloneInheritedPhysicalUsed(cloneInheritedPhysicalUsed *int64) {
	o.CloneInheritedPhysicalUsed = cloneInheritedPhysicalUsed
}

// WithCloneInheritedSavings adds the cloneInheritedSavings to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithCloneInheritedSavings(cloneInheritedSavings *int64) *StorageUnitModifyCollectionParams {
	o.SetCloneInheritedSavings(cloneInheritedSavings)
	return o
}

// SetCloneInheritedSavings adds the cloneInheritedSavings to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetCloneInheritedSavings(cloneInheritedSavings *int64) {
	o.CloneInheritedSavings = cloneInheritedSavings
}

// WithCloneIsFlexclone adds the cloneIsFlexclone to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithCloneIsFlexclone(cloneIsFlexclone *bool) *StorageUnitModifyCollectionParams {
	o.SetCloneIsFlexclone(cloneIsFlexclone)
	return o
}

// SetCloneIsFlexclone adds the cloneIsFlexclone to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetCloneIsFlexclone(cloneIsFlexclone *bool) {
	o.CloneIsFlexclone = cloneIsFlexclone
}

// WithCloneSourceSnapshotName adds the cloneSourceSnapshotName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithCloneSourceSnapshotName(cloneSourceSnapshotName *string) *StorageUnitModifyCollectionParams {
	o.SetCloneSourceSnapshotName(cloneSourceSnapshotName)
	return o
}

// SetCloneSourceSnapshotName adds the cloneSourceSnapshotName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetCloneSourceSnapshotName(cloneSourceSnapshotName *string) {
	o.CloneSourceSnapshotName = cloneSourceSnapshotName
}

// WithCloneSourceSnapshotUUID adds the cloneSourceSnapshotUUID to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithCloneSourceSnapshotUUID(cloneSourceSnapshotUUID *string) *StorageUnitModifyCollectionParams {
	o.SetCloneSourceSnapshotUUID(cloneSourceSnapshotUUID)
	return o
}

// SetCloneSourceSnapshotUUID adds the cloneSourceSnapshotUuid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetCloneSourceSnapshotUUID(cloneSourceSnapshotUUID *string) {
	o.CloneSourceSnapshotUUID = cloneSourceSnapshotUUID
}

// WithCloneSourceStorageUnitName adds the cloneSourceStorageUnitName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithCloneSourceStorageUnitName(cloneSourceStorageUnitName *string) *StorageUnitModifyCollectionParams {
	o.SetCloneSourceStorageUnitName(cloneSourceStorageUnitName)
	return o
}

// SetCloneSourceStorageUnitName adds the cloneSourceStorageUnitName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetCloneSourceStorageUnitName(cloneSourceStorageUnitName *string) {
	o.CloneSourceStorageUnitName = cloneSourceStorageUnitName
}

// WithCloneSourceStorageUnitUUID adds the cloneSourceStorageUnitUUID to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithCloneSourceStorageUnitUUID(cloneSourceStorageUnitUUID *string) *StorageUnitModifyCollectionParams {
	o.SetCloneSourceStorageUnitUUID(cloneSourceStorageUnitUUID)
	return o
}

// SetCloneSourceStorageUnitUUID adds the cloneSourceStorageUnitUuid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetCloneSourceStorageUnitUUID(cloneSourceStorageUnitUUID *string) {
	o.CloneSourceStorageUnitUUID = cloneSourceStorageUnitUUID
}

// WithCloneSourceSvmName adds the cloneSourceSvmName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithCloneSourceSvmName(cloneSourceSvmName *string) *StorageUnitModifyCollectionParams {
	o.SetCloneSourceSvmName(cloneSourceSvmName)
	return o
}

// SetCloneSourceSvmName adds the cloneSourceSvmName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetCloneSourceSvmName(cloneSourceSvmName *string) {
	o.CloneSourceSvmName = cloneSourceSvmName
}

// WithCloneSourceSvmUUID adds the cloneSourceSvmUUID to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithCloneSourceSvmUUID(cloneSourceSvmUUID *string) *StorageUnitModifyCollectionParams {
	o.SetCloneSourceSvmUUID(cloneSourceSvmUUID)
	return o
}

// SetCloneSourceSvmUUID adds the cloneSourceSvmUuid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetCloneSourceSvmUUID(cloneSourceSvmUUID *string) {
	o.CloneSourceSvmUUID = cloneSourceSvmUUID
}

// WithCloneSplitCompletePercent adds the cloneSplitCompletePercent to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithCloneSplitCompletePercent(cloneSplitCompletePercent *int64) *StorageUnitModifyCollectionParams {
	o.SetCloneSplitCompletePercent(cloneSplitCompletePercent)
	return o
}

// SetCloneSplitCompletePercent adds the cloneSplitCompletePercent to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetCloneSplitCompletePercent(cloneSplitCompletePercent *int64) {
	o.CloneSplitCompletePercent = cloneSplitCompletePercent
}

// WithCloneSplitEstimate adds the cloneSplitEstimate to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithCloneSplitEstimate(cloneSplitEstimate *int64) *StorageUnitModifyCollectionParams {
	o.SetCloneSplitEstimate(cloneSplitEstimate)
	return o
}

// SetCloneSplitEstimate adds the cloneSplitEstimate to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetCloneSplitEstimate(cloneSplitEstimate *int64) {
	o.CloneSplitEstimate = cloneSplitEstimate
}

// WithCloneSplitInitiated adds the cloneSplitInitiated to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithCloneSplitInitiated(cloneSplitInitiated *bool) *StorageUnitModifyCollectionParams {
	o.SetCloneSplitInitiated(cloneSplitInitiated)
	return o
}

// SetCloneSplitInitiated adds the cloneSplitInitiated to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetCloneSplitInitiated(cloneSplitInitiated *bool) {
	o.CloneSplitInitiated = cloneSplitInitiated
}

// WithComment adds the comment to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithComment(comment *string) *StorageUnitModifyCollectionParams {
	o.SetComment(comment)
	return o
}

// SetComment adds the comment to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetComment(comment *string) {
	o.Comment = comment
}

// WithConsistencyGroupName adds the consistencyGroupName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithConsistencyGroupName(consistencyGroupName *string) *StorageUnitModifyCollectionParams {
	o.SetConsistencyGroupName(consistencyGroupName)
	return o
}

// SetConsistencyGroupName adds the consistencyGroupName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetConsistencyGroupName(consistencyGroupName *string) {
	o.ConsistencyGroupName = consistencyGroupName
}

// WithConsistencyGroupUUID adds the consistencyGroupUUID to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithConsistencyGroupUUID(consistencyGroupUUID *string) *StorageUnitModifyCollectionParams {
	o.SetConsistencyGroupUUID(consistencyGroupUUID)
	return o
}

// SetConsistencyGroupUUID adds the consistencyGroupUuid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetConsistencyGroupUUID(consistencyGroupUUID *string) {
	o.ConsistencyGroupUUID = consistencyGroupUUID
}

// WithContinueOnFailure adds the continueOnFailure to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithContinueOnFailure(continueOnFailure *bool) *StorageUnitModifyCollectionParams {
	o.SetContinueOnFailure(continueOnFailure)
	return o
}

// SetContinueOnFailure adds the continueOnFailure to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetContinueOnFailure(continueOnFailure *bool) {
	o.ContinueOnFailure = continueOnFailure
}

// WithCreateTime adds the createTime to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithCreateTime(createTime *string) *StorageUnitModifyCollectionParams {
	o.SetCreateTime(createTime)
	return o
}

// SetCreateTime adds the createTime to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetCreateTime(createTime *string) {
	o.CreateTime = createTime
}

// WithEnabled adds the enabled to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithEnabled(enabled *bool) *StorageUnitModifyCollectionParams {
	o.SetEnabled(enabled)
	return o
}

// SetEnabled adds the enabled to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetEnabled(enabled *bool) {
	o.Enabled = enabled
}

// WithEncryptionState adds the encryptionState to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithEncryptionState(encryptionState *string) *StorageUnitModifyCollectionParams {
	o.SetEncryptionState(encryptionState)
	return o
}

// SetEncryptionState adds the encryptionState to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetEncryptionState(encryptionState *string) {
	o.EncryptionState = encryptionState
}

// WithInfo adds the info to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithInfo(info StorageUnitModifyCollectionBody) *StorageUnitModifyCollectionParams {
	o.SetInfo(info)
	return o
}

// SetInfo adds the info to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetInfo(info StorageUnitModifyCollectionBody) {
	o.Info = info
}

// WithLocationNodeName adds the locationNodeName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithLocationNodeName(locationNodeName *string) *StorageUnitModifyCollectionParams {
	o.SetLocationNodeName(locationNodeName)
	return o
}

// SetLocationNodeName adds the locationNodeName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetLocationNodeName(locationNodeName *string) {
	o.LocationNodeName = locationNodeName
}

// WithLocationNodeUUID adds the locationNodeUUID to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithLocationNodeUUID(locationNodeUUID *string) *StorageUnitModifyCollectionParams {
	o.SetLocationNodeUUID(locationNodeUUID)
	return o
}

// SetLocationNodeUUID adds the locationNodeUuid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetLocationNodeUUID(locationNodeUUID *string) {
	o.LocationNodeUUID = locationNodeUUID
}

// WithLocationStorageAvailabilityZoneName adds the locationStorageAvailabilityZoneName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithLocationStorageAvailabilityZoneName(locationStorageAvailabilityZoneName *string) *StorageUnitModifyCollectionParams {
	o.SetLocationStorageAvailabilityZoneName(locationStorageAvailabilityZoneName)
	return o
}

// SetLocationStorageAvailabilityZoneName adds the locationStorageAvailabilityZoneName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetLocationStorageAvailabilityZoneName(locationStorageAvailabilityZoneName *string) {
	o.LocationStorageAvailabilityZoneName = locationStorageAvailabilityZoneName
}

// WithLocationStorageAvailabilityZoneUUID adds the locationStorageAvailabilityZoneUUID to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithLocationStorageAvailabilityZoneUUID(locationStorageAvailabilityZoneUUID *string) *StorageUnitModifyCollectionParams {
	o.SetLocationStorageAvailabilityZoneUUID(locationStorageAvailabilityZoneUUID)
	return o
}

// SetLocationStorageAvailabilityZoneUUID adds the locationStorageAvailabilityZoneUuid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetLocationStorageAvailabilityZoneUUID(locationStorageAvailabilityZoneUUID *string) {
	o.LocationStorageAvailabilityZoneUUID = locationStorageAvailabilityZoneUUID
}

// WithLocationVolumeName adds the locationVolumeName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithLocationVolumeName(locationVolumeName *string) *StorageUnitModifyCollectionParams {
	o.SetLocationVolumeName(locationVolumeName)
	return o
}

// SetLocationVolumeName adds the locationVolumeName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetLocationVolumeName(locationVolumeName *string) {
	o.LocationVolumeName = locationVolumeName
}

// WithLocationVolumeUUID adds the locationVolumeUUID to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithLocationVolumeUUID(locationVolumeUUID *string) *StorageUnitModifyCollectionParams {
	o.SetLocationVolumeUUID(locationVolumeUUID)
	return o
}

// SetLocationVolumeUUID adds the locationVolumeUuid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetLocationVolumeUUID(locationVolumeUUID *string) {
	o.LocationVolumeUUID = locationVolumeUUID
}

// WithMapsHostGroupName adds the mapsHostGroupName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMapsHostGroupName(mapsHostGroupName *string) *StorageUnitModifyCollectionParams {
	o.SetMapsHostGroupName(mapsHostGroupName)
	return o
}

// SetMapsHostGroupName adds the mapsHostGroupName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMapsHostGroupName(mapsHostGroupName *string) {
	o.MapsHostGroupName = mapsHostGroupName
}

// WithMapsHostGroupUUID adds the mapsHostGroupUUID to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMapsHostGroupUUID(mapsHostGroupUUID *string) *StorageUnitModifyCollectionParams {
	o.SetMapsHostGroupUUID(mapsHostGroupUUID)
	return o
}

// SetMapsHostGroupUUID adds the mapsHostGroupUuid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMapsHostGroupUUID(mapsHostGroupUUID *string) {
	o.MapsHostGroupUUID = mapsHostGroupUUID
}

// WithMapsLunMapIgroupName adds the mapsLunMapIgroupName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMapsLunMapIgroupName(mapsLunMapIgroupName *string) *StorageUnitModifyCollectionParams {
	o.SetMapsLunMapIgroupName(mapsLunMapIgroupName)
	return o
}

// SetMapsLunMapIgroupName adds the mapsLunMapIgroupName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMapsLunMapIgroupName(mapsLunMapIgroupName *string) {
	o.MapsLunMapIgroupName = mapsLunMapIgroupName
}

// WithMapsLunMapIgroupUUID adds the mapsLunMapIgroupUUID to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMapsLunMapIgroupUUID(mapsLunMapIgroupUUID *string) *StorageUnitModifyCollectionParams {
	o.SetMapsLunMapIgroupUUID(mapsLunMapIgroupUUID)
	return o
}

// SetMapsLunMapIgroupUUID adds the mapsLunMapIgroupUuid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMapsLunMapIgroupUUID(mapsLunMapIgroupUUID *string) {
	o.MapsLunMapIgroupUUID = mapsLunMapIgroupUUID
}

// WithMapsLunMapLogicalUnitNumber adds the mapsLunMapLogicalUnitNumber to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMapsLunMapLogicalUnitNumber(mapsLunMapLogicalUnitNumber *int64) *StorageUnitModifyCollectionParams {
	o.SetMapsLunMapLogicalUnitNumber(mapsLunMapLogicalUnitNumber)
	return o
}

// SetMapsLunMapLogicalUnitNumber adds the mapsLunMapLogicalUnitNumber to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMapsLunMapLogicalUnitNumber(mapsLunMapLogicalUnitNumber *int64) {
	o.MapsLunMapLogicalUnitNumber = mapsLunMapLogicalUnitNumber
}

// WithMapsSubsystemMapNsid adds the mapsSubsystemMapNsid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMapsSubsystemMapNsid(mapsSubsystemMapNsid *string) *StorageUnitModifyCollectionParams {
	o.SetMapsSubsystemMapNsid(mapsSubsystemMapNsid)
	return o
}

// SetMapsSubsystemMapNsid adds the mapsSubsystemMapNsid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMapsSubsystemMapNsid(mapsSubsystemMapNsid *string) {
	o.MapsSubsystemMapNsid = mapsSubsystemMapNsid
}

// WithMapsSubsystemMapSubsystemName adds the mapsSubsystemMapSubsystemName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMapsSubsystemMapSubsystemName(mapsSubsystemMapSubsystemName *string) *StorageUnitModifyCollectionParams {
	o.SetMapsSubsystemMapSubsystemName(mapsSubsystemMapSubsystemName)
	return o
}

// SetMapsSubsystemMapSubsystemName adds the mapsSubsystemMapSubsystemName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMapsSubsystemMapSubsystemName(mapsSubsystemMapSubsystemName *string) {
	o.MapsSubsystemMapSubsystemName = mapsSubsystemMapSubsystemName
}

// WithMapsSubsystemMapSubsystemUUID adds the mapsSubsystemMapSubsystemUUID to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMapsSubsystemMapSubsystemUUID(mapsSubsystemMapSubsystemUUID *string) *StorageUnitModifyCollectionParams {
	o.SetMapsSubsystemMapSubsystemUUID(mapsSubsystemMapSubsystemUUID)
	return o
}

// SetMapsSubsystemMapSubsystemUUID adds the mapsSubsystemMapSubsystemUuid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMapsSubsystemMapSubsystemUUID(mapsSubsystemMapSubsystemUUID *string) {
	o.MapsSubsystemMapSubsystemUUID = mapsSubsystemMapSubsystemUUID
}

// WithMetricDuration adds the metricDuration to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMetricDuration(metricDuration *string) *StorageUnitModifyCollectionParams {
	o.SetMetricDuration(metricDuration)
	return o
}

// SetMetricDuration adds the metricDuration to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMetricDuration(metricDuration *string) {
	o.MetricDuration = metricDuration
}

// WithMetricIopsOther adds the metricIopsOther to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMetricIopsOther(metricIopsOther *int64) *StorageUnitModifyCollectionParams {
	o.SetMetricIopsOther(metricIopsOther)
	return o
}

// SetMetricIopsOther adds the metricIopsOther to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMetricIopsOther(metricIopsOther *int64) {
	o.MetricIopsOther = metricIopsOther
}

// WithMetricIopsRead adds the metricIopsRead to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMetricIopsRead(metricIopsRead *int64) *StorageUnitModifyCollectionParams {
	o.SetMetricIopsRead(metricIopsRead)
	return o
}

// SetMetricIopsRead adds the metricIopsRead to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMetricIopsRead(metricIopsRead *int64) {
	o.MetricIopsRead = metricIopsRead
}

// WithMetricIopsTotal adds the metricIopsTotal to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMetricIopsTotal(metricIopsTotal *int64) *StorageUnitModifyCollectionParams {
	o.SetMetricIopsTotal(metricIopsTotal)
	return o
}

// SetMetricIopsTotal adds the metricIopsTotal to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMetricIopsTotal(metricIopsTotal *int64) {
	o.MetricIopsTotal = metricIopsTotal
}

// WithMetricIopsWrite adds the metricIopsWrite to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMetricIopsWrite(metricIopsWrite *int64) *StorageUnitModifyCollectionParams {
	o.SetMetricIopsWrite(metricIopsWrite)
	return o
}

// SetMetricIopsWrite adds the metricIopsWrite to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMetricIopsWrite(metricIopsWrite *int64) {
	o.MetricIopsWrite = metricIopsWrite
}

// WithMetricLatencyOther adds the metricLatencyOther to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMetricLatencyOther(metricLatencyOther *int64) *StorageUnitModifyCollectionParams {
	o.SetMetricLatencyOther(metricLatencyOther)
	return o
}

// SetMetricLatencyOther adds the metricLatencyOther to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMetricLatencyOther(metricLatencyOther *int64) {
	o.MetricLatencyOther = metricLatencyOther
}

// WithMetricLatencyRead adds the metricLatencyRead to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMetricLatencyRead(metricLatencyRead *int64) *StorageUnitModifyCollectionParams {
	o.SetMetricLatencyRead(metricLatencyRead)
	return o
}

// SetMetricLatencyRead adds the metricLatencyRead to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMetricLatencyRead(metricLatencyRead *int64) {
	o.MetricLatencyRead = metricLatencyRead
}

// WithMetricLatencyTotal adds the metricLatencyTotal to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMetricLatencyTotal(metricLatencyTotal *int64) *StorageUnitModifyCollectionParams {
	o.SetMetricLatencyTotal(metricLatencyTotal)
	return o
}

// SetMetricLatencyTotal adds the metricLatencyTotal to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMetricLatencyTotal(metricLatencyTotal *int64) {
	o.MetricLatencyTotal = metricLatencyTotal
}

// WithMetricLatencyWrite adds the metricLatencyWrite to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMetricLatencyWrite(metricLatencyWrite *int64) *StorageUnitModifyCollectionParams {
	o.SetMetricLatencyWrite(metricLatencyWrite)
	return o
}

// SetMetricLatencyWrite adds the metricLatencyWrite to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMetricLatencyWrite(metricLatencyWrite *int64) {
	o.MetricLatencyWrite = metricLatencyWrite
}

// WithMetricStatus adds the metricStatus to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMetricStatus(metricStatus *string) *StorageUnitModifyCollectionParams {
	o.SetMetricStatus(metricStatus)
	return o
}

// SetMetricStatus adds the metricStatus to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMetricStatus(metricStatus *string) {
	o.MetricStatus = metricStatus
}

// WithMetricThroughputOther adds the metricThroughputOther to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMetricThroughputOther(metricThroughputOther *int64) *StorageUnitModifyCollectionParams {
	o.SetMetricThroughputOther(metricThroughputOther)
	return o
}

// SetMetricThroughputOther adds the metricThroughputOther to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMetricThroughputOther(metricThroughputOther *int64) {
	o.MetricThroughputOther = metricThroughputOther
}

// WithMetricThroughputRead adds the metricThroughputRead to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMetricThroughputRead(metricThroughputRead *int64) *StorageUnitModifyCollectionParams {
	o.SetMetricThroughputRead(metricThroughputRead)
	return o
}

// SetMetricThroughputRead adds the metricThroughputRead to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMetricThroughputRead(metricThroughputRead *int64) {
	o.MetricThroughputRead = metricThroughputRead
}

// WithMetricThroughputTotal adds the metricThroughputTotal to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMetricThroughputTotal(metricThroughputTotal *int64) *StorageUnitModifyCollectionParams {
	o.SetMetricThroughputTotal(metricThroughputTotal)
	return o
}

// SetMetricThroughputTotal adds the metricThroughputTotal to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMetricThroughputTotal(metricThroughputTotal *int64) {
	o.MetricThroughputTotal = metricThroughputTotal
}

// WithMetricThroughputWrite adds the metricThroughputWrite to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMetricThroughputWrite(metricThroughputWrite *int64) *StorageUnitModifyCollectionParams {
	o.SetMetricThroughputWrite(metricThroughputWrite)
	return o
}

// SetMetricThroughputWrite adds the metricThroughputWrite to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMetricThroughputWrite(metricThroughputWrite *int64) {
	o.MetricThroughputWrite = metricThroughputWrite
}

// WithMetricTimestamp adds the metricTimestamp to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMetricTimestamp(metricTimestamp *string) *StorageUnitModifyCollectionParams {
	o.SetMetricTimestamp(metricTimestamp)
	return o
}

// SetMetricTimestamp adds the metricTimestamp to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMetricTimestamp(metricTimestamp *string) {
	o.MetricTimestamp = metricTimestamp
}

// WithMovementDestinationStorageAvailabilityZoneName adds the movementDestinationStorageAvailabilityZoneName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMovementDestinationStorageAvailabilityZoneName(movementDestinationStorageAvailabilityZoneName *string) *StorageUnitModifyCollectionParams {
	o.SetMovementDestinationStorageAvailabilityZoneName(movementDestinationStorageAvailabilityZoneName)
	return o
}

// SetMovementDestinationStorageAvailabilityZoneName adds the movementDestinationStorageAvailabilityZoneName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMovementDestinationStorageAvailabilityZoneName(movementDestinationStorageAvailabilityZoneName *string) {
	o.MovementDestinationStorageAvailabilityZoneName = movementDestinationStorageAvailabilityZoneName
}

// WithMovementDestinationStorageAvailabilityZoneUUID adds the movementDestinationStorageAvailabilityZoneUUID to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMovementDestinationStorageAvailabilityZoneUUID(movementDestinationStorageAvailabilityZoneUUID *string) *StorageUnitModifyCollectionParams {
	o.SetMovementDestinationStorageAvailabilityZoneUUID(movementDestinationStorageAvailabilityZoneUUID)
	return o
}

// SetMovementDestinationStorageAvailabilityZoneUUID adds the movementDestinationStorageAvailabilityZoneUuid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMovementDestinationStorageAvailabilityZoneUUID(movementDestinationStorageAvailabilityZoneUUID *string) {
	o.MovementDestinationStorageAvailabilityZoneUUID = movementDestinationStorageAvailabilityZoneUUID
}

// WithMovementPercentComplete adds the movementPercentComplete to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMovementPercentComplete(movementPercentComplete *int64) *StorageUnitModifyCollectionParams {
	o.SetMovementPercentComplete(movementPercentComplete)
	return o
}

// SetMovementPercentComplete adds the movementPercentComplete to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMovementPercentComplete(movementPercentComplete *int64) {
	o.MovementPercentComplete = movementPercentComplete
}

// WithMovementSourceStorageAvailabilityZoneName adds the movementSourceStorageAvailabilityZoneName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMovementSourceStorageAvailabilityZoneName(movementSourceStorageAvailabilityZoneName *string) *StorageUnitModifyCollectionParams {
	o.SetMovementSourceStorageAvailabilityZoneName(movementSourceStorageAvailabilityZoneName)
	return o
}

// SetMovementSourceStorageAvailabilityZoneName adds the movementSourceStorageAvailabilityZoneName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMovementSourceStorageAvailabilityZoneName(movementSourceStorageAvailabilityZoneName *string) {
	o.MovementSourceStorageAvailabilityZoneName = movementSourceStorageAvailabilityZoneName
}

// WithMovementSourceStorageAvailabilityZoneUUID adds the movementSourceStorageAvailabilityZoneUUID to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMovementSourceStorageAvailabilityZoneUUID(movementSourceStorageAvailabilityZoneUUID *string) *StorageUnitModifyCollectionParams {
	o.SetMovementSourceStorageAvailabilityZoneUUID(movementSourceStorageAvailabilityZoneUUID)
	return o
}

// SetMovementSourceStorageAvailabilityZoneUUID adds the movementSourceStorageAvailabilityZoneUuid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMovementSourceStorageAvailabilityZoneUUID(movementSourceStorageAvailabilityZoneUUID *string) {
	o.MovementSourceStorageAvailabilityZoneUUID = movementSourceStorageAvailabilityZoneUUID
}

// WithMovementStartTime adds the movementStartTime to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMovementStartTime(movementStartTime *string) *StorageUnitModifyCollectionParams {
	o.SetMovementStartTime(movementStartTime)
	return o
}

// SetMovementStartTime adds the movementStartTime to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMovementStartTime(movementStartTime *string) {
	o.MovementStartTime = movementStartTime
}

// WithMovementState adds the movementState to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithMovementState(movementState *string) *StorageUnitModifyCollectionParams {
	o.SetMovementState(movementState)
	return o
}

// SetMovementState adds the movementState to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetMovementState(movementState *string) {
	o.MovementState = movementState
}

// WithName adds the name to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithName(name *string) *StorageUnitModifyCollectionParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetName(name *string) {
	o.Name = name
}

// WithOsType adds the osType to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithOsType(osType *string) *StorageUnitModifyCollectionParams {
	o.SetOsType(osType)
	return o
}

// SetOsType adds the osType to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetOsType(osType *string) {
	o.OsType = osType
}

// WithQosPolicyName adds the qosPolicyName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithQosPolicyName(qosPolicyName *string) *StorageUnitModifyCollectionParams {
	o.SetQosPolicyName(qosPolicyName)
	return o
}

// SetQosPolicyName adds the qosPolicyName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetQosPolicyName(qosPolicyName *string) {
	o.QosPolicyName = qosPolicyName
}

// WithQosPolicyUUID adds the qosPolicyUUID to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithQosPolicyUUID(qosPolicyUUID *string) *StorageUnitModifyCollectionParams {
	o.SetQosPolicyUUID(qosPolicyUUID)
	return o
}

// SetQosPolicyUUID adds the qosPolicyUuid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetQosPolicyUUID(qosPolicyUUID *string) {
	o.QosPolicyUUID = qosPolicyUUID
}

// WithRestoreToByteCount adds the restoreToByteCount to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithRestoreToByteCount(restoreToByteCount *float64) *StorageUnitModifyCollectionParams {
	o.SetRestoreToByteCount(restoreToByteCount)
	return o
}

// SetRestoreToByteCount adds the restoreToByteCount to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetRestoreToByteCount(restoreToByteCount *float64) {
	o.RestoreToByteCount = restoreToByteCount
}

// WithRestoreToKeepSnapshots adds the restoreToKeepSnapshots to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithRestoreToKeepSnapshots(restoreToKeepSnapshots *bool) *StorageUnitModifyCollectionParams {
	o.SetRestoreToKeepSnapshots(restoreToKeepSnapshots)
	return o
}

// SetRestoreToKeepSnapshots adds the restoreToKeepSnapshots to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetRestoreToKeepSnapshots(restoreToKeepSnapshots *bool) {
	o.RestoreToKeepSnapshots = restoreToKeepSnapshots
}

// WithRestoreToSnapshotName adds the restoreToSnapshotName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithRestoreToSnapshotName(restoreToSnapshotName *string) *StorageUnitModifyCollectionParams {
	o.SetRestoreToSnapshotName(restoreToSnapshotName)
	return o
}

// SetRestoreToSnapshotName adds the restoreToSnapshotName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetRestoreToSnapshotName(restoreToSnapshotName *string) {
	o.RestoreToSnapshotName = restoreToSnapshotName
}

// WithRestoreToSnapshotUUID adds the restoreToSnapshotUUID to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithRestoreToSnapshotUUID(restoreToSnapshotUUID *string) *StorageUnitModifyCollectionParams {
	o.SetRestoreToSnapshotUUID(restoreToSnapshotUUID)
	return o
}

// SetRestoreToSnapshotUUID adds the restoreToSnapshotUuid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetRestoreToSnapshotUUID(restoreToSnapshotUUID *string) {
	o.RestoreToSnapshotUUID = restoreToSnapshotUUID
}

// WithRestoreToStartByte adds the restoreToStartByte to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithRestoreToStartByte(restoreToStartByte *float64) *StorageUnitModifyCollectionParams {
	o.SetRestoreToStartByte(restoreToStartByte)
	return o
}

// SetRestoreToStartByte adds the restoreToStartByte to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetRestoreToStartByte(restoreToStartByte *float64) {
	o.RestoreToStartByte = restoreToStartByte
}

// WithReturnRecords adds the returnRecords to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithReturnRecords(returnRecords *bool) *StorageUnitModifyCollectionParams {
	o.SetReturnRecords(returnRecords)
	return o
}

// SetReturnRecords adds the returnRecords to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetReturnRecords(returnRecords *bool) {
	o.ReturnRecords = returnRecords
}

// WithReturnTimeout adds the returnTimeout to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithReturnTimeout(returnTimeout *int64) *StorageUnitModifyCollectionParams {
	o.SetReturnTimeout(returnTimeout)
	return o
}

// SetReturnTimeout adds the returnTimeout to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetReturnTimeout(returnTimeout *int64) {
	o.ReturnTimeout = returnTimeout
}

// WithSerialNumber adds the serialNumber to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithSerialNumber(serialNumber *string) *StorageUnitModifyCollectionParams {
	o.SetSerialNumber(serialNumber)
	return o
}

// SetSerialNumber adds the serialNumber to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetSerialNumber(serialNumber *string) {
	o.SerialNumber = serialNumber
}

// WithSerialNumberHex adds the serialNumberHex to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithSerialNumberHex(serialNumberHex *string) *StorageUnitModifyCollectionParams {
	o.SetSerialNumberHex(serialNumberHex)
	return o
}

// SetSerialNumberHex adds the serialNumberHex to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetSerialNumberHex(serialNumberHex *string) {
	o.SerialNumberHex = serialNumberHex
}

// WithSerialRecords adds the serialRecords to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithSerialRecords(serialRecords *bool) *StorageUnitModifyCollectionParams {
	o.SetSerialRecords(serialRecords)
	return o
}

// SetSerialRecords adds the serialRecords to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetSerialRecords(serialRecords *bool) {
	o.SerialRecords = serialRecords
}

// WithSpaceEfficiencyRatio adds the spaceEfficiencyRatio to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithSpaceEfficiencyRatio(spaceEfficiencyRatio *float64) *StorageUnitModifyCollectionParams {
	o.SetSpaceEfficiencyRatio(spaceEfficiencyRatio)
	return o
}

// SetSpaceEfficiencyRatio adds the spaceEfficiencyRatio to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetSpaceEfficiencyRatio(spaceEfficiencyRatio *float64) {
	o.SpaceEfficiencyRatio = spaceEfficiencyRatio
}

// WithSpacePhysicalUsed adds the spacePhysicalUsed to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithSpacePhysicalUsed(spacePhysicalUsed *int64) *StorageUnitModifyCollectionParams {
	o.SetSpacePhysicalUsed(spacePhysicalUsed)
	return o
}

// SetSpacePhysicalUsed adds the spacePhysicalUsed to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetSpacePhysicalUsed(spacePhysicalUsed *int64) {
	o.SpacePhysicalUsed = spacePhysicalUsed
}

// WithSpacePhysicalUsedBySnapshots adds the spacePhysicalUsedBySnapshots to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithSpacePhysicalUsedBySnapshots(spacePhysicalUsedBySnapshots *int64) *StorageUnitModifyCollectionParams {
	o.SetSpacePhysicalUsedBySnapshots(spacePhysicalUsedBySnapshots)
	return o
}

// SetSpacePhysicalUsedBySnapshots adds the spacePhysicalUsedBySnapshots to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetSpacePhysicalUsedBySnapshots(spacePhysicalUsedBySnapshots *int64) {
	o.SpacePhysicalUsedBySnapshots = spacePhysicalUsedBySnapshots
}

// WithSpaceSize adds the spaceSize to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithSpaceSize(spaceSize *int64) *StorageUnitModifyCollectionParams {
	o.SetSpaceSize(spaceSize)
	return o
}

// SetSpaceSize adds the spaceSize to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetSpaceSize(spaceSize *int64) {
	o.SpaceSize = spaceSize
}

// WithSpaceSnapshotAutodeleteEnabled adds the spaceSnapshotAutodeleteEnabled to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithSpaceSnapshotAutodeleteEnabled(spaceSnapshotAutodeleteEnabled *bool) *StorageUnitModifyCollectionParams {
	o.SetSpaceSnapshotAutodeleteEnabled(spaceSnapshotAutodeleteEnabled)
	return o
}

// SetSpaceSnapshotAutodeleteEnabled adds the spaceSnapshotAutodeleteEnabled to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetSpaceSnapshotAutodeleteEnabled(spaceSnapshotAutodeleteEnabled *bool) {
	o.SpaceSnapshotAutodeleteEnabled = spaceSnapshotAutodeleteEnabled
}

// WithSpaceSnapshotReserveAvailable adds the spaceSnapshotReserveAvailable to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithSpaceSnapshotReserveAvailable(spaceSnapshotReserveAvailable *int64) *StorageUnitModifyCollectionParams {
	o.SetSpaceSnapshotReserveAvailable(spaceSnapshotReserveAvailable)
	return o
}

// SetSpaceSnapshotReserveAvailable adds the spaceSnapshotReserveAvailable to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetSpaceSnapshotReserveAvailable(spaceSnapshotReserveAvailable *int64) {
	o.SpaceSnapshotReserveAvailable = spaceSnapshotReserveAvailable
}

// WithSpaceSnapshotReservePercent adds the spaceSnapshotReservePercent to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithSpaceSnapshotReservePercent(spaceSnapshotReservePercent *int64) *StorageUnitModifyCollectionParams {
	o.SetSpaceSnapshotReservePercent(spaceSnapshotReservePercent)
	return o
}

// SetSpaceSnapshotReservePercent adds the spaceSnapshotReservePercent to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetSpaceSnapshotReservePercent(spaceSnapshotReservePercent *int64) {
	o.SpaceSnapshotReservePercent = spaceSnapshotReservePercent
}

// WithSpaceSnapshotReserveSize adds the spaceSnapshotReserveSize to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithSpaceSnapshotReserveSize(spaceSnapshotReserveSize *int64) *StorageUnitModifyCollectionParams {
	o.SetSpaceSnapshotReserveSize(spaceSnapshotReserveSize)
	return o
}

// SetSpaceSnapshotReserveSize adds the spaceSnapshotReserveSize to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetSpaceSnapshotReserveSize(spaceSnapshotReserveSize *int64) {
	o.SpaceSnapshotReserveSize = spaceSnapshotReserveSize
}

// WithSpaceSnapshotSpaceUsedPercent adds the spaceSnapshotSpaceUsedPercent to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithSpaceSnapshotSpaceUsedPercent(spaceSnapshotSpaceUsedPercent *int64) *StorageUnitModifyCollectionParams {
	o.SetSpaceSnapshotSpaceUsedPercent(spaceSnapshotSpaceUsedPercent)
	return o
}

// SetSpaceSnapshotSpaceUsedPercent adds the spaceSnapshotSpaceUsedPercent to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetSpaceSnapshotSpaceUsedPercent(spaceSnapshotSpaceUsedPercent *int64) {
	o.SpaceSnapshotSpaceUsedPercent = spaceSnapshotSpaceUsedPercent
}

// WithSpaceSnapshotUsed adds the spaceSnapshotUsed to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithSpaceSnapshotUsed(spaceSnapshotUsed *int64) *StorageUnitModifyCollectionParams {
	o.SetSpaceSnapshotUsed(spaceSnapshotUsed)
	return o
}

// SetSpaceSnapshotUsed adds the spaceSnapshotUsed to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetSpaceSnapshotUsed(spaceSnapshotUsed *int64) {
	o.SpaceSnapshotUsed = spaceSnapshotUsed
}

// WithSpaceUsed adds the spaceUsed to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithSpaceUsed(spaceUsed *int64) *StorageUnitModifyCollectionParams {
	o.SetSpaceUsed(spaceUsed)
	return o
}

// SetSpaceUsed adds the spaceUsed to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetSpaceUsed(spaceUsed *int64) {
	o.SpaceUsed = spaceUsed
}

// WithStatisticsIopsRawOther adds the statisticsIopsRawOther to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatisticsIopsRawOther(statisticsIopsRawOther *int64) *StorageUnitModifyCollectionParams {
	o.SetStatisticsIopsRawOther(statisticsIopsRawOther)
	return o
}

// SetStatisticsIopsRawOther adds the statisticsIopsRawOther to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatisticsIopsRawOther(statisticsIopsRawOther *int64) {
	o.StatisticsIopsRawOther = statisticsIopsRawOther
}

// WithStatisticsIopsRawRead adds the statisticsIopsRawRead to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatisticsIopsRawRead(statisticsIopsRawRead *int64) *StorageUnitModifyCollectionParams {
	o.SetStatisticsIopsRawRead(statisticsIopsRawRead)
	return o
}

// SetStatisticsIopsRawRead adds the statisticsIopsRawRead to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatisticsIopsRawRead(statisticsIopsRawRead *int64) {
	o.StatisticsIopsRawRead = statisticsIopsRawRead
}

// WithStatisticsIopsRawTotal adds the statisticsIopsRawTotal to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatisticsIopsRawTotal(statisticsIopsRawTotal *int64) *StorageUnitModifyCollectionParams {
	o.SetStatisticsIopsRawTotal(statisticsIopsRawTotal)
	return o
}

// SetStatisticsIopsRawTotal adds the statisticsIopsRawTotal to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatisticsIopsRawTotal(statisticsIopsRawTotal *int64) {
	o.StatisticsIopsRawTotal = statisticsIopsRawTotal
}

// WithStatisticsIopsRawWrite adds the statisticsIopsRawWrite to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatisticsIopsRawWrite(statisticsIopsRawWrite *int64) *StorageUnitModifyCollectionParams {
	o.SetStatisticsIopsRawWrite(statisticsIopsRawWrite)
	return o
}

// SetStatisticsIopsRawWrite adds the statisticsIopsRawWrite to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatisticsIopsRawWrite(statisticsIopsRawWrite *int64) {
	o.StatisticsIopsRawWrite = statisticsIopsRawWrite
}

// WithStatisticsLatencyRawOther adds the statisticsLatencyRawOther to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatisticsLatencyRawOther(statisticsLatencyRawOther *int64) *StorageUnitModifyCollectionParams {
	o.SetStatisticsLatencyRawOther(statisticsLatencyRawOther)
	return o
}

// SetStatisticsLatencyRawOther adds the statisticsLatencyRawOther to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatisticsLatencyRawOther(statisticsLatencyRawOther *int64) {
	o.StatisticsLatencyRawOther = statisticsLatencyRawOther
}

// WithStatisticsLatencyRawRead adds the statisticsLatencyRawRead to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatisticsLatencyRawRead(statisticsLatencyRawRead *int64) *StorageUnitModifyCollectionParams {
	o.SetStatisticsLatencyRawRead(statisticsLatencyRawRead)
	return o
}

// SetStatisticsLatencyRawRead adds the statisticsLatencyRawRead to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatisticsLatencyRawRead(statisticsLatencyRawRead *int64) {
	o.StatisticsLatencyRawRead = statisticsLatencyRawRead
}

// WithStatisticsLatencyRawTotal adds the statisticsLatencyRawTotal to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatisticsLatencyRawTotal(statisticsLatencyRawTotal *int64) *StorageUnitModifyCollectionParams {
	o.SetStatisticsLatencyRawTotal(statisticsLatencyRawTotal)
	return o
}

// SetStatisticsLatencyRawTotal adds the statisticsLatencyRawTotal to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatisticsLatencyRawTotal(statisticsLatencyRawTotal *int64) {
	o.StatisticsLatencyRawTotal = statisticsLatencyRawTotal
}

// WithStatisticsLatencyRawWrite adds the statisticsLatencyRawWrite to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatisticsLatencyRawWrite(statisticsLatencyRawWrite *int64) *StorageUnitModifyCollectionParams {
	o.SetStatisticsLatencyRawWrite(statisticsLatencyRawWrite)
	return o
}

// SetStatisticsLatencyRawWrite adds the statisticsLatencyRawWrite to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatisticsLatencyRawWrite(statisticsLatencyRawWrite *int64) {
	o.StatisticsLatencyRawWrite = statisticsLatencyRawWrite
}

// WithStatisticsStatus adds the statisticsStatus to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatisticsStatus(statisticsStatus *string) *StorageUnitModifyCollectionParams {
	o.SetStatisticsStatus(statisticsStatus)
	return o
}

// SetStatisticsStatus adds the statisticsStatus to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatisticsStatus(statisticsStatus *string) {
	o.StatisticsStatus = statisticsStatus
}

// WithStatisticsThroughputRawOther adds the statisticsThroughputRawOther to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatisticsThroughputRawOther(statisticsThroughputRawOther *int64) *StorageUnitModifyCollectionParams {
	o.SetStatisticsThroughputRawOther(statisticsThroughputRawOther)
	return o
}

// SetStatisticsThroughputRawOther adds the statisticsThroughputRawOther to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatisticsThroughputRawOther(statisticsThroughputRawOther *int64) {
	o.StatisticsThroughputRawOther = statisticsThroughputRawOther
}

// WithStatisticsThroughputRawRead adds the statisticsThroughputRawRead to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatisticsThroughputRawRead(statisticsThroughputRawRead *int64) *StorageUnitModifyCollectionParams {
	o.SetStatisticsThroughputRawRead(statisticsThroughputRawRead)
	return o
}

// SetStatisticsThroughputRawRead adds the statisticsThroughputRawRead to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatisticsThroughputRawRead(statisticsThroughputRawRead *int64) {
	o.StatisticsThroughputRawRead = statisticsThroughputRawRead
}

// WithStatisticsThroughputRawTotal adds the statisticsThroughputRawTotal to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatisticsThroughputRawTotal(statisticsThroughputRawTotal *int64) *StorageUnitModifyCollectionParams {
	o.SetStatisticsThroughputRawTotal(statisticsThroughputRawTotal)
	return o
}

// SetStatisticsThroughputRawTotal adds the statisticsThroughputRawTotal to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatisticsThroughputRawTotal(statisticsThroughputRawTotal *int64) {
	o.StatisticsThroughputRawTotal = statisticsThroughputRawTotal
}

// WithStatisticsThroughputRawWrite adds the statisticsThroughputRawWrite to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatisticsThroughputRawWrite(statisticsThroughputRawWrite *int64) *StorageUnitModifyCollectionParams {
	o.SetStatisticsThroughputRawWrite(statisticsThroughputRawWrite)
	return o
}

// SetStatisticsThroughputRawWrite adds the statisticsThroughputRawWrite to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatisticsThroughputRawWrite(statisticsThroughputRawWrite *int64) {
	o.StatisticsThroughputRawWrite = statisticsThroughputRawWrite
}

// WithStatisticsTimestamp adds the statisticsTimestamp to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatisticsTimestamp(statisticsTimestamp *string) *StorageUnitModifyCollectionParams {
	o.SetStatisticsTimestamp(statisticsTimestamp)
	return o
}

// SetStatisticsTimestamp adds the statisticsTimestamp to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatisticsTimestamp(statisticsTimestamp *string) {
	o.StatisticsTimestamp = statisticsTimestamp
}

// WithStatusContainerState adds the statusContainerState to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatusContainerState(statusContainerState *string) *StorageUnitModifyCollectionParams {
	o.SetStatusContainerState(statusContainerState)
	return o
}

// SetStatusContainerState adds the statusContainerState to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatusContainerState(statusContainerState *string) {
	o.StatusContainerState = statusContainerState
}

// WithStatusMapped adds the statusMapped to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatusMapped(statusMapped *bool) *StorageUnitModifyCollectionParams {
	o.SetStatusMapped(statusMapped)
	return o
}

// SetStatusMapped adds the statusMapped to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatusMapped(statusMapped *bool) {
	o.StatusMapped = statusMapped
}

// WithStatusReadOnly adds the statusReadOnly to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatusReadOnly(statusReadOnly *bool) *StorageUnitModifyCollectionParams {
	o.SetStatusReadOnly(statusReadOnly)
	return o
}

// SetStatusReadOnly adds the statusReadOnly to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatusReadOnly(statusReadOnly *bool) {
	o.StatusReadOnly = statusReadOnly
}

// WithStatusState adds the statusState to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithStatusState(statusState *string) *StorageUnitModifyCollectionParams {
	o.SetStatusState(statusState)
	return o
}

// SetStatusState adds the statusState to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetStatusState(statusState *string) {
	o.StatusState = statusState
}

// WithSvmName adds the svmName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithSvmName(svmName *string) *StorageUnitModifyCollectionParams {
	o.SetSvmName(svmName)
	return o
}

// SetSvmName adds the svmName to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetSvmName(svmName *string) {
	o.SvmName = svmName
}

// WithSvmUUID adds the svmUUID to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithSvmUUID(svmUUID *string) *StorageUnitModifyCollectionParams {
	o.SetSvmUUID(svmUUID)
	return o
}

// SetSvmUUID adds the svmUuid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetSvmUUID(svmUUID *string) {
	o.SvmUUID = svmUUID
}

// WithType adds the typeVar to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithType(typeVar *string) *StorageUnitModifyCollectionParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetType(typeVar *string) {
	o.Type = typeVar
}

// WithUUID adds the uuid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) WithUUID(uuid *string) *StorageUnitModifyCollectionParams {
	o.SetUUID(uuid)
	return o
}

// SetUUID adds the uuid to the storage unit modify collection params
func (o *StorageUnitModifyCollectionParams) SetUUID(uuid *string) {
	o.UUID = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *StorageUnitModifyCollectionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AntiRansomwareAttackProbability != nil {

		// query param anti_ransomware.attack_probability
		var qrAntiRansomwareAttackProbability string

		if o.AntiRansomwareAttackProbability != nil {
			qrAntiRansomwareAttackProbability = *o.AntiRansomwareAttackProbability
		}
		qAntiRansomwareAttackProbability := qrAntiRansomwareAttackProbability
		if qAntiRansomwareAttackProbability != "" {

			if err := r.SetQueryParam("anti_ransomware.attack_probability", qAntiRansomwareAttackProbability); err != nil {
				return err
			}
		}
	}

	if o.AntiRansomwareAttackReportsTime != nil {

		// query param anti_ransomware.attack_reports.time
		var qrAntiRansomwareAttackReportsTime string

		if o.AntiRansomwareAttackReportsTime != nil {
			qrAntiRansomwareAttackReportsTime = *o.AntiRansomwareAttackReportsTime
		}
		qAntiRansomwareAttackReportsTime := qrAntiRansomwareAttackReportsTime
		if qAntiRansomwareAttackReportsTime != "" {

			if err := r.SetQueryParam("anti_ransomware.attack_reports.time", qAntiRansomwareAttackReportsTime); err != nil {
				return err
			}
		}
	}

	if o.AntiRansomwareState != nil {

		// query param anti_ransomware.state
		var qrAntiRansomwareState string

		if o.AntiRansomwareState != nil {
			qrAntiRansomwareState = *o.AntiRansomwareState
		}
		qAntiRansomwareState := qrAntiRansomwareState
		if qAntiRansomwareState != "" {

			if err := r.SetQueryParam("anti_ransomware.state", qAntiRansomwareState); err != nil {
				return err
			}
		}
	}

	if o.Class != nil {

		// query param class
		var qrClass string

		if o.Class != nil {
			qrClass = *o.Class
		}
		qClass := qrClass
		if qClass != "" {

			if err := r.SetQueryParam("class", qClass); err != nil {
				return err
			}
		}
	}

	if o.CloneInheritedPhysicalUsed != nil {

		// query param clone.inherited_physical_used
		var qrCloneInheritedPhysicalUsed int64

		if o.CloneInheritedPhysicalUsed != nil {
			qrCloneInheritedPhysicalUsed = *o.CloneInheritedPhysicalUsed
		}
		qCloneInheritedPhysicalUsed := swag.FormatInt64(qrCloneInheritedPhysicalUsed)
		if qCloneInheritedPhysicalUsed != "" {

			if err := r.SetQueryParam("clone.inherited_physical_used", qCloneInheritedPhysicalUsed); err != nil {
				return err
			}
		}
	}

	if o.CloneInheritedSavings != nil {

		// query param clone.inherited_savings
		var qrCloneInheritedSavings int64

		if o.CloneInheritedSavings != nil {
			qrCloneInheritedSavings = *o.CloneInheritedSavings
		}
		qCloneInheritedSavings := swag.FormatInt64(qrCloneInheritedSavings)
		if qCloneInheritedSavings != "" {

			if err := r.SetQueryParam("clone.inherited_savings", qCloneInheritedSavings); err != nil {
				return err
			}
		}
	}

	if o.CloneIsFlexclone != nil {

		// query param clone.is_flexclone
		var qrCloneIsFlexclone bool

		if o.CloneIsFlexclone != nil {
			qrCloneIsFlexclone = *o.CloneIsFlexclone
		}
		qCloneIsFlexclone := swag.FormatBool(qrCloneIsFlexclone)
		if qCloneIsFlexclone != "" {

			if err := r.SetQueryParam("clone.is_flexclone", qCloneIsFlexclone); err != nil {
				return err
			}
		}
	}

	if o.CloneSourceSnapshotName != nil {

		// query param clone.source.snapshot.name
		var qrCloneSourceSnapshotName string

		if o.CloneSourceSnapshotName != nil {
			qrCloneSourceSnapshotName = *o.CloneSourceSnapshotName
		}
		qCloneSourceSnapshotName := qrCloneSourceSnapshotName
		if qCloneSourceSnapshotName != "" {

			if err := r.SetQueryParam("clone.source.snapshot.name", qCloneSourceSnapshotName); err != nil {
				return err
			}
		}
	}

	if o.CloneSourceSnapshotUUID != nil {

		// query param clone.source.snapshot.uuid
		var qrCloneSourceSnapshotUUID string

		if o.CloneSourceSnapshotUUID != nil {
			qrCloneSourceSnapshotUUID = *o.CloneSourceSnapshotUUID
		}
		qCloneSourceSnapshotUUID := qrCloneSourceSnapshotUUID
		if qCloneSourceSnapshotUUID != "" {

			if err := r.SetQueryParam("clone.source.snapshot.uuid", qCloneSourceSnapshotUUID); err != nil {
				return err
			}
		}
	}

	if o.CloneSourceStorageUnitName != nil {

		// query param clone.source.storage_unit.name
		var qrCloneSourceStorageUnitName string

		if o.CloneSourceStorageUnitName != nil {
			qrCloneSourceStorageUnitName = *o.CloneSourceStorageUnitName
		}
		qCloneSourceStorageUnitName := qrCloneSourceStorageUnitName
		if qCloneSourceStorageUnitName != "" {

			if err := r.SetQueryParam("clone.source.storage_unit.name", qCloneSourceStorageUnitName); err != nil {
				return err
			}
		}
	}

	if o.CloneSourceStorageUnitUUID != nil {

		// query param clone.source.storage_unit.uuid
		var qrCloneSourceStorageUnitUUID string

		if o.CloneSourceStorageUnitUUID != nil {
			qrCloneSourceStorageUnitUUID = *o.CloneSourceStorageUnitUUID
		}
		qCloneSourceStorageUnitUUID := qrCloneSourceStorageUnitUUID
		if qCloneSourceStorageUnitUUID != "" {

			if err := r.SetQueryParam("clone.source.storage_unit.uuid", qCloneSourceStorageUnitUUID); err != nil {
				return err
			}
		}
	}

	if o.CloneSourceSvmName != nil {

		// query param clone.source.svm.name
		var qrCloneSourceSvmName string

		if o.CloneSourceSvmName != nil {
			qrCloneSourceSvmName = *o.CloneSourceSvmName
		}
		qCloneSourceSvmName := qrCloneSourceSvmName
		if qCloneSourceSvmName != "" {

			if err := r.SetQueryParam("clone.source.svm.name", qCloneSourceSvmName); err != nil {
				return err
			}
		}
	}

	if o.CloneSourceSvmUUID != nil {

		// query param clone.source.svm.uuid
		var qrCloneSourceSvmUUID string

		if o.CloneSourceSvmUUID != nil {
			qrCloneSourceSvmUUID = *o.CloneSourceSvmUUID
		}
		qCloneSourceSvmUUID := qrCloneSourceSvmUUID
		if qCloneSourceSvmUUID != "" {

			if err := r.SetQueryParam("clone.source.svm.uuid", qCloneSourceSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.CloneSplitCompletePercent != nil {

		// query param clone.split_complete_percent
		var qrCloneSplitCompletePercent int64

		if o.CloneSplitCompletePercent != nil {
			qrCloneSplitCompletePercent = *o.CloneSplitCompletePercent
		}
		qCloneSplitCompletePercent := swag.FormatInt64(qrCloneSplitCompletePercent)
		if qCloneSplitCompletePercent != "" {

			if err := r.SetQueryParam("clone.split_complete_percent", qCloneSplitCompletePercent); err != nil {
				return err
			}
		}
	}

	if o.CloneSplitEstimate != nil {

		// query param clone.split_estimate
		var qrCloneSplitEstimate int64

		if o.CloneSplitEstimate != nil {
			qrCloneSplitEstimate = *o.CloneSplitEstimate
		}
		qCloneSplitEstimate := swag.FormatInt64(qrCloneSplitEstimate)
		if qCloneSplitEstimate != "" {

			if err := r.SetQueryParam("clone.split_estimate", qCloneSplitEstimate); err != nil {
				return err
			}
		}
	}

	if o.CloneSplitInitiated != nil {

		// query param clone.split_initiated
		var qrCloneSplitInitiated bool

		if o.CloneSplitInitiated != nil {
			qrCloneSplitInitiated = *o.CloneSplitInitiated
		}
		qCloneSplitInitiated := swag.FormatBool(qrCloneSplitInitiated)
		if qCloneSplitInitiated != "" {

			if err := r.SetQueryParam("clone.split_initiated", qCloneSplitInitiated); err != nil {
				return err
			}
		}
	}

	if o.Comment != nil {

		// query param comment
		var qrComment string

		if o.Comment != nil {
			qrComment = *o.Comment
		}
		qComment := qrComment
		if qComment != "" {

			if err := r.SetQueryParam("comment", qComment); err != nil {
				return err
			}
		}
	}

	if o.ConsistencyGroupName != nil {

		// query param consistency_group.name
		var qrConsistencyGroupName string

		if o.ConsistencyGroupName != nil {
			qrConsistencyGroupName = *o.ConsistencyGroupName
		}
		qConsistencyGroupName := qrConsistencyGroupName
		if qConsistencyGroupName != "" {

			if err := r.SetQueryParam("consistency_group.name", qConsistencyGroupName); err != nil {
				return err
			}
		}
	}

	if o.ConsistencyGroupUUID != nil {

		// query param consistency_group.uuid
		var qrConsistencyGroupUUID string

		if o.ConsistencyGroupUUID != nil {
			qrConsistencyGroupUUID = *o.ConsistencyGroupUUID
		}
		qConsistencyGroupUUID := qrConsistencyGroupUUID
		if qConsistencyGroupUUID != "" {

			if err := r.SetQueryParam("consistency_group.uuid", qConsistencyGroupUUID); err != nil {
				return err
			}
		}
	}

	if o.ContinueOnFailure != nil {

		// query param continue_on_failure
		var qrContinueOnFailure bool

		if o.ContinueOnFailure != nil {
			qrContinueOnFailure = *o.ContinueOnFailure
		}
		qContinueOnFailure := swag.FormatBool(qrContinueOnFailure)
		if qContinueOnFailure != "" {

			if err := r.SetQueryParam("continue_on_failure", qContinueOnFailure); err != nil {
				return err
			}
		}
	}

	if o.CreateTime != nil {

		// query param create_time
		var qrCreateTime string

		if o.CreateTime != nil {
			qrCreateTime = *o.CreateTime
		}
		qCreateTime := qrCreateTime
		if qCreateTime != "" {

			if err := r.SetQueryParam("create_time", qCreateTime); err != nil {
				return err
			}
		}
	}

	if o.Enabled != nil {

		// query param enabled
		var qrEnabled bool

		if o.Enabled != nil {
			qrEnabled = *o.Enabled
		}
		qEnabled := swag.FormatBool(qrEnabled)
		if qEnabled != "" {

			if err := r.SetQueryParam("enabled", qEnabled); err != nil {
				return err
			}
		}
	}

	if o.EncryptionState != nil {

		// query param encryption.state
		var qrEncryptionState string

		if o.EncryptionState != nil {
			qrEncryptionState = *o.EncryptionState
		}
		qEncryptionState := qrEncryptionState
		if qEncryptionState != "" {

			if err := r.SetQueryParam("encryption.state", qEncryptionState); err != nil {
				return err
			}
		}
	}
	if err := r.SetBodyParam(o.Info); err != nil {
		return err
	}

	if o.LocationNodeName != nil {

		// query param location.node.name
		var qrLocationNodeName string

		if o.LocationNodeName != nil {
			qrLocationNodeName = *o.LocationNodeName
		}
		qLocationNodeName := qrLocationNodeName
		if qLocationNodeName != "" {

			if err := r.SetQueryParam("location.node.name", qLocationNodeName); err != nil {
				return err
			}
		}
	}

	if o.LocationNodeUUID != nil {

		// query param location.node.uuid
		var qrLocationNodeUUID string

		if o.LocationNodeUUID != nil {
			qrLocationNodeUUID = *o.LocationNodeUUID
		}
		qLocationNodeUUID := qrLocationNodeUUID
		if qLocationNodeUUID != "" {

			if err := r.SetQueryParam("location.node.uuid", qLocationNodeUUID); err != nil {
				return err
			}
		}
	}

	if o.LocationStorageAvailabilityZoneName != nil {

		// query param location.storage_availability_zone.name
		var qrLocationStorageAvailabilityZoneName string

		if o.LocationStorageAvailabilityZoneName != nil {
			qrLocationStorageAvailabilityZoneName = *o.LocationStorageAvailabilityZoneName
		}
		qLocationStorageAvailabilityZoneName := qrLocationStorageAvailabilityZoneName
		if qLocationStorageAvailabilityZoneName != "" {

			if err := r.SetQueryParam("location.storage_availability_zone.name", qLocationStorageAvailabilityZoneName); err != nil {
				return err
			}
		}
	}

	if o.LocationStorageAvailabilityZoneUUID != nil {

		// query param location.storage_availability_zone.uuid
		var qrLocationStorageAvailabilityZoneUUID string

		if o.LocationStorageAvailabilityZoneUUID != nil {
			qrLocationStorageAvailabilityZoneUUID = *o.LocationStorageAvailabilityZoneUUID
		}
		qLocationStorageAvailabilityZoneUUID := qrLocationStorageAvailabilityZoneUUID
		if qLocationStorageAvailabilityZoneUUID != "" {

			if err := r.SetQueryParam("location.storage_availability_zone.uuid", qLocationStorageAvailabilityZoneUUID); err != nil {
				return err
			}
		}
	}

	if o.LocationVolumeName != nil {

		// query param location.volume.name
		var qrLocationVolumeName string

		if o.LocationVolumeName != nil {
			qrLocationVolumeName = *o.LocationVolumeName
		}
		qLocationVolumeName := qrLocationVolumeName
		if qLocationVolumeName != "" {

			if err := r.SetQueryParam("location.volume.name", qLocationVolumeName); err != nil {
				return err
			}
		}
	}

	if o.LocationVolumeUUID != nil {

		// query param location.volume.uuid
		var qrLocationVolumeUUID string

		if o.LocationVolumeUUID != nil {
			qrLocationVolumeUUID = *o.LocationVolumeUUID
		}
		qLocationVolumeUUID := qrLocationVolumeUUID
		if qLocationVolumeUUID != "" {

			if err := r.SetQueryParam("location.volume.uuid", qLocationVolumeUUID); err != nil {
				return err
			}
		}
	}

	if o.MapsHostGroupName != nil {

		// query param maps.host_group.name
		var qrMapsHostGroupName string

		if o.MapsHostGroupName != nil {
			qrMapsHostGroupName = *o.MapsHostGroupName
		}
		qMapsHostGroupName := qrMapsHostGroupName
		if qMapsHostGroupName != "" {

			if err := r.SetQueryParam("maps.host_group.name", qMapsHostGroupName); err != nil {
				return err
			}
		}
	}

	if o.MapsHostGroupUUID != nil {

		// query param maps.host_group.uuid
		var qrMapsHostGroupUUID string

		if o.MapsHostGroupUUID != nil {
			qrMapsHostGroupUUID = *o.MapsHostGroupUUID
		}
		qMapsHostGroupUUID := qrMapsHostGroupUUID
		if qMapsHostGroupUUID != "" {

			if err := r.SetQueryParam("maps.host_group.uuid", qMapsHostGroupUUID); err != nil {
				return err
			}
		}
	}

	if o.MapsLunMapIgroupName != nil {

		// query param maps.lun_map.igroup.name
		var qrMapsLunMapIgroupName string

		if o.MapsLunMapIgroupName != nil {
			qrMapsLunMapIgroupName = *o.MapsLunMapIgroupName
		}
		qMapsLunMapIgroupName := qrMapsLunMapIgroupName
		if qMapsLunMapIgroupName != "" {

			if err := r.SetQueryParam("maps.lun_map.igroup.name", qMapsLunMapIgroupName); err != nil {
				return err
			}
		}
	}

	if o.MapsLunMapIgroupUUID != nil {

		// query param maps.lun_map.igroup.uuid
		var qrMapsLunMapIgroupUUID string

		if o.MapsLunMapIgroupUUID != nil {
			qrMapsLunMapIgroupUUID = *o.MapsLunMapIgroupUUID
		}
		qMapsLunMapIgroupUUID := qrMapsLunMapIgroupUUID
		if qMapsLunMapIgroupUUID != "" {

			if err := r.SetQueryParam("maps.lun_map.igroup.uuid", qMapsLunMapIgroupUUID); err != nil {
				return err
			}
		}
	}

	if o.MapsLunMapLogicalUnitNumber != nil {

		// query param maps.lun_map.logical_unit_number
		var qrMapsLunMapLogicalUnitNumber int64

		if o.MapsLunMapLogicalUnitNumber != nil {
			qrMapsLunMapLogicalUnitNumber = *o.MapsLunMapLogicalUnitNumber
		}
		qMapsLunMapLogicalUnitNumber := swag.FormatInt64(qrMapsLunMapLogicalUnitNumber)
		if qMapsLunMapLogicalUnitNumber != "" {

			if err := r.SetQueryParam("maps.lun_map.logical_unit_number", qMapsLunMapLogicalUnitNumber); err != nil {
				return err
			}
		}
	}

	if o.MapsSubsystemMapNsid != nil {

		// query param maps.subsystem_map.nsid
		var qrMapsSubsystemMapNsid string

		if o.MapsSubsystemMapNsid != nil {
			qrMapsSubsystemMapNsid = *o.MapsSubsystemMapNsid
		}
		qMapsSubsystemMapNsid := qrMapsSubsystemMapNsid
		if qMapsSubsystemMapNsid != "" {

			if err := r.SetQueryParam("maps.subsystem_map.nsid", qMapsSubsystemMapNsid); err != nil {
				return err
			}
		}
	}

	if o.MapsSubsystemMapSubsystemName != nil {

		// query param maps.subsystem_map.subsystem.name
		var qrMapsSubsystemMapSubsystemName string

		if o.MapsSubsystemMapSubsystemName != nil {
			qrMapsSubsystemMapSubsystemName = *o.MapsSubsystemMapSubsystemName
		}
		qMapsSubsystemMapSubsystemName := qrMapsSubsystemMapSubsystemName
		if qMapsSubsystemMapSubsystemName != "" {

			if err := r.SetQueryParam("maps.subsystem_map.subsystem.name", qMapsSubsystemMapSubsystemName); err != nil {
				return err
			}
		}
	}

	if o.MapsSubsystemMapSubsystemUUID != nil {

		// query param maps.subsystem_map.subsystem.uuid
		var qrMapsSubsystemMapSubsystemUUID string

		if o.MapsSubsystemMapSubsystemUUID != nil {
			qrMapsSubsystemMapSubsystemUUID = *o.MapsSubsystemMapSubsystemUUID
		}
		qMapsSubsystemMapSubsystemUUID := qrMapsSubsystemMapSubsystemUUID
		if qMapsSubsystemMapSubsystemUUID != "" {

			if err := r.SetQueryParam("maps.subsystem_map.subsystem.uuid", qMapsSubsystemMapSubsystemUUID); err != nil {
				return err
			}
		}
	}

	if o.MetricDuration != nil {

		// query param metric.duration
		var qrMetricDuration string

		if o.MetricDuration != nil {
			qrMetricDuration = *o.MetricDuration
		}
		qMetricDuration := qrMetricDuration
		if qMetricDuration != "" {

			if err := r.SetQueryParam("metric.duration", qMetricDuration); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsOther != nil {

		// query param metric.iops.other
		var qrMetricIopsOther int64

		if o.MetricIopsOther != nil {
			qrMetricIopsOther = *o.MetricIopsOther
		}
		qMetricIopsOther := swag.FormatInt64(qrMetricIopsOther)
		if qMetricIopsOther != "" {

			if err := r.SetQueryParam("metric.iops.other", qMetricIopsOther); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsRead != nil {

		// query param metric.iops.read
		var qrMetricIopsRead int64

		if o.MetricIopsRead != nil {
			qrMetricIopsRead = *o.MetricIopsRead
		}
		qMetricIopsRead := swag.FormatInt64(qrMetricIopsRead)
		if qMetricIopsRead != "" {

			if err := r.SetQueryParam("metric.iops.read", qMetricIopsRead); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsTotal != nil {

		// query param metric.iops.total
		var qrMetricIopsTotal int64

		if o.MetricIopsTotal != nil {
			qrMetricIopsTotal = *o.MetricIopsTotal
		}
		qMetricIopsTotal := swag.FormatInt64(qrMetricIopsTotal)
		if qMetricIopsTotal != "" {

			if err := r.SetQueryParam("metric.iops.total", qMetricIopsTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricIopsWrite != nil {

		// query param metric.iops.write
		var qrMetricIopsWrite int64

		if o.MetricIopsWrite != nil {
			qrMetricIopsWrite = *o.MetricIopsWrite
		}
		qMetricIopsWrite := swag.FormatInt64(qrMetricIopsWrite)
		if qMetricIopsWrite != "" {

			if err := r.SetQueryParam("metric.iops.write", qMetricIopsWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyOther != nil {

		// query param metric.latency.other
		var qrMetricLatencyOther int64

		if o.MetricLatencyOther != nil {
			qrMetricLatencyOther = *o.MetricLatencyOther
		}
		qMetricLatencyOther := swag.FormatInt64(qrMetricLatencyOther)
		if qMetricLatencyOther != "" {

			if err := r.SetQueryParam("metric.latency.other", qMetricLatencyOther); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyRead != nil {

		// query param metric.latency.read
		var qrMetricLatencyRead int64

		if o.MetricLatencyRead != nil {
			qrMetricLatencyRead = *o.MetricLatencyRead
		}
		qMetricLatencyRead := swag.FormatInt64(qrMetricLatencyRead)
		if qMetricLatencyRead != "" {

			if err := r.SetQueryParam("metric.latency.read", qMetricLatencyRead); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyTotal != nil {

		// query param metric.latency.total
		var qrMetricLatencyTotal int64

		if o.MetricLatencyTotal != nil {
			qrMetricLatencyTotal = *o.MetricLatencyTotal
		}
		qMetricLatencyTotal := swag.FormatInt64(qrMetricLatencyTotal)
		if qMetricLatencyTotal != "" {

			if err := r.SetQueryParam("metric.latency.total", qMetricLatencyTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricLatencyWrite != nil {

		// query param metric.latency.write
		var qrMetricLatencyWrite int64

		if o.MetricLatencyWrite != nil {
			qrMetricLatencyWrite = *o.MetricLatencyWrite
		}
		qMetricLatencyWrite := swag.FormatInt64(qrMetricLatencyWrite)
		if qMetricLatencyWrite != "" {

			if err := r.SetQueryParam("metric.latency.write", qMetricLatencyWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricStatus != nil {

		// query param metric.status
		var qrMetricStatus string

		if o.MetricStatus != nil {
			qrMetricStatus = *o.MetricStatus
		}
		qMetricStatus := qrMetricStatus
		if qMetricStatus != "" {

			if err := r.SetQueryParam("metric.status", qMetricStatus); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputOther != nil {

		// query param metric.throughput.other
		var qrMetricThroughputOther int64

		if o.MetricThroughputOther != nil {
			qrMetricThroughputOther = *o.MetricThroughputOther
		}
		qMetricThroughputOther := swag.FormatInt64(qrMetricThroughputOther)
		if qMetricThroughputOther != "" {

			if err := r.SetQueryParam("metric.throughput.other", qMetricThroughputOther); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputRead != nil {

		// query param metric.throughput.read
		var qrMetricThroughputRead int64

		if o.MetricThroughputRead != nil {
			qrMetricThroughputRead = *o.MetricThroughputRead
		}
		qMetricThroughputRead := swag.FormatInt64(qrMetricThroughputRead)
		if qMetricThroughputRead != "" {

			if err := r.SetQueryParam("metric.throughput.read", qMetricThroughputRead); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputTotal != nil {

		// query param metric.throughput.total
		var qrMetricThroughputTotal int64

		if o.MetricThroughputTotal != nil {
			qrMetricThroughputTotal = *o.MetricThroughputTotal
		}
		qMetricThroughputTotal := swag.FormatInt64(qrMetricThroughputTotal)
		if qMetricThroughputTotal != "" {

			if err := r.SetQueryParam("metric.throughput.total", qMetricThroughputTotal); err != nil {
				return err
			}
		}
	}

	if o.MetricThroughputWrite != nil {

		// query param metric.throughput.write
		var qrMetricThroughputWrite int64

		if o.MetricThroughputWrite != nil {
			qrMetricThroughputWrite = *o.MetricThroughputWrite
		}
		qMetricThroughputWrite := swag.FormatInt64(qrMetricThroughputWrite)
		if qMetricThroughputWrite != "" {

			if err := r.SetQueryParam("metric.throughput.write", qMetricThroughputWrite); err != nil {
				return err
			}
		}
	}

	if o.MetricTimestamp != nil {

		// query param metric.timestamp
		var qrMetricTimestamp string

		if o.MetricTimestamp != nil {
			qrMetricTimestamp = *o.MetricTimestamp
		}
		qMetricTimestamp := qrMetricTimestamp
		if qMetricTimestamp != "" {

			if err := r.SetQueryParam("metric.timestamp", qMetricTimestamp); err != nil {
				return err
			}
		}
	}

	if o.MovementDestinationStorageAvailabilityZoneName != nil {

		// query param movement.destination.storage_availability_zone.name
		var qrMovementDestinationStorageAvailabilityZoneName string

		if o.MovementDestinationStorageAvailabilityZoneName != nil {
			qrMovementDestinationStorageAvailabilityZoneName = *o.MovementDestinationStorageAvailabilityZoneName
		}
		qMovementDestinationStorageAvailabilityZoneName := qrMovementDestinationStorageAvailabilityZoneName
		if qMovementDestinationStorageAvailabilityZoneName != "" {

			if err := r.SetQueryParam("movement.destination.storage_availability_zone.name", qMovementDestinationStorageAvailabilityZoneName); err != nil {
				return err
			}
		}
	}

	if o.MovementDestinationStorageAvailabilityZoneUUID != nil {

		// query param movement.destination.storage_availability_zone.uuid
		var qrMovementDestinationStorageAvailabilityZoneUUID string

		if o.MovementDestinationStorageAvailabilityZoneUUID != nil {
			qrMovementDestinationStorageAvailabilityZoneUUID = *o.MovementDestinationStorageAvailabilityZoneUUID
		}
		qMovementDestinationStorageAvailabilityZoneUUID := qrMovementDestinationStorageAvailabilityZoneUUID
		if qMovementDestinationStorageAvailabilityZoneUUID != "" {

			if err := r.SetQueryParam("movement.destination.storage_availability_zone.uuid", qMovementDestinationStorageAvailabilityZoneUUID); err != nil {
				return err
			}
		}
	}

	if o.MovementPercentComplete != nil {

		// query param movement.percent_complete
		var qrMovementPercentComplete int64

		if o.MovementPercentComplete != nil {
			qrMovementPercentComplete = *o.MovementPercentComplete
		}
		qMovementPercentComplete := swag.FormatInt64(qrMovementPercentComplete)
		if qMovementPercentComplete != "" {

			if err := r.SetQueryParam("movement.percent_complete", qMovementPercentComplete); err != nil {
				return err
			}
		}
	}

	if o.MovementSourceStorageAvailabilityZoneName != nil {

		// query param movement.source.storage_availability_zone.name
		var qrMovementSourceStorageAvailabilityZoneName string

		if o.MovementSourceStorageAvailabilityZoneName != nil {
			qrMovementSourceStorageAvailabilityZoneName = *o.MovementSourceStorageAvailabilityZoneName
		}
		qMovementSourceStorageAvailabilityZoneName := qrMovementSourceStorageAvailabilityZoneName
		if qMovementSourceStorageAvailabilityZoneName != "" {

			if err := r.SetQueryParam("movement.source.storage_availability_zone.name", qMovementSourceStorageAvailabilityZoneName); err != nil {
				return err
			}
		}
	}

	if o.MovementSourceStorageAvailabilityZoneUUID != nil {

		// query param movement.source.storage_availability_zone.uuid
		var qrMovementSourceStorageAvailabilityZoneUUID string

		if o.MovementSourceStorageAvailabilityZoneUUID != nil {
			qrMovementSourceStorageAvailabilityZoneUUID = *o.MovementSourceStorageAvailabilityZoneUUID
		}
		qMovementSourceStorageAvailabilityZoneUUID := qrMovementSourceStorageAvailabilityZoneUUID
		if qMovementSourceStorageAvailabilityZoneUUID != "" {

			if err := r.SetQueryParam("movement.source.storage_availability_zone.uuid", qMovementSourceStorageAvailabilityZoneUUID); err != nil {
				return err
			}
		}
	}

	if o.MovementStartTime != nil {

		// query param movement.start_time
		var qrMovementStartTime string

		if o.MovementStartTime != nil {
			qrMovementStartTime = *o.MovementStartTime
		}
		qMovementStartTime := qrMovementStartTime
		if qMovementStartTime != "" {

			if err := r.SetQueryParam("movement.start_time", qMovementStartTime); err != nil {
				return err
			}
		}
	}

	if o.MovementState != nil {

		// query param movement.state
		var qrMovementState string

		if o.MovementState != nil {
			qrMovementState = *o.MovementState
		}
		qMovementState := qrMovementState
		if qMovementState != "" {

			if err := r.SetQueryParam("movement.state", qMovementState); err != nil {
				return err
			}
		}
	}

	if o.Name != nil {

		// query param name
		var qrName string

		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.OsType != nil {

		// query param os_type
		var qrOsType string

		if o.OsType != nil {
			qrOsType = *o.OsType
		}
		qOsType := qrOsType
		if qOsType != "" {

			if err := r.SetQueryParam("os_type", qOsType); err != nil {
				return err
			}
		}
	}

	if o.QosPolicyName != nil {

		// query param qos_policy.name
		var qrQosPolicyName string

		if o.QosPolicyName != nil {
			qrQosPolicyName = *o.QosPolicyName
		}
		qQosPolicyName := qrQosPolicyName
		if qQosPolicyName != "" {

			if err := r.SetQueryParam("qos_policy.name", qQosPolicyName); err != nil {
				return err
			}
		}
	}

	if o.QosPolicyUUID != nil {

		// query param qos_policy.uuid
		var qrQosPolicyUUID string

		if o.QosPolicyUUID != nil {
			qrQosPolicyUUID = *o.QosPolicyUUID
		}
		qQosPolicyUUID := qrQosPolicyUUID
		if qQosPolicyUUID != "" {

			if err := r.SetQueryParam("qos_policy.uuid", qQosPolicyUUID); err != nil {
				return err
			}
		}
	}

	if o.RestoreToByteCount != nil {

		// query param restore_to.byte_count
		var qrRestoreToByteCount float64

		if o.RestoreToByteCount != nil {
			qrRestoreToByteCount = *o.RestoreToByteCount
		}
		qRestoreToByteCount := swag.FormatFloat64(qrRestoreToByteCount)
		if qRestoreToByteCount != "" {

			if err := r.SetQueryParam("restore_to.byte_count", qRestoreToByteCount); err != nil {
				return err
			}
		}
	}

	if o.RestoreToKeepSnapshots != nil {

		// query param restore_to.keep_snapshots
		var qrRestoreToKeepSnapshots bool

		if o.RestoreToKeepSnapshots != nil {
			qrRestoreToKeepSnapshots = *o.RestoreToKeepSnapshots
		}
		qRestoreToKeepSnapshots := swag.FormatBool(qrRestoreToKeepSnapshots)
		if qRestoreToKeepSnapshots != "" {

			if err := r.SetQueryParam("restore_to.keep_snapshots", qRestoreToKeepSnapshots); err != nil {
				return err
			}
		}
	}

	if o.RestoreToSnapshotName != nil {

		// query param restore_to.snapshot.name
		var qrRestoreToSnapshotName string

		if o.RestoreToSnapshotName != nil {
			qrRestoreToSnapshotName = *o.RestoreToSnapshotName
		}
		qRestoreToSnapshotName := qrRestoreToSnapshotName
		if qRestoreToSnapshotName != "" {

			if err := r.SetQueryParam("restore_to.snapshot.name", qRestoreToSnapshotName); err != nil {
				return err
			}
		}
	}

	if o.RestoreToSnapshotUUID != nil {

		// query param restore_to.snapshot.uuid
		var qrRestoreToSnapshotUUID string

		if o.RestoreToSnapshotUUID != nil {
			qrRestoreToSnapshotUUID = *o.RestoreToSnapshotUUID
		}
		qRestoreToSnapshotUUID := qrRestoreToSnapshotUUID
		if qRestoreToSnapshotUUID != "" {

			if err := r.SetQueryParam("restore_to.snapshot.uuid", qRestoreToSnapshotUUID); err != nil {
				return err
			}
		}
	}

	if o.RestoreToStartByte != nil {

		// query param restore_to.start_byte
		var qrRestoreToStartByte float64

		if o.RestoreToStartByte != nil {
			qrRestoreToStartByte = *o.RestoreToStartByte
		}
		qRestoreToStartByte := swag.FormatFloat64(qrRestoreToStartByte)
		if qRestoreToStartByte != "" {

			if err := r.SetQueryParam("restore_to.start_byte", qRestoreToStartByte); err != nil {
				return err
			}
		}
	}

	if o.ReturnRecords != nil {

		// query param return_records
		var qrReturnRecords bool

		if o.ReturnRecords != nil {
			qrReturnRecords = *o.ReturnRecords
		}
		qReturnRecords := swag.FormatBool(qrReturnRecords)
		if qReturnRecords != "" {

			if err := r.SetQueryParam("return_records", qReturnRecords); err != nil {
				return err
			}
		}
	}

	if o.ReturnTimeout != nil {

		// query param return_timeout
		var qrReturnTimeout int64

		if o.ReturnTimeout != nil {
			qrReturnTimeout = *o.ReturnTimeout
		}
		qReturnTimeout := swag.FormatInt64(qrReturnTimeout)
		if qReturnTimeout != "" {

			if err := r.SetQueryParam("return_timeout", qReturnTimeout); err != nil {
				return err
			}
		}
	}

	if o.SerialNumber != nil {

		// query param serial_number
		var qrSerialNumber string

		if o.SerialNumber != nil {
			qrSerialNumber = *o.SerialNumber
		}
		qSerialNumber := qrSerialNumber
		if qSerialNumber != "" {

			if err := r.SetQueryParam("serial_number", qSerialNumber); err != nil {
				return err
			}
		}
	}

	if o.SerialNumberHex != nil {

		// query param serial_number_hex
		var qrSerialNumberHex string

		if o.SerialNumberHex != nil {
			qrSerialNumberHex = *o.SerialNumberHex
		}
		qSerialNumberHex := qrSerialNumberHex
		if qSerialNumberHex != "" {

			if err := r.SetQueryParam("serial_number_hex", qSerialNumberHex); err != nil {
				return err
			}
		}
	}

	if o.SerialRecords != nil {

		// query param serial_records
		var qrSerialRecords bool

		if o.SerialRecords != nil {
			qrSerialRecords = *o.SerialRecords
		}
		qSerialRecords := swag.FormatBool(qrSerialRecords)
		if qSerialRecords != "" {

			if err := r.SetQueryParam("serial_records", qSerialRecords); err != nil {
				return err
			}
		}
	}

	if o.SpaceEfficiencyRatio != nil {

		// query param space.efficiency_ratio
		var qrSpaceEfficiencyRatio float64

		if o.SpaceEfficiencyRatio != nil {
			qrSpaceEfficiencyRatio = *o.SpaceEfficiencyRatio
		}
		qSpaceEfficiencyRatio := swag.FormatFloat64(qrSpaceEfficiencyRatio)
		if qSpaceEfficiencyRatio != "" {

			if err := r.SetQueryParam("space.efficiency_ratio", qSpaceEfficiencyRatio); err != nil {
				return err
			}
		}
	}

	if o.SpacePhysicalUsed != nil {

		// query param space.physical_used
		var qrSpacePhysicalUsed int64

		if o.SpacePhysicalUsed != nil {
			qrSpacePhysicalUsed = *o.SpacePhysicalUsed
		}
		qSpacePhysicalUsed := swag.FormatInt64(qrSpacePhysicalUsed)
		if qSpacePhysicalUsed != "" {

			if err := r.SetQueryParam("space.physical_used", qSpacePhysicalUsed); err != nil {
				return err
			}
		}
	}

	if o.SpacePhysicalUsedBySnapshots != nil {

		// query param space.physical_used_by_snapshots
		var qrSpacePhysicalUsedBySnapshots int64

		if o.SpacePhysicalUsedBySnapshots != nil {
			qrSpacePhysicalUsedBySnapshots = *o.SpacePhysicalUsedBySnapshots
		}
		qSpacePhysicalUsedBySnapshots := swag.FormatInt64(qrSpacePhysicalUsedBySnapshots)
		if qSpacePhysicalUsedBySnapshots != "" {

			if err := r.SetQueryParam("space.physical_used_by_snapshots", qSpacePhysicalUsedBySnapshots); err != nil {
				return err
			}
		}
	}

	if o.SpaceSize != nil {

		// query param space.size
		var qrSpaceSize int64

		if o.SpaceSize != nil {
			qrSpaceSize = *o.SpaceSize
		}
		qSpaceSize := swag.FormatInt64(qrSpaceSize)
		if qSpaceSize != "" {

			if err := r.SetQueryParam("space.size", qSpaceSize); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotAutodeleteEnabled != nil {

		// query param space.snapshot.autodelete.enabled
		var qrSpaceSnapshotAutodeleteEnabled bool

		if o.SpaceSnapshotAutodeleteEnabled != nil {
			qrSpaceSnapshotAutodeleteEnabled = *o.SpaceSnapshotAutodeleteEnabled
		}
		qSpaceSnapshotAutodeleteEnabled := swag.FormatBool(qrSpaceSnapshotAutodeleteEnabled)
		if qSpaceSnapshotAutodeleteEnabled != "" {

			if err := r.SetQueryParam("space.snapshot.autodelete.enabled", qSpaceSnapshotAutodeleteEnabled); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotReserveAvailable != nil {

		// query param space.snapshot.reserve_available
		var qrSpaceSnapshotReserveAvailable int64

		if o.SpaceSnapshotReserveAvailable != nil {
			qrSpaceSnapshotReserveAvailable = *o.SpaceSnapshotReserveAvailable
		}
		qSpaceSnapshotReserveAvailable := swag.FormatInt64(qrSpaceSnapshotReserveAvailable)
		if qSpaceSnapshotReserveAvailable != "" {

			if err := r.SetQueryParam("space.snapshot.reserve_available", qSpaceSnapshotReserveAvailable); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotReservePercent != nil {

		// query param space.snapshot.reserve_percent
		var qrSpaceSnapshotReservePercent int64

		if o.SpaceSnapshotReservePercent != nil {
			qrSpaceSnapshotReservePercent = *o.SpaceSnapshotReservePercent
		}
		qSpaceSnapshotReservePercent := swag.FormatInt64(qrSpaceSnapshotReservePercent)
		if qSpaceSnapshotReservePercent != "" {

			if err := r.SetQueryParam("space.snapshot.reserve_percent", qSpaceSnapshotReservePercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotReserveSize != nil {

		// query param space.snapshot.reserve_size
		var qrSpaceSnapshotReserveSize int64

		if o.SpaceSnapshotReserveSize != nil {
			qrSpaceSnapshotReserveSize = *o.SpaceSnapshotReserveSize
		}
		qSpaceSnapshotReserveSize := swag.FormatInt64(qrSpaceSnapshotReserveSize)
		if qSpaceSnapshotReserveSize != "" {

			if err := r.SetQueryParam("space.snapshot.reserve_size", qSpaceSnapshotReserveSize); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotSpaceUsedPercent != nil {

		// query param space.snapshot.space_used_percent
		var qrSpaceSnapshotSpaceUsedPercent int64

		if o.SpaceSnapshotSpaceUsedPercent != nil {
			qrSpaceSnapshotSpaceUsedPercent = *o.SpaceSnapshotSpaceUsedPercent
		}
		qSpaceSnapshotSpaceUsedPercent := swag.FormatInt64(qrSpaceSnapshotSpaceUsedPercent)
		if qSpaceSnapshotSpaceUsedPercent != "" {

			if err := r.SetQueryParam("space.snapshot.space_used_percent", qSpaceSnapshotSpaceUsedPercent); err != nil {
				return err
			}
		}
	}

	if o.SpaceSnapshotUsed != nil {

		// query param space.snapshot.used
		var qrSpaceSnapshotUsed int64

		if o.SpaceSnapshotUsed != nil {
			qrSpaceSnapshotUsed = *o.SpaceSnapshotUsed
		}
		qSpaceSnapshotUsed := swag.FormatInt64(qrSpaceSnapshotUsed)
		if qSpaceSnapshotUsed != "" {

			if err := r.SetQueryParam("space.snapshot.used", qSpaceSnapshotUsed); err != nil {
				return err
			}
		}
	}

	if o.SpaceUsed != nil {

		// query param space.used
		var qrSpaceUsed int64

		if o.SpaceUsed != nil {
			qrSpaceUsed = *o.SpaceUsed
		}
		qSpaceUsed := swag.FormatInt64(qrSpaceUsed)
		if qSpaceUsed != "" {

			if err := r.SetQueryParam("space.used", qSpaceUsed); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawOther != nil {

		// query param statistics.iops_raw.other
		var qrStatisticsIopsRawOther int64

		if o.StatisticsIopsRawOther != nil {
			qrStatisticsIopsRawOther = *o.StatisticsIopsRawOther
		}
		qStatisticsIopsRawOther := swag.FormatInt64(qrStatisticsIopsRawOther)
		if qStatisticsIopsRawOther != "" {

			if err := r.SetQueryParam("statistics.iops_raw.other", qStatisticsIopsRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawRead != nil {

		// query param statistics.iops_raw.read
		var qrStatisticsIopsRawRead int64

		if o.StatisticsIopsRawRead != nil {
			qrStatisticsIopsRawRead = *o.StatisticsIopsRawRead
		}
		qStatisticsIopsRawRead := swag.FormatInt64(qrStatisticsIopsRawRead)
		if qStatisticsIopsRawRead != "" {

			if err := r.SetQueryParam("statistics.iops_raw.read", qStatisticsIopsRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawTotal != nil {

		// query param statistics.iops_raw.total
		var qrStatisticsIopsRawTotal int64

		if o.StatisticsIopsRawTotal != nil {
			qrStatisticsIopsRawTotal = *o.StatisticsIopsRawTotal
		}
		qStatisticsIopsRawTotal := swag.FormatInt64(qrStatisticsIopsRawTotal)
		if qStatisticsIopsRawTotal != "" {

			if err := r.SetQueryParam("statistics.iops_raw.total", qStatisticsIopsRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsIopsRawWrite != nil {

		// query param statistics.iops_raw.write
		var qrStatisticsIopsRawWrite int64

		if o.StatisticsIopsRawWrite != nil {
			qrStatisticsIopsRawWrite = *o.StatisticsIopsRawWrite
		}
		qStatisticsIopsRawWrite := swag.FormatInt64(qrStatisticsIopsRawWrite)
		if qStatisticsIopsRawWrite != "" {

			if err := r.SetQueryParam("statistics.iops_raw.write", qStatisticsIopsRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawOther != nil {

		// query param statistics.latency_raw.other
		var qrStatisticsLatencyRawOther int64

		if o.StatisticsLatencyRawOther != nil {
			qrStatisticsLatencyRawOther = *o.StatisticsLatencyRawOther
		}
		qStatisticsLatencyRawOther := swag.FormatInt64(qrStatisticsLatencyRawOther)
		if qStatisticsLatencyRawOther != "" {

			if err := r.SetQueryParam("statistics.latency_raw.other", qStatisticsLatencyRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawRead != nil {

		// query param statistics.latency_raw.read
		var qrStatisticsLatencyRawRead int64

		if o.StatisticsLatencyRawRead != nil {
			qrStatisticsLatencyRawRead = *o.StatisticsLatencyRawRead
		}
		qStatisticsLatencyRawRead := swag.FormatInt64(qrStatisticsLatencyRawRead)
		if qStatisticsLatencyRawRead != "" {

			if err := r.SetQueryParam("statistics.latency_raw.read", qStatisticsLatencyRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawTotal != nil {

		// query param statistics.latency_raw.total
		var qrStatisticsLatencyRawTotal int64

		if o.StatisticsLatencyRawTotal != nil {
			qrStatisticsLatencyRawTotal = *o.StatisticsLatencyRawTotal
		}
		qStatisticsLatencyRawTotal := swag.FormatInt64(qrStatisticsLatencyRawTotal)
		if qStatisticsLatencyRawTotal != "" {

			if err := r.SetQueryParam("statistics.latency_raw.total", qStatisticsLatencyRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsLatencyRawWrite != nil {

		// query param statistics.latency_raw.write
		var qrStatisticsLatencyRawWrite int64

		if o.StatisticsLatencyRawWrite != nil {
			qrStatisticsLatencyRawWrite = *o.StatisticsLatencyRawWrite
		}
		qStatisticsLatencyRawWrite := swag.FormatInt64(qrStatisticsLatencyRawWrite)
		if qStatisticsLatencyRawWrite != "" {

			if err := r.SetQueryParam("statistics.latency_raw.write", qStatisticsLatencyRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsStatus != nil {

		// query param statistics.status
		var qrStatisticsStatus string

		if o.StatisticsStatus != nil {
			qrStatisticsStatus = *o.StatisticsStatus
		}
		qStatisticsStatus := qrStatisticsStatus
		if qStatisticsStatus != "" {

			if err := r.SetQueryParam("statistics.status", qStatisticsStatus); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawOther != nil {

		// query param statistics.throughput_raw.other
		var qrStatisticsThroughputRawOther int64

		if o.StatisticsThroughputRawOther != nil {
			qrStatisticsThroughputRawOther = *o.StatisticsThroughputRawOther
		}
		qStatisticsThroughputRawOther := swag.FormatInt64(qrStatisticsThroughputRawOther)
		if qStatisticsThroughputRawOther != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.other", qStatisticsThroughputRawOther); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawRead != nil {

		// query param statistics.throughput_raw.read
		var qrStatisticsThroughputRawRead int64

		if o.StatisticsThroughputRawRead != nil {
			qrStatisticsThroughputRawRead = *o.StatisticsThroughputRawRead
		}
		qStatisticsThroughputRawRead := swag.FormatInt64(qrStatisticsThroughputRawRead)
		if qStatisticsThroughputRawRead != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.read", qStatisticsThroughputRawRead); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawTotal != nil {

		// query param statistics.throughput_raw.total
		var qrStatisticsThroughputRawTotal int64

		if o.StatisticsThroughputRawTotal != nil {
			qrStatisticsThroughputRawTotal = *o.StatisticsThroughputRawTotal
		}
		qStatisticsThroughputRawTotal := swag.FormatInt64(qrStatisticsThroughputRawTotal)
		if qStatisticsThroughputRawTotal != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.total", qStatisticsThroughputRawTotal); err != nil {
				return err
			}
		}
	}

	if o.StatisticsThroughputRawWrite != nil {

		// query param statistics.throughput_raw.write
		var qrStatisticsThroughputRawWrite int64

		if o.StatisticsThroughputRawWrite != nil {
			qrStatisticsThroughputRawWrite = *o.StatisticsThroughputRawWrite
		}
		qStatisticsThroughputRawWrite := swag.FormatInt64(qrStatisticsThroughputRawWrite)
		if qStatisticsThroughputRawWrite != "" {

			if err := r.SetQueryParam("statistics.throughput_raw.write", qStatisticsThroughputRawWrite); err != nil {
				return err
			}
		}
	}

	if o.StatisticsTimestamp != nil {

		// query param statistics.timestamp
		var qrStatisticsTimestamp string

		if o.StatisticsTimestamp != nil {
			qrStatisticsTimestamp = *o.StatisticsTimestamp
		}
		qStatisticsTimestamp := qrStatisticsTimestamp
		if qStatisticsTimestamp != "" {

			if err := r.SetQueryParam("statistics.timestamp", qStatisticsTimestamp); err != nil {
				return err
			}
		}
	}

	if o.StatusContainerState != nil {

		// query param status.container_state
		var qrStatusContainerState string

		if o.StatusContainerState != nil {
			qrStatusContainerState = *o.StatusContainerState
		}
		qStatusContainerState := qrStatusContainerState
		if qStatusContainerState != "" {

			if err := r.SetQueryParam("status.container_state", qStatusContainerState); err != nil {
				return err
			}
		}
	}

	if o.StatusMapped != nil {

		// query param status.mapped
		var qrStatusMapped bool

		if o.StatusMapped != nil {
			qrStatusMapped = *o.StatusMapped
		}
		qStatusMapped := swag.FormatBool(qrStatusMapped)
		if qStatusMapped != "" {

			if err := r.SetQueryParam("status.mapped", qStatusMapped); err != nil {
				return err
			}
		}
	}

	if o.StatusReadOnly != nil {

		// query param status.read_only
		var qrStatusReadOnly bool

		if o.StatusReadOnly != nil {
			qrStatusReadOnly = *o.StatusReadOnly
		}
		qStatusReadOnly := swag.FormatBool(qrStatusReadOnly)
		if qStatusReadOnly != "" {

			if err := r.SetQueryParam("status.read_only", qStatusReadOnly); err != nil {
				return err
			}
		}
	}

	if o.StatusState != nil {

		// query param status.state
		var qrStatusState string

		if o.StatusState != nil {
			qrStatusState = *o.StatusState
		}
		qStatusState := qrStatusState
		if qStatusState != "" {

			if err := r.SetQueryParam("status.state", qStatusState); err != nil {
				return err
			}
		}
	}

	if o.SvmName != nil {

		// query param svm.name
		var qrSvmName string

		if o.SvmName != nil {
			qrSvmName = *o.SvmName
		}
		qSvmName := qrSvmName
		if qSvmName != "" {

			if err := r.SetQueryParam("svm.name", qSvmName); err != nil {
				return err
			}
		}
	}

	if o.SvmUUID != nil {

		// query param svm.uuid
		var qrSvmUUID string

		if o.SvmUUID != nil {
			qrSvmUUID = *o.SvmUUID
		}
		qSvmUUID := qrSvmUUID
		if qSvmUUID != "" {

			if err := r.SetQueryParam("svm.uuid", qSvmUUID); err != nil {
				return err
			}
		}
	}

	if o.Type != nil {

		// query param type
		var qrType string

		if o.Type != nil {
			qrType = *o.Type
		}
		qType := qrType
		if qType != "" {

			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}
	}

	if o.UUID != nil {

		// query param uuid
		var qrUUID string

		if o.UUID != nil {
			qrUUID = *o.UUID
		}
		qUUID := qrUUID
		if qUUID != "" {

			if err := r.SetQueryParam("uuid", qUUID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
