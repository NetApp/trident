// Code generated by go-swagger; DO NOT EDIT.

package n_v_me

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// NewNvmeSubsystemHostModifyParams creates a new NvmeSubsystemHostModifyParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewNvmeSubsystemHostModifyParams() *NvmeSubsystemHostModifyParams {
	return &NvmeSubsystemHostModifyParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewNvmeSubsystemHostModifyParamsWithTimeout creates a new NvmeSubsystemHostModifyParams object
// with the ability to set a timeout on a request.
func NewNvmeSubsystemHostModifyParamsWithTimeout(timeout time.Duration) *NvmeSubsystemHostModifyParams {
	return &NvmeSubsystemHostModifyParams{
		timeout: timeout,
	}
}

// NewNvmeSubsystemHostModifyParamsWithContext creates a new NvmeSubsystemHostModifyParams object
// with the ability to set a context for a request.
func NewNvmeSubsystemHostModifyParamsWithContext(ctx context.Context) *NvmeSubsystemHostModifyParams {
	return &NvmeSubsystemHostModifyParams{
		Context: ctx,
	}
}

// NewNvmeSubsystemHostModifyParamsWithHTTPClient creates a new NvmeSubsystemHostModifyParams object
// with the ability to set a custom HTTPClient for a request.
func NewNvmeSubsystemHostModifyParamsWithHTTPClient(client *http.Client) *NvmeSubsystemHostModifyParams {
	return &NvmeSubsystemHostModifyParams{
		HTTPClient: client,
	}
}

/*
NvmeSubsystemHostModifyParams contains all the parameters to send to the API endpoint

	for the nvme subsystem host modify operation.

	Typically these are written to a http.Request.
*/
type NvmeSubsystemHostModifyParams struct {

	/* Info.

	   The new property values for the NVMe subsystem host.

	*/
	Info *models.NvmeSubsystemHost

	/* Nqn.

	   The NVMe qualified name (NQN) used to identify the NVMe subsystem host.

	*/
	Nqn string

	/* SubsystemUUID.

	   The unique identifier of the NVMe subsystem.

	*/
	SubsystemUUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the nvme subsystem host modify params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *NvmeSubsystemHostModifyParams) WithDefaults() *NvmeSubsystemHostModifyParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the nvme subsystem host modify params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *NvmeSubsystemHostModifyParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the nvme subsystem host modify params
func (o *NvmeSubsystemHostModifyParams) WithTimeout(timeout time.Duration) *NvmeSubsystemHostModifyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the nvme subsystem host modify params
func (o *NvmeSubsystemHostModifyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the nvme subsystem host modify params
func (o *NvmeSubsystemHostModifyParams) WithContext(ctx context.Context) *NvmeSubsystemHostModifyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the nvme subsystem host modify params
func (o *NvmeSubsystemHostModifyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the nvme subsystem host modify params
func (o *NvmeSubsystemHostModifyParams) WithHTTPClient(client *http.Client) *NvmeSubsystemHostModifyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the nvme subsystem host modify params
func (o *NvmeSubsystemHostModifyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInfo adds the info to the nvme subsystem host modify params
func (o *NvmeSubsystemHostModifyParams) WithInfo(info *models.NvmeSubsystemHost) *NvmeSubsystemHostModifyParams {
	o.SetInfo(info)
	return o
}

// SetInfo adds the info to the nvme subsystem host modify params
func (o *NvmeSubsystemHostModifyParams) SetInfo(info *models.NvmeSubsystemHost) {
	o.Info = info
}

// WithNqn adds the nqn to the nvme subsystem host modify params
func (o *NvmeSubsystemHostModifyParams) WithNqn(nqn string) *NvmeSubsystemHostModifyParams {
	o.SetNqn(nqn)
	return o
}

// SetNqn adds the nqn to the nvme subsystem host modify params
func (o *NvmeSubsystemHostModifyParams) SetNqn(nqn string) {
	o.Nqn = nqn
}

// WithSubsystemUUID adds the subsystemUUID to the nvme subsystem host modify params
func (o *NvmeSubsystemHostModifyParams) WithSubsystemUUID(subsystemUUID string) *NvmeSubsystemHostModifyParams {
	o.SetSubsystemUUID(subsystemUUID)
	return o
}

// SetSubsystemUUID adds the subsystemUuid to the nvme subsystem host modify params
func (o *NvmeSubsystemHostModifyParams) SetSubsystemUUID(subsystemUUID string) {
	o.SubsystemUUID = subsystemUUID
}

// WriteToRequest writes these params to a swagger request
func (o *NvmeSubsystemHostModifyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Info != nil {
		if err := r.SetBodyParam(o.Info); err != nil {
			return err
		}
	}

	// path param nqn
	if err := r.SetPathParam("nqn", o.Nqn); err != nil {
		return err
	}

	// path param subsystem.uuid
	if err := r.SetPathParam("subsystem.uuid", o.SubsystemUUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
