// Code generated by go-swagger; DO NOT EDIT.

package security

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/netapp/trident/storage_drivers/ontap/api/rest/models"
)

// SecurityJitPrivilegeModifyReader is a Reader for the SecurityJitPrivilegeModify structure.
type SecurityJitPrivilegeModifyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecurityJitPrivilegeModifyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSecurityJitPrivilegeModifyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewSecurityJitPrivilegeModifyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSecurityJitPrivilegeModifyOK creates a SecurityJitPrivilegeModifyOK with default headers values
func NewSecurityJitPrivilegeModifyOK() *SecurityJitPrivilegeModifyOK {
	return &SecurityJitPrivilegeModifyOK{}
}

/*
SecurityJitPrivilegeModifyOK describes a response with status code 200, with default header values.

OK
*/
type SecurityJitPrivilegeModifyOK struct {
	Payload *models.SecurityJitPrivilege
}

// IsSuccess returns true when this security jit privilege modify o k response has a 2xx status code
func (o *SecurityJitPrivilegeModifyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this security jit privilege modify o k response has a 3xx status code
func (o *SecurityJitPrivilegeModifyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this security jit privilege modify o k response has a 4xx status code
func (o *SecurityJitPrivilegeModifyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this security jit privilege modify o k response has a 5xx status code
func (o *SecurityJitPrivilegeModifyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this security jit privilege modify o k response a status code equal to that given
func (o *SecurityJitPrivilegeModifyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the security jit privilege modify o k response
func (o *SecurityJitPrivilegeModifyOK) Code() int {
	return 200
}

func (o *SecurityJitPrivilegeModifyOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /security/jit-privileges/{owner.uuid}/{application}][%d] securityJitPrivilegeModifyOK %s", 200, payload)
}

func (o *SecurityJitPrivilegeModifyOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /security/jit-privileges/{owner.uuid}/{application}][%d] securityJitPrivilegeModifyOK %s", 200, payload)
}

func (o *SecurityJitPrivilegeModifyOK) GetPayload() *models.SecurityJitPrivilege {
	return o.Payload
}

func (o *SecurityJitPrivilegeModifyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SecurityJitPrivilege)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecurityJitPrivilegeModifyDefault creates a SecurityJitPrivilegeModifyDefault with default headers values
func NewSecurityJitPrivilegeModifyDefault(code int) *SecurityJitPrivilegeModifyDefault {
	return &SecurityJitPrivilegeModifyDefault{
		_statusCode: code,
	}
}

/*
SecurityJitPrivilegeModifyDefault describes a response with status code -1, with default header values.

Error
*/
type SecurityJitPrivilegeModifyDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// IsSuccess returns true when this security jit privilege modify default response has a 2xx status code
func (o *SecurityJitPrivilegeModifyDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this security jit privilege modify default response has a 3xx status code
func (o *SecurityJitPrivilegeModifyDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this security jit privilege modify default response has a 4xx status code
func (o *SecurityJitPrivilegeModifyDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this security jit privilege modify default response has a 5xx status code
func (o *SecurityJitPrivilegeModifyDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this security jit privilege modify default response a status code equal to that given
func (o *SecurityJitPrivilegeModifyDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the security jit privilege modify default response
func (o *SecurityJitPrivilegeModifyDefault) Code() int {
	return o._statusCode
}

func (o *SecurityJitPrivilegeModifyDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /security/jit-privileges/{owner.uuid}/{application}][%d] security_jit_privilege_modify default %s", o._statusCode, payload)
}

func (o *SecurityJitPrivilegeModifyDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /security/jit-privileges/{owner.uuid}/{application}][%d] security_jit_privilege_modify default %s", o._statusCode, payload)
}

func (o *SecurityJitPrivilegeModifyDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SecurityJitPrivilegeModifyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
