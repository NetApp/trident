// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/netapp/trident/frontend/crd/indexers (interfaces: Indexers)
//
// Generated by this command:
//
//	mockgen -destination=../../../mocks/mock_frontend/crd/indexers/mock_indexers.go github.com/netapp/trident/frontend/crd/indexers Indexers
//

// Package mock_indexers is a generated GoMock package.
package mock_indexers

import (
	reflect "reflect"

	indexers "github.com/netapp/trident/frontend/crd/indexers"
	gomock "go.uber.org/mock/gomock"
)

// MockIndexers is a mock of Indexers interface.
type MockIndexers struct {
	ctrl     *gomock.Controller
	recorder *MockIndexersMockRecorder
	isgomock struct{}
}

// MockIndexersMockRecorder is the mock recorder for MockIndexers.
type MockIndexersMockRecorder struct {
	mock *MockIndexers
}

// NewMockIndexers creates a new mock instance.
func NewMockIndexers(ctrl *gomock.Controller) *MockIndexers {
	mock := &MockIndexers{ctrl: ctrl}
	mock.recorder = &MockIndexersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIndexers) EXPECT() *MockIndexersMockRecorder {
	return m.recorder
}

// Activate mocks base method.
func (m *MockIndexers) Activate() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Activate")
}

// Activate indicates an expected call of Activate.
func (mr *MockIndexersMockRecorder) Activate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Activate", reflect.TypeOf((*MockIndexers)(nil).Activate))
}

// Deactivate mocks base method.
func (m *MockIndexers) Deactivate() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Deactivate")
}

// Deactivate indicates an expected call of Deactivate.
func (mr *MockIndexersMockRecorder) Deactivate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Deactivate", reflect.TypeOf((*MockIndexers)(nil).Deactivate))
}

// VolumeAttachmentIndexer mocks base method.
func (m *MockIndexers) VolumeAttachmentIndexer() indexers.VolumeAttachmentIndexer {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VolumeAttachmentIndexer")
	ret0, _ := ret[0].(indexers.VolumeAttachmentIndexer)
	return ret0
}

// VolumeAttachmentIndexer indicates an expected call of VolumeAttachmentIndexer.
func (mr *MockIndexersMockRecorder) VolumeAttachmentIndexer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VolumeAttachmentIndexer", reflect.TypeOf((*MockIndexers)(nil).VolumeAttachmentIndexer))
}
