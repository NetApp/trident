// Copyright 2025 NetApp, Inc. All Rights Reserved.

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/netapp/trident/persistent_store/crd/apis/netapp/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TridentVolumeReferenceLister helps list TridentVolumeReferences.
type TridentVolumeReferenceLister interface {
	// List lists all TridentVolumeReferences in the indexer.
	List(selector labels.Selector) (ret []*v1.TridentVolumeReference, err error)
	// TridentVolumeReferences returns an object that can list and get TridentVolumeReferences.
	TridentVolumeReferences(namespace string) TridentVolumeReferenceNamespaceLister
	TridentVolumeReferenceListerExpansion
}

// tridentVolumeReferenceLister implements the TridentVolumeReferenceLister interface.
type tridentVolumeReferenceLister struct {
	indexer cache.Indexer
}

// NewTridentVolumeReferenceLister returns a new TridentVolumeReferenceLister.
func NewTridentVolumeReferenceLister(indexer cache.Indexer) TridentVolumeReferenceLister {
	return &tridentVolumeReferenceLister{indexer: indexer}
}

// List lists all TridentVolumeReferences in the indexer.
func (s *tridentVolumeReferenceLister) List(selector labels.Selector) (ret []*v1.TridentVolumeReference, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.TridentVolumeReference))
	})
	return ret, err
}

// TridentVolumeReferences returns an object that can list and get TridentVolumeReferences.
func (s *tridentVolumeReferenceLister) TridentVolumeReferences(namespace string) TridentVolumeReferenceNamespaceLister {
	return tridentVolumeReferenceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TridentVolumeReferenceNamespaceLister helps list and get TridentVolumeReferences.
type TridentVolumeReferenceNamespaceLister interface {
	// List lists all TridentVolumeReferences in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.TridentVolumeReference, err error)
	// Get retrieves the TridentVolumeReference from the indexer for a given namespace and name.
	Get(name string) (*v1.TridentVolumeReference, error)
	TridentVolumeReferenceNamespaceListerExpansion
}

// tridentVolumeReferenceNamespaceLister implements the TridentVolumeReferenceNamespaceLister
// interface.
type tridentVolumeReferenceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TridentVolumeReferences in the indexer for a given namespace.
func (s tridentVolumeReferenceNamespaceLister) List(selector labels.Selector) (ret []*v1.TridentVolumeReference, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.TridentVolumeReference))
	})
	return ret, err
}

// Get retrieves the TridentVolumeReference from the indexer for a given namespace and name.
func (s tridentVolumeReferenceNamespaceLister) Get(name string) (*v1.TridentVolumeReference, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("tridentvolumereference"), name)
	}
	return obj.(*v1.TridentVolumeReference), nil
}
