// Copyright 2025 NetApp, Inc. All Rights Reserved.

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/netapp/trident/persistent_store/crd/apis/netapp/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TridentVolumePublicationLister helps list TridentVolumePublications.
type TridentVolumePublicationLister interface {
	// List lists all TridentVolumePublications in the indexer.
	List(selector labels.Selector) (ret []*v1.TridentVolumePublication, err error)
	// TridentVolumePublications returns an object that can list and get TridentVolumePublications.
	TridentVolumePublications(namespace string) TridentVolumePublicationNamespaceLister
	TridentVolumePublicationListerExpansion
}

// tridentVolumePublicationLister implements the TridentVolumePublicationLister interface.
type tridentVolumePublicationLister struct {
	indexer cache.Indexer
}

// NewTridentVolumePublicationLister returns a new TridentVolumePublicationLister.
func NewTridentVolumePublicationLister(indexer cache.Indexer) TridentVolumePublicationLister {
	return &tridentVolumePublicationLister{indexer: indexer}
}

// List lists all TridentVolumePublications in the indexer.
func (s *tridentVolumePublicationLister) List(selector labels.Selector) (ret []*v1.TridentVolumePublication, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.TridentVolumePublication))
	})
	return ret, err
}

// TridentVolumePublications returns an object that can list and get TridentVolumePublications.
func (s *tridentVolumePublicationLister) TridentVolumePublications(namespace string) TridentVolumePublicationNamespaceLister {
	return tridentVolumePublicationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TridentVolumePublicationNamespaceLister helps list and get TridentVolumePublications.
type TridentVolumePublicationNamespaceLister interface {
	// List lists all TridentVolumePublications in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.TridentVolumePublication, err error)
	// Get retrieves the TridentVolumePublication from the indexer for a given namespace and name.
	Get(name string) (*v1.TridentVolumePublication, error)
	TridentVolumePublicationNamespaceListerExpansion
}

// tridentVolumePublicationNamespaceLister implements the TridentVolumePublicationNamespaceLister
// interface.
type tridentVolumePublicationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TridentVolumePublications in the indexer for a given namespace.
func (s tridentVolumePublicationNamespaceLister) List(selector labels.Selector) (ret []*v1.TridentVolumePublication, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.TridentVolumePublication))
	})
	return ret, err
}

// Get retrieves the TridentVolumePublication from the indexer for a given namespace and name.
func (s tridentVolumePublicationNamespaceLister) Get(name string) (*v1.TridentVolumePublication, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("tridentvolumepublication"), name)
	}
	return obj.(*v1.TridentVolumePublication), nil
}
