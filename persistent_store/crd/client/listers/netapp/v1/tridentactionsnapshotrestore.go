// Copyright 2025 NetApp, Inc. All Rights Reserved.

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/netapp/trident/persistent_store/crd/apis/netapp/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TridentActionSnapshotRestoreLister helps list TridentActionSnapshotRestores.
type TridentActionSnapshotRestoreLister interface {
	// List lists all TridentActionSnapshotRestores in the indexer.
	List(selector labels.Selector) (ret []*v1.TridentActionSnapshotRestore, err error)
	// TridentActionSnapshotRestores returns an object that can list and get TridentActionSnapshotRestores.
	TridentActionSnapshotRestores(namespace string) TridentActionSnapshotRestoreNamespaceLister
	TridentActionSnapshotRestoreListerExpansion
}

// tridentActionSnapshotRestoreLister implements the TridentActionSnapshotRestoreLister interface.
type tridentActionSnapshotRestoreLister struct {
	indexer cache.Indexer
}

// NewTridentActionSnapshotRestoreLister returns a new TridentActionSnapshotRestoreLister.
func NewTridentActionSnapshotRestoreLister(indexer cache.Indexer) TridentActionSnapshotRestoreLister {
	return &tridentActionSnapshotRestoreLister{indexer: indexer}
}

// List lists all TridentActionSnapshotRestores in the indexer.
func (s *tridentActionSnapshotRestoreLister) List(selector labels.Selector) (ret []*v1.TridentActionSnapshotRestore, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.TridentActionSnapshotRestore))
	})
	return ret, err
}

// TridentActionSnapshotRestores returns an object that can list and get TridentActionSnapshotRestores.
func (s *tridentActionSnapshotRestoreLister) TridentActionSnapshotRestores(namespace string) TridentActionSnapshotRestoreNamespaceLister {
	return tridentActionSnapshotRestoreNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TridentActionSnapshotRestoreNamespaceLister helps list and get TridentActionSnapshotRestores.
type TridentActionSnapshotRestoreNamespaceLister interface {
	// List lists all TridentActionSnapshotRestores in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.TridentActionSnapshotRestore, err error)
	// Get retrieves the TridentActionSnapshotRestore from the indexer for a given namespace and name.
	Get(name string) (*v1.TridentActionSnapshotRestore, error)
	TridentActionSnapshotRestoreNamespaceListerExpansion
}

// tridentActionSnapshotRestoreNamespaceLister implements the TridentActionSnapshotRestoreNamespaceLister
// interface.
type tridentActionSnapshotRestoreNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TridentActionSnapshotRestores in the indexer for a given namespace.
func (s tridentActionSnapshotRestoreNamespaceLister) List(selector labels.Selector) (ret []*v1.TridentActionSnapshotRestore, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.TridentActionSnapshotRestore))
	})
	return ret, err
}

// Get retrieves the TridentActionSnapshotRestore from the indexer for a given namespace and name.
func (s tridentActionSnapshotRestoreNamespaceLister) Get(name string) (*v1.TridentActionSnapshotRestore, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("tridentactionsnapshotrestore"), name)
	}
	return obj.(*v1.TridentActionSnapshotRestore), nil
}
