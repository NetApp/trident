// Copyright 2025 NetApp, Inc. All Rights Reserved.

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/netapp/trident/persistent_store/crd/apis/netapp/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TridentNodeRemediationLister helps list TridentNodeRemediations.
type TridentNodeRemediationLister interface {
	// List lists all TridentNodeRemediations in the indexer.
	List(selector labels.Selector) (ret []*v1.TridentNodeRemediation, err error)
	// TridentNodeRemediations returns an object that can list and get TridentNodeRemediations.
	TridentNodeRemediations(namespace string) TridentNodeRemediationNamespaceLister
	TridentNodeRemediationListerExpansion
}

// tridentNodeRemediationLister implements the TridentNodeRemediationLister interface.
type tridentNodeRemediationLister struct {
	indexer cache.Indexer
}

// NewTridentNodeRemediationLister returns a new TridentNodeRemediationLister.
func NewTridentNodeRemediationLister(indexer cache.Indexer) TridentNodeRemediationLister {
	return &tridentNodeRemediationLister{indexer: indexer}
}

// List lists all TridentNodeRemediations in the indexer.
func (s *tridentNodeRemediationLister) List(selector labels.Selector) (ret []*v1.TridentNodeRemediation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.TridentNodeRemediation))
	})
	return ret, err
}

// TridentNodeRemediations returns an object that can list and get TridentNodeRemediations.
func (s *tridentNodeRemediationLister) TridentNodeRemediations(namespace string) TridentNodeRemediationNamespaceLister {
	return tridentNodeRemediationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TridentNodeRemediationNamespaceLister helps list and get TridentNodeRemediations.
type TridentNodeRemediationNamespaceLister interface {
	// List lists all TridentNodeRemediations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.TridentNodeRemediation, err error)
	// Get retrieves the TridentNodeRemediation from the indexer for a given namespace and name.
	Get(name string) (*v1.TridentNodeRemediation, error)
	TridentNodeRemediationNamespaceListerExpansion
}

// tridentNodeRemediationNamespaceLister implements the TridentNodeRemediationNamespaceLister
// interface.
type tridentNodeRemediationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TridentNodeRemediations in the indexer for a given namespace.
func (s tridentNodeRemediationNamespaceLister) List(selector labels.Selector) (ret []*v1.TridentNodeRemediation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.TridentNodeRemediation))
	})
	return ret, err
}

// Get retrieves the TridentNodeRemediation from the indexer for a given namespace and name.
func (s tridentNodeRemediationNamespaceLister) Get(name string) (*v1.TridentNodeRemediation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("tridentnoderemediation"), name)
	}
	return obj.(*v1.TridentNodeRemediation), nil
}
