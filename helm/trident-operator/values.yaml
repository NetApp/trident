# Default values for standalone.
# This is a YAML-formatted file.

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

## Pod Annotations
podAnnotations: {}

## Deployment Annotations
deploymentAnnotations: {}

## Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

## Affinity for pod assignment
## The following affinity configuration ensures that the Trident operator will only be scheduled on nodes with the specified architecture and OS, Hence, do not modify this section. To add custom affinity rules, please append your content to this configuration as needed
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - arm64
              - amd64
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
              

# tridentControllerPluginNodeSelector additional nodeSelectors for the Pod running the Trident Controller CSI Plugin.
# tridentControllerPluginNodeSelector : {}

# tridentControllerPluginTolerations overrides tolerations for the Pod running the Trident Controler CSI Plugin.
# tridentControllerPluginTolerations: []

# tridentNodePluginNodeSelector additional nodeSelectors for Pods running the Trident Node CSI Plugin.
# tridentNodePluginNodeSelector : {}

# tridentNodePluginTolerations overrides tolerations for Pods running the Trident Node CSI Plugin. 
# tridentNodePluginTolerations: []



# imageRegistry identifies the registry for the trident-operator, trident, and other images.  Leave empty to accept the default.
imageRegistry: ""

# imagePullPolicy sets the image pull policy for the trident-operator.
imagePullPolicy: IfNotPresent

# imagePullSecrets sets the image pull secrets for the trident-operator, trident, and other images.
imagePullSecrets: []

# kubeletDir allows overriding the host location of kubelet's internal state. (default "/var/lib/kubelet").
kubeletDir: ""


# operatorLogLevel allows the log level of the Trident operator to be set to one of these: 
# trace, debug, info, warn, error, fatal.
# operatorLogLevel: "info"

# operatorDebug allows the log level of the Trident operator to be set to debug
operatorDebug: true

# operatorImage allows the complete override of the image for trident-operator.
operatorImage: ""

# operatorImageTag allows overriding the tag of the trident-operator image.
operatorImageTag: ""


# tridentIPv6 allows enabling Trident to work in IPv6 clusters.
tridentIPv6: false

# tridentK8sTimeout overrides the default 30-second timeout for most Kubernetes API operations (if non-zero, in seconds).
tridentK8sTimeout: 0

# tridentHttpRequestTimeout (duration) overrides the default 90-second timeout for the HTTP requests, with 0s being an
# infinite duration for the timeout. Negative values are not allowed.
tridentHttpRequestTimeout: "90s"

# tridentSilenceAutosupport allows disabling Trident's periodic Autosupport reporting.
tridentSilenceAutosupport: false

# tridentAutosupportImage allows the complete override of the image for Trident's Autosupport container.
tridentAutosupportImage: ""

# tridentAutosupportImageTag allows overriding the tag of the image for Trident's Autosupport container.
tridentAutosupportImageTag: "25.02"

# tridentAutosupportProxy allows Trident's autosupport container to phone home via an HTTP proxy.
tridentAutosupportProxy: ""

# tridentAutosupportInsecure allows Trident's autosupport container to skip TLS verification
tridentAutosupportInsecure: false

# tridentLogFormat sets the Trident logging format (text or json).
tridentLogFormat: "text"

# tridentDisableAuditLog disables Trident's audit logger.
tridentDisableAuditLog: true

# tridentLogLevel allows the log level of Trident to be set to one of these: trace, debug, info, warn, error, fatal.
#tridentLogLevel: "info"

# tridentDebug allows the log level of Trident to be set to debug
tridentDebug: false

# tridentLogWorkflows allows specific Trident workflows to be enabled for trace logging or log suppression.
tridentLogWorkflows: ""

# tridentLogLayers allows specific Trident layers to be enabled for trace logging or log suppression.
tridentLogLayers: ""

# tridentImage allows the complete override of the image for Trident.
tridentImage: ""

# tridentImageTag allows overriding the tag of the image for Trident.
tridentImageTag: ""

# (Deprecated) tridentEnableNodePrep attempts to automatically install required packages on nodes.
tridentEnableNodePrep: false

# (Deprecated) tridentSkipK8sVersionCheck allows overriding the k8s version limit for Trident.
tridentSkipK8sVersionCheck: false

# tridentProbePort allows overriding the default port used for k8s liveness/readiness probes.
tridentProbePort: ""

# windows allows Trident to be installed on Windows worker node.
windows: false

# enableForceDetach allows enabling the force detach feature.
enableForceDetach: false

# cloudProvider indicates which cloud platform Trident is running on.
cloudProvider: ""

# cloudIdentity indicates the identity that needs to be set on service account.
cloudIdentity: ""

# enableACP allows enabling the Trident-ACP container to run.
enableACP: false

# acpImage indicates the image the Trident-ACP container should pull.
acpImage: ""

# iscsiSelfHealingInterval is the interval at which the iSCSI self-healing job is invoked
iscsiSelfHealingInterval: "5m0s"

# iscsiSelfHealingWaitTime is the wait time after which iSCSI self-healing attempts to fix stale sessions
iscsiSelfHealingWaitTime: "7m0s"

# configuratorReconcileInterval is the resource refresh rate for the auto generated backends.
configuratorReconcileInterval: 30m0s

# forceInstallRancherClusterRoles will install a Rancher specific ClusterRole and ClusterRoleBinding when set to true.
# When set to false, the ClusterRole and ClusterRoleBinding will be installed only when a Rancher cluster is detected. 
forceInstallRancherClusterRoles: false

# Auto generated ANF backend related fields consumed by the configurator controller.
anfConfigurator:
  enabled: false
  virtualNetwork: ""
  subnet: ""
  subscriptionID: ""
  tenantID: ""
  location: ""
  clientCredentials: ""
  capacityPools: []
  netappAccounts: []
  resourceGroups: []
  customerEncryptionKeys: {}
  
# Auto generated ONTAP backend related fields consumed by the configurator controller.
ontapConfigurator:
  enabled: false
  svms:
    - fsxnID: ''
      svmName: ''
      protocols: []
      authType: ''
